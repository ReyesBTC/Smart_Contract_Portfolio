{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFail_CloseTradeInvalidPseudonym",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFail_CloseTradeInvalidTimestamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFail_OpenTradeEmptyPseudonym",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_CloseTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_OpenTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506149d88061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620001155760003560e01c806386a8c00a11620000a3578063ba414fa6116200006e578063ba414fa614620001ca578063cc9d916b14620001e5578063e20c9f7114620001ef578063fa7626d414620001f957600080fd5b806386a8c00a14620001a2578063890d8b8014620001ac578063916a17c614620001b6578063b5508aa914620001c057600080fd5b80633f7286f411620000e45780633f7286f4146200015c57806366d9a9a01462000166578063771e081e146200017f57806385226c81146200018957600080fd5b806307e87bf8146200011a5780630a9254e414620001265780631ed7831c14620001305780633e5e3c231462000152575b600080fd5b6200012462000207565b005b6200012462000287565b6200013a62000402565b604051620001499190620011ff565b60405180910390f35b6200013a62000466565b6200013a620004c8565b620001706200052a565b6040516200014991906200124e565b620001246200061d565b62000193620006fc565b60405162000149919062001359565b62000124620007d6565b62000124620008f4565b62000170620009ae565b6200019362000a98565b620001d462000b72565b604051901515815260200162000149565b6200012462000ca7565b6200013a62000d72565b600054620001d49060ff1681565b601b54604051632271c33360e01b81526001600160a01b0390911690632271c333906200023a90600090600401620013f8565b6000604051808303816000875af11580156200025a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000284919081019062001518565b50565b620186a06040516200029990620011e3565b908152602001604051809103906000f080158015620002bc573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055604051610bb890620002ef90620011e3565b908152602001604051809103906000f08015801562000312573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b03929092169190911790556040516064906200034490620011e3565b908152602001604051809103906000f08015801562000367573d6000803e3d6000fd5b50601e80546001600160a01b0319166001600160a01b03928316908117909155601c54601d5460405191841693169190620003a290620011f1565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620003df573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d8054806020026020016040519081016040528092919081815260200182805480156200045c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200043d575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156200045c576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200043d575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156200045c576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200043d575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015620006145760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620005fb57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620005bc5790505b505050505081525050815260200190600101906200054e565b50505050905090565b601b54604051632271c33360e01b81526000916001600160a01b031690632271c333906200065090849060040162001630565b6000604051808303816000875af115801562000670573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200069a919081019062001518565b9050620006c9816020015160405180604001604052806005815260200164416c69636560d81b81525062000dd4565b8051620006ec906002811115620006e457620006e4620013bf565b600062000ed9565b620002848160c001514262000ed9565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156200061457838290600052602060002001805462000742906200166c565b80601f016020809104026020016040519081016040528092919081815260200182805462000770906200166c565b8015620007c15780601f106200079557610100808354040283529160200191620007c1565b820191906000526020600020905b815481529060010190602001808311620007a357829003601f168201915b50505050508152602001906001019062000720565b601b54604051632271c33360e01b81526000916001600160a01b031690632271c333906200080990849060040162001630565b6000604051808303816000875af115801562000829573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000853919081019062001518565b60c0810151601b546040516358bda8cf60e11b815292935090916000916001600160a01b03169063b17b519e9062000890908590600401620016a8565b6000604051808303816000875af1158015620008b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620008da919081019062001518565b9050620008ef60008261010001511162000fbe565b505050565b601b54604051632271c33360e01b81526001600160a01b0390911690632271c33390620009279060009060040162001630565b6000604051808303816000875af115801562000947573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000971919081019062001518565b50601b546001600160a01b031663b17b519e62000990426001620016ea565b6040518263ffffffff1660e01b81526004016200023a9190620016a8565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015620006145760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000a7f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000a405790505b50505050508152505081526020019060010190620009d2565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156200061457838290600052602060002001805462000ade906200166c565b80601f016020809104026020016040519081016040528092919081815260200182805462000b0c906200166c565b801562000b5d5780601f1062000b315761010080835404028352916020019162000b5d565b820191906000526020600020905b81548152906001019060200180831162000b3f57829003601f168201915b50505050508152602001906001019062000abc565b60008054610100900460ff161562000b935750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000ca25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000c24917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001700565b60408051601f198184030181529082905262000c409162001733565b6000604051808303816000865af19150503d806000811462000c7f576040519150601f19603f3d011682016040523d82523d6000602084013e62000c84565b606091505b509150508080602001905181019062000c9e919062001751565b9150505b919050565b601b54604051632271c33360e01b81526001600160a01b0390911690632271c3339062000cda9060009060040162001630565b6000604051808303816000875af115801562000cfa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000d24919081019062001518565b50601b54604080516358bda8cf60e11b8152426004820152602481019190915260036044820152622137b160e91b60648201526001600160a01b039091169063b17b519e906084016200023a565b6060600c8054806020026020016040519081016040528092919081815260200182805480156200045c576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200043d575050505050905090565b62000de0828262001036565b62000ed5577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000e519060208082526023908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201526265735d60e81b606082015260800190565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf188260405162000e8a919062001775565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf188160405162000ec39190620017bc565b60405180910390a162000ed5620010d0565b5050565b80821462000ed5577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000f4c9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000f859190620017e7565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162000ec3919062001820565b8062000284577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620010249060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a162000284620010d0565b805182516001919003620010c65760005b8351811015620010bf578281815181106200106657620010666200184b565b602001015160f81c60f81b6001600160f81b0319168482815181106200109057620010906200184b565b01602001516001600160f81b03191614620010aa57600091505b80620010b68162001861565b91505062001047565b50620010ca565b5060005b92915050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620011d25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200116d929160200162001700565b60408051601f1981840301815290829052620011899162001733565b6000604051808303816000865af19150503d8060008114620011c8576040519150601f19603f3d011682016040523d82523d6000602084013e620011cd565b606091505b505050505b6000805461ff001916610100179055565b610148806200187e83390190565b612fdd80620019c683390190565b6020808252825182820181905260009190848201906040850190845b81811015620012425783516001600160a01b0316835292840192918401916001016200121b565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620012f657898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620012e05783516001600160e01b0319168252928b019260019290920191908b0190620012b4565b50978a0197955050509187019160010162001276565b50919998505050505050505050565b60005b838110156200132257818101518382015260200162001308565b50506000910152565b600081518084526200134581602086016020860162001305565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620013b257603f198886030184526200139f8583516200132b565b9450928501929085019060010162001380565b5092979650505050505050565b634e487b7160e01b600052602160045260246000fd5b60038110620013f457634e487b7160e01b600052602160045260246000fd5b9052565b620014048183620013d5565b604060208201819052600090820152606001919050565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff811182821017156200145857620014586200141b565b60405290565b80516003811062000ca257600080fd5b600082601f8301126200148057600080fd5b815167ffffffffffffffff808211156200149e576200149e6200141b565b604051601f8301601f19908116603f01168101908282118183101715620014c957620014c96200141b565b81604052838152866020858801011115620014e357600080fd5b620014f684602083016020890162001305565b9695505050505050565b80516001600160a01b038116811462000ca257600080fd5b6000602082840312156200152b57600080fd5b815167ffffffffffffffff808211156200154457600080fd5b9083019061012082860312156200155a57600080fd5b6200156462001431565b6200156f836200145e565b81526020830151828111156200158457600080fd5b62001592878286016200146e565b602083015250620015a66040840162001500565b6040820152606083015182811115620015be57600080fd5b620015cc878286016200146e565b606083015250608083015182811115620015e557600080fd5b620015f3878286016200146e565b60808301525060a083015160a082015260c083015160c082015260e083015160e08201526101009150818301518282015280935050505092915050565b6200163c8183620013d5565b60406020820152600062001665604083016005815264416c69636560d81b602082015260400190565b9392505050565b600181811c908216806200168157607f821691505b602082108103620016a257634e487b7160e01b600052602260045260246000fd5b50919050565b81815260406020820152600062001665604083016005815264416c69636560d81b602082015260400190565b634e487b7160e01b600052601160045260246000fd5b80820180821115620010ca57620010ca620016d4565b6001600160e01b03198316815281516000906200172581600485016020870162001305565b919091016004019392505050565b600082516200174781846020870162001305565b9190910192915050565b6000602082840312156200176457600080fd5b815180151581146200166557600080fd5b604081526000620017a060408301600a8152690808080808081319599d60b21b602082015260400190565b8281036020840152620017b481856200132b565b949350505050565b604081526000620017a060408301600a8152690808080808149a59da1d60b21b602082015260400190565b6040815260006200181260408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006200181260408301600a8152690808080808149a59da1d60b21b602082015260400190565b634e487b7160e01b600052603260045260246000fd5b600060018201620018765762001876620016d4565b506001019056fe608060405234801561001057600080fd5b5060405161014838038061014883398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b60ea8061005e6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c8063a035b1fe146041578063f7a3080614605c578063feaf968c14606e575b600080fd5b604960005481565b6040519081526020015b60405180910390f35b606c6067366004609c565b600055565b005b60008054604080518381526020810192909252810182905260608101829052608081019190915260a0016053565b60006020828403121560ad57600080fd5b503591905056fea2646970667358221220c996393b5b7a02bec6f7add29f434bea734ea15e6b15458cb0767664a6f17cd064736f6c63430008150033608060405260006007553480156200001657600080fd5b5060405162002fdd38038062002fdd83398101604081905262000039916200014f565b6040805160208101909152600081526200005381620000ce565b506200005f33620000e0565b5050600480546001600160a01b031990811673f4030086522a5beea4988f8ca5b36dbc97bee88c17909155600580548216735f4ec3df9cbd43714fe2740f5e3616155c5b841917905560068054909116732c1d072e956affc0d435cb7ac38ef18d24d9127c179055506200030a565b6002620000dc82826200023e565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200014a57600080fd5b919050565b6000806000606084860312156200016557600080fd5b620001708462000132565b9250620001806020850162000132565b9150620001906040850162000132565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001c457607f821691505b602082108103620001e557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023957600081815260208120601f850160051c81016020861015620002145750805b601f850160051c820191505b81811015620002355782815560010162000220565b5050505b505050565b81516001600160401b038111156200025a576200025a62000199565b62000272816200026b8454620001af565b84620001eb565b602080601f831160018114620002aa5760008415620002915750858301515b600019600386901b1c1916600185901b17855562000235565b600085815260208120601f198616915b82811015620002db57888601518255948401946001909101908401620002ba565b5085821015620002fa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612cc3806200031a6000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c80636914db60116100a2578063a22cb46511610071578063a22cb46514610251578063b17b519e14610264578063e985e9c514610277578063f242432a146102b3578063f2fde38b146102c657600080fd5b80636914db60146101f3578063715018a61461021b5780638da5cb5b146102235780639522223f1461023e57600080fd5b80632271c333116100de5780632271c3331461018d5780632eb2c2d6146101ad5780634485de45146101c05780634e1273f4146101e057600080fd5b8062fdd58e1461010f57806301ffc9a71461013557806302fe5305146101585780630e89341c1461016d575b600080fd5b61012261011d366004611e16565b6102d9565b6040519081526020015b60405180910390f35b610148610143366004611e56565b610372565b604051901515815260200161012c565b61016b610166366004611f2f565b6103c2565b005b61018061017b366004611f6b565b6103d6565b60405161012c9190611fd4565b6101a061019b366004611fe7565b61046a565b60405161012c9190612072565b61016b6101bb3660046121c6565b61084b565b6101d36101ce366004611f2f565b610897565b60405161012c91906122aa565b6101d36101ee3660046122bd565b610906565b610206610201366004611f6b565b610a2f565b60405161012c9998979695949392919061237d565b61016b610c21565b6003546040516001600160a01b03909116815260200161012c565b61012261024c3660046123ff565b610c35565b61016b61025f366004612443565b610c75565b6101a061027236600461247f565b610c84565b6101486102853660046124af565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61016b6102c13660046124e2565b6113b1565b61016b6102d4366004612546565b6113f6565b60006001600160a01b0383166103495760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806103a357506001600160e01b031982166303a24d0760e21b145b8061036c57506301ffc9a760e01b6001600160e01b031983161461036c565b6103ca61146c565b6103d3816114c6565b50565b6060600280546103e590612561565b80601f016020809104026020016040519081016040528092919081815260200182805461041190612561565b801561045e5780601f106104335761010080835404028352916020019161045e565b820191906000526020600020905b81548152906001019060200180831161044157829003601f168201915b50505050509050919050565b610472611da4565b81516000036104c35760405162461bcd60e51b815260206004820152601960248201527f50736575646f6e796d2063616e6e6f7420626520656d707479000000000000006044820152606401610340565b600080600754426104d491906125b1565b90506104de611da4565b60008660028111156104f2576104f261203a565b03610586576104ff6114d2565b6040805161012081019091529093508060008152602001868152602001336001600160a01b03168152602001604051806060016040528060388152602001612b56603891398152602001604051806060016040528060318152602001612c5d60319139815260200184815260200142815260200160008152602001600081525090506106d2565b600186600281111561059a5761059a61203a565b0361062e576105a761154a565b6040805161012081019091529093508060018152602001868152602001336001600160a01b031681526020016040518060600160405280603a8152602001612b1c603a91398152602001604051806060016040528060318152602001612ac360319139815260200184815260200142815260200160008152602001600081525090506106d2565b60028660028111156106425761064261203a565b036106d25761064f6115a0565b6040805161012081019091529093508060028152602001868152602001336001600160a01b031681526020016040518060600160405280603b8152602001612a88603b91398152602001604051806060016040528060328152602001612bdc60329139815260200184815260200142815260200160008152602001600081525090505b60008281526008602052604090208151815483929190829060ff191660018360028111156107025761070261203a565b02179055506020820151600182019061071b908261260f565b5060408201516002820180546001600160a01b0319166001600160a01b0390921691909117905560608201516003820190610756908261260f565b506080820151600482019061076b908261260f565b5060a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801559050506009856040516107a891906126ce565b90815260408051918290036020908101832080546001818101835560009283528383209091018790559184019092529082526107e791339185916115f6565b600780549060006107f7836126ea565b9190505550336001600160a01b0316827f7f7022508cbdab5bbbd9671d98fb9de73ec36e08b8d2cc4418d258c50af26f3587864260405161083a93929190612703565b60405180910390a395945050505050565b6001600160a01b03851633148061086757506108678533610285565b6108835760405162461bcd60e51b815260040161034090612728565b610890858585858561170a565b5050505050565b60606009826040516108a991906126ce565b908152604080519182900360209081018320805480830285018301909352828452919083018282801561045e57602002820191906000526020600020905b8154815260200190600101908083116108e75750505050509050919050565b6060815183511461096b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610340565b600083516001600160401b0381111561098657610986611e7a565b6040519080825280602002602001820160405280156109af578160200160208202803683370190505b50905060005b8451811015610a27576109fa8582815181106109d3576109d3612776565b60200260200101518583815181106109ed576109ed612776565b60200260200101516102d9565b828281518110610a0c57610a0c612776565b6020908102919091010152610a20816126ea565b90506109b5565b509392505050565b6008602052600090815260409020805460018201805460ff9092169291610a5590612561565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8190612561565b8015610ace5780601f10610aa357610100808354040283529160200191610ace565b820191906000526020600020905b815481529060010190602001808311610ab157829003601f168201915b505050600284015460038501805494956001600160a01b03909216949193509150610af890612561565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2490612561565b8015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b505050505090806004018054610b8690612561565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb290612561565b8015610bff5780601f10610bd457610100808354040283529160200191610bff565b820191906000526020600020905b815481529060010190602001808311610be257829003601f168201915b5050505050908060050154908060060154908060070154908060080154905089565b610c2961146c565b610c3360006118e7565b565b81516020818401810180516009825292820191850191909120919052805482908110610c6057600080fd5b90600052602060002001600091509150505481565b610c80338383611939565b5050565b610c8c611da4565b600083815260086020526040808220815161012081019092528054829060ff166002811115610cbd57610cbd61203a565b6002811115610cce57610cce61203a565b8152602001600182018054610ce290612561565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0e90612561565b8015610d5b5780601f10610d3057610100808354040283529160200191610d5b565b820191906000526020600020905b815481529060010190602001808311610d3e57829003601f168201915b505050918352505060028201546001600160a01b03166020820152600382018054604090920191610d8b90612561565b80601f0160208091040260200160405190810160405280929190818152602001828054610db790612561565b8015610e045780601f10610dd957610100808354040283529160200191610e04565b820191906000526020600020905b815481529060010190602001808311610de757829003601f168201915b50505050508152602001600482018054610e1d90612561565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4990612561565b8015610e965780601f10610e6b57610100808354040283529160200191610e96565b820191906000526020600020905b815481529060010190602001808311610e7957829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815250509050336001600160a01b031681604001516001600160a01b031614610f405760405162461bcd60e51b815260206004820152602960248201527f4f6e6c792074686520736f75726365206f66207468652074726164652063616e6044820152680818db1bdcd9481a5d60ba1b6064820152608401610340565b602080820151604051610f5392016126ce565b6040516020818303038152906040528051906020012083604051602001610f7a91906126ce565b6040516020818303038152906040528051906020012014610fd85760405162461bcd60e51b81526020600482015260186024820152770a0e6caeac8dedcf2da40c8decae640dcdee840dac2e8c6d60431b6044820152606401610340565b60e08101511561102a5760405162461bcd60e51b815260206004820152601760248201527f547261646520697320616c726561647920636c6f7365640000000000000000006044820152606401610340565b80600080835160028111156110415761104161203a565b036110b15761104e6114d2565b61010083018190524260e084015260a084015190915081111561108e57604051806060016040528060278152602001612a616027913960808301526111b7565b604051806060016040528060278152602001612bb56027913960808301526111b7565b6001835160028111156110c6576110c661203a565b03611136576110d361154a565b61010083018190524260e084015260a084015190915081111561111357604051806060016040528060278152602001612b8e6027913960808301526111b7565b604051806060016040528060278152602001612c366027913960808301526111b7565b60028351600281111561114b5761114b61203a565b036111b7576111586115a0565b61010083018190524260e084015260a084015190915081111561119857604051806060016040528060288152602001612c0e6028913960808301526111b7565b604051806060016040528060288152602001612af46028913960808301525b6020808401516040516111ca92016126ce565b60405160208183030381529060405280519060200120856040516020016111f191906126ce565b604051602081830303815290604052805190602001201461124f5760405162461bcd60e51b81526020600482015260186024820152770a0e6caeac8dedcf2da40c8decae640dcdee840dac2e8c6d60431b6044820152606401610340565b604080518082018252601a81527f5468697320747261646520686173206265656e20636c6f736564000000000000602080830191909152606085019190915260008881526008909152208251815484929190829060ff191660018360028111156112bb576112bb61203a565b0217905550602082015160018201906112d4908261260f565b5060408201516002820180546001600160a01b0319166001600160a01b039092169190911790556060820151600382019061130f908261260f565b5060808201516004820190611324908261260f565b5060a0820151816005015560c0820151816006015560e08201518160070155610100820151816008015590505082604001516001600160a01b0316867f3b9fec03a835f5d45c06123b3c965323a21c1d2f8ed7315083c81399ad7f397485602001518561010001518660e001516040516113a093929190612703565b60405180910390a350949350505050565b6001600160a01b0385163314806113cd57506113cd8533610285565b6113e95760405162461bcd60e51b815260040161034090612728565b6108908585858585611a19565b6113fe61146c565b6001600160a01b0381166114635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610340565b6103d3816118e7565b6003546001600160a01b03163314610c335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610340565b6002610c80828261260f565b6004805460408051633fabe5a360e21b8152905160009384936001600160a01b03169263feaf968c928183019260a0928290030181865afa15801561151b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153f91906127a6565b509195945050505050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561151b573d6000803e3d6000fd5b600080600660009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561151b573d6000803e3d6000fd5b6001600160a01b0384166116565760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610340565b33600061166285611b43565b9050600061166f85611b43565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906116a19084906125b1565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461170183600089898989611b8e565b50505050505050565b815183511461176c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610340565b6001600160a01b0384166117925760405162461bcd60e51b8152600401610340906127f6565b3360005b84518110156118795760008582815181106117b3576117b3612776565b6020026020010151905060008583815181106117d1576117d1612776565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156118215760405162461bcd60e51b81526004016103409061283b565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061185e9084906125b1565b9250508190555050505080611872906126ea565b9050611796565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516118c9929190612885565b60405180910390a46118df818787878787611ce9565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036119ac5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610340565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416611a3f5760405162461bcd60e51b8152600401610340906127f6565b336000611a4b85611b43565b90506000611a5885611b43565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015611a9b5760405162461bcd60e51b81526004016103409061283b565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611ad89084906125b1565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611b38848a8a8a8a8a611b8e565b505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611b7d57611b7d612776565b602090810291909101015292915050565b6001600160a01b0384163b156118df5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611bd290899089908890889088906004016128b3565b6020604051808303816000875af1925050508015611c0d575060408051601f3d908101601f19168201909252611c0a918101906128f8565b60015b611cb957611c19612915565b806308c379a003611c525750611c2d612931565b80611c385750611c54565b8060405162461bcd60e51b81526004016103409190611fd4565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610340565b6001600160e01b0319811663f23a6e6160e01b146117015760405162461bcd60e51b8152600401610340906129ba565b6001600160a01b0384163b156118df5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611d2d9089908990889088908890600401612a02565b6020604051808303816000875af1925050508015611d68575060408051601f3d908101601f19168201909252611d65918101906128f8565b60015b611d7457611c19612915565b6001600160e01b0319811663bc197c8160e01b146117015760405162461bcd60e51b8152600401610340906129ba565b60408051610120810190915280600081526020016060815260200160006001600160a01b031681526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b80356001600160a01b0381168114611e1157600080fd5b919050565b60008060408385031215611e2957600080fd5b611e3283611dfa565b946020939093013593505050565b6001600160e01b0319811681146103d357600080fd5b600060208284031215611e6857600080fd5b8135611e7381611e40565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715611eb557611eb5611e7a565b6040525050565b600082601f830112611ecd57600080fd5b81356001600160401b03811115611ee657611ee6611e7a565b604051611efd601f8301601f191660200182611e90565b818152846020838601011115611f1257600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611f4157600080fd5b81356001600160401b03811115611f5757600080fd5b611f6384828501611ebc565b949350505050565b600060208284031215611f7d57600080fd5b5035919050565b60005b83811015611f9f578181015183820152602001611f87565b50506000910152565b60008151808452611fc0816020860160208601611f84565b601f01601f19169290920160200192915050565b602081526000611e736020830184611fa8565b60008060408385031215611ffa57600080fd5b82356003811061200957600080fd5b915060208301356001600160401b0381111561202457600080fd5b61203085828601611ebc565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b6003811061206e57634e487b7160e01b600052602160045260246000fd5b9052565b60208152612084602082018351612050565b600060208301516101208060408501526120a2610140850183611fa8565b915060408501516120be60608601826001600160a01b03169052565b506060850151601f19808685030160808701526120db8483611fa8565b935060808701519150808685030160a0870152506120f98382611fa8565b92505060a085015160c085015260c085015160e085015260e0850151610100818187015280870151838701525050508091505092915050565b60006001600160401b0382111561214b5761214b611e7a565b5060051b60200190565b600082601f83011261216657600080fd5b8135602061217382612132565b6040516121808282611e90565b83815260059390931b85018201928281019150868411156121a057600080fd5b8286015b848110156121bb57803583529183019183016121a4565b509695505050505050565b600080600080600060a086880312156121de57600080fd5b6121e786611dfa565b94506121f560208701611dfa565b935060408601356001600160401b038082111561221157600080fd5b61221d89838a01612155565b9450606088013591508082111561223357600080fd5b61223f89838a01612155565b9350608088013591508082111561225557600080fd5b5061226288828901611ebc565b9150509295509295909350565b600081518084526020808501945080840160005b8381101561229f57815187529582019590820190600101612283565b509495945050505050565b602081526000611e73602083018461226f565b600080604083850312156122d057600080fd5b82356001600160401b03808211156122e757600080fd5b818501915085601f8301126122fb57600080fd5b8135602061230882612132565b6040516123158282611e90565b83815260059390931b850182019282810191508984111561233557600080fd5b948201945b8386101561235a5761234b86611dfa565b8252948201949082019061233a565b9650508601359250508082111561237057600080fd5b5061203085828601612155565b600061012061238c838d612050565b80602084015261239e8184018c611fa8565b6001600160a01b038b166040850152838103606085015290506123c1818a611fa8565b905082810360808401526123d58189611fa8565b9150508560a08301528460c08301528360e0830152826101008301529a9950505050505050505050565b6000806040838503121561241257600080fd5b82356001600160401b0381111561242857600080fd5b61243485828601611ebc565b95602094909401359450505050565b6000806040838503121561245657600080fd5b61245f83611dfa565b91506020830135801515811461247457600080fd5b809150509250929050565b6000806040838503121561249257600080fd5b8235915060208301356001600160401b0381111561202457600080fd5b600080604083850312156124c257600080fd5b6124cb83611dfa565b91506124d960208401611dfa565b90509250929050565b600080600080600060a086880312156124fa57600080fd5b61250386611dfa565b945061251160208701611dfa565b9350604086013592506060860135915060808601356001600160401b0381111561253a57600080fd5b61226288828901611ebc565b60006020828403121561255857600080fd5b611e7382611dfa565b600181811c9082168061257557607f821691505b60208210810361259557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561036c5761036c61259b565b601f82111561260a57600081815260208120601f850160051c810160208610156125eb5750805b601f850160051c820191505b818110156118df578281556001016125f7565b505050565b81516001600160401b0381111561262857612628611e7a565b61263c816126368454612561565b846125c4565b602080601f83116001811461267157600084156126595750858301515b600019600386901b1c1916600185901b1785556118df565b600085815260208120601f198616915b828110156126a057888601518255948401946001909101908401612681565b50858210156126be5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516126e0818460208701611f84565b9190910192915050565b6000600182016126fc576126fc61259b565b5060010190565b6060815260006127166060830186611fa8565b60208301949094525060400152919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b805169ffffffffffffffffffff81168114611e1157600080fd5b600080600080600060a086880312156127be57600080fd5b6127c78661278c565b94506020860151935060408601519250606086015191506127ea6080870161278c565b90509295509295909350565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000612898604083018561226f565b82810360208401526128aa818561226f565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906128ed90830184611fa8565b979650505050505050565b60006020828403121561290a57600080fd5b8151611e7381611e40565b600060033d111561292e5760046000803e5060005160e01c5b90565b600060443d101561293f5790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561296e57505050505090565b82850191508151818111156129865750505050505090565b843d87010160208285010111156129a05750505050505090565b6129af60208286010187611e90565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090612a2e9083018661226f565b8281036060840152612a40818661226f565b90508281036080840152612a548185611fa8565b9897505050505050505056fe68747470733a2f2f70686f746f6275636b65742e636f6d2f4254435f62756c6c5f636c6f736564546869732069732061204c494e4b20746f6b656e206d696e746564207768656e20746865204c696e6b20747261646520776173206f70656e65642e68747470733a2f2f70686f746f6275636b65742e636f6d2f45544848656c6462794761727947656e736c6572696d61676568747470733a2f2f70686f746f6275636b65742e636f6d2f4c494e4b5f626561725f636c6f7365645468697320697320616e2045544820746f6b656e206d696e746564207768656e207468652045544820747261646520776173206f70656e65642e5468697320697320612042544320746f6b656e206d696e746564207768656e207468652042544320747261646520776173206f70656e656468747470733a2f2f70686f746f6275636b65742e636f6d2f4554485f62756c6c5f636c6f73656468747470733a2f2f70686f746f6275636b65742e636f6d2f4254435f626561725f636c6f73656468747470733a2f2f70686f746f6275636b65742e636f6d2f4c494e4b48656c6462794761727947656e736c6572696d61676568747470733a2f2f70686f746f6275636b65742e636f6d2f4c494e4b5f62756c6c5f636c6f73656468747470733a2f2f70686f746f6275636b65742e636f6d2f4554485f626561725f636c6f73656468747470733a2f2f70686f746f6275636b65742e636f6d2f42544348656c6462794761727947656e736c6572696d616765a2646970667358221220f5552eb2ec004e9e3cd96a9521b3784b19512b8b8544e300f7be773efb06603064736f6c63430008150033a26469706673582212209d7b62d78eb498b2a264df169f5f0f74ba846afa2fe27d024d902fe6da46245b64736f6c63430008150033",
    "sourceMap": "474:2813:32:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;;474:2813:32;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "474:2813:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:133;;;:::i;:::-;;830:461;;;:::i;2170:134:6:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2939:133;;;:::i;2640:141::-;;;:::i;2456:178::-;;;:::i;:::-;;;;;;;:::i;1364:391:32:-;;;:::i;2310:140:6:-;;;:::i;:::-;;;;;;;:::i;1897:417:32:-;;;:::i;3085:200::-;;;:::i;2787:146:6:-;;;:::i;1875:141::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;3753:14:33;;3746:22;3728:41;;3716:2;3701:18;1819:584:0;3588:187:33;2742:194:32;;;:::i;2022:142:6:-;;;:::i;1572:26:0:-;;;;;;;;;2460:133:32;2521:8;;:65;;-1:-1:-1;;;2521:65:32;;-1:-1:-1;;;;;2521:8:32;;;;:18;;:65;;:8;;:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2521:65:32;;;;;;;;;;;;:::i;:::-;;2460:133::o;830:461::-;904:6;880:31;;;;;:::i;:::-;7502:25:33;;;7490:2;7475:18;880:31:32;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;864:13:32;:47;;-1:-1:-1;;;;;;864:47:32;-1:-1:-1;;;;;864:47:32;;;;;;;;;;973:29;;997:4;;973:29;;;:::i;:::-;7502:25:33;;;7490:2;7475:18;973:29:32;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;957:13:32;:45;;-1:-1:-1;;;;;;957:45:32;-1:-1:-1;;;;;957:45:32;;;;;;;;;;1063:28;;1087:3;;1063:28;;;:::i;:::-;7502:25:33;;;7490:2;7475:18;1063:28:32;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1046:14:32;:45;;-1:-1:-1;;;;;;1046:45:32;-1:-1:-1;;;;;1046:45:32;;;;;;;;;1186:13;;1210;;1146:104;;1186:13;;;;1210;;1046:45;1146:104;;;:::i;:::-;-1:-1:-1;;;;;8179:15:33;;;8161:34;;8231:15;;;8226:2;8211:18;;8204:43;8283:15;;;8278:2;8263:18;;8256:43;8111:2;8096:18;1146:104:32;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1135:8:32;:115;;-1:-1:-1;;;;;;1135:115:32;-1:-1:-1;;;;;1135:115:32;;;;;;;;;;830:461::o;2170:134:6:-;2217:33;2281:16;2262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:35:6;;;;;;;;;;;;;;;;;;;;;;;2170:134;:::o;2939:133::-;2985:33;3049:16;3030:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3030:35:6;;;;;;;;;;;;;;;;;;;;;;2939:133;:::o;2640:141::-;2688:35;2756:18;2735:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2735:39:6;;;;;;;;;;;;;;;;;;;;;;2640:141;:::o;2456:178::-;2512:48;2601:26;2572:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:178;:::o;1364:391:32:-;1462:8;;:70;;-1:-1:-1;;;1462:70:32;;1407:52;;-1:-1:-1;;;;;1462:8:32;;:18;;:70;;1407:52;;1462:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1462:70:32;;;;;;;;;;;;:::i;:::-;1407:125;;1542:52;1558:8;:18;;;1579:14;;;;;;;;;;;;;-1:-1:-1;;;1579:14:32;;;1542:9;:52::i;:::-;1618:18;;1604:83;;1613:24;;;;;;;;:::i;:::-;1644:41;1604:8;:83::i;:::-;1697:51;1706:8;:24;;;1732:15;1697:8;:51::i;2310:140:6:-;2358:34;2425:18;2404:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1897:417:32;2002:8;;:70;;-1:-1:-1;;;2002:70:32;;1941:58;;-1:-1:-1;;;;;2002:8:32;;:18;;:70;;1941:58;;2002:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2002:70:32;;;;;;;;;;;;:::i;:::-;2108:30;;;;2209:8;;:45;;-1:-1:-1;;;2209:45:32;;1941:131;;-1:-1:-1;2108:30:32;;2082:23;;-1:-1:-1;;;;;2209:8:32;;:19;;:45;;2108:30;;2209:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2209:45:32;;;;;;;;;;;;:::i;:::-;2148:106;;2265:42;2305:1;2276:14;:26;;;:30;2265:10;:42::i;:::-;1931:383;;;1897:417::o;3085:200::-;3149:8;;:70;;-1:-1:-1;;;3149:70:32;;-1:-1:-1;;;;;3149:8:32;;;;:18;;:70;;:8;;:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3149:70:32;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3229:8:32;;-1:-1:-1;;;;;3229:8:32;:19;3249;:15;3229:8;3249:19;:::i;:::-;3229:49;;;;;;;;;;;;;;;:::i;2787:146:6:-;2835:40;2908:18;2887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1875:141;1924:34;1991:18;1970:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;10012:51:33;;;-1:-1:-1;;;10079:18:33;;;10072:34;2196:43:0;;;;;;;;;9985:18:33;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2742:194:32:-;2806:8;;:70;;-1:-1:-1;;;2806:70:32;;-1:-1:-1;;;;;2806:8:32;;;;:18;;:70;;:8;;:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2806:70:32;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2886:8:32;;:43;;;-1:-1:-1;;;2886:43:32;;2906:15;2886:43;;;11292:25:33;11333:18;;;11326:30;;;;11392:1;11372:18;;;11365:29;-1:-1:-1;;;11410:18:33;;;11403:33;-1:-1:-1;;;;;2886:8:32;;;;:19;;11453::33;;2886:43:32;11080:398:33;2022:142:6;2071:35;2139:18;2118:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2118:39:6;;;;;;;;;;;;;;;;;;;;;;2022:142;:::o;19479:291:0:-;19554:14;19563:1;19566;19554:8;:14::i;:::-;19549:215;;19589:42;;;;;11685:2:33;11667:21;;;11724:2;11704:18;;;11697:30;11763:34;11758:2;11743:18;;11736:62;-1:-1:-1;;;11829:2:33;11814:18;;11807:33;11872:3;11857:19;;11483:399;19589:42:0;;;;;;;;19650:32;19680:1;19650:32;;;;;;:::i;:::-;;;;;;;;19701;19731:1;19701:32;;;;;;:::i;:::-;;;;;;;;19747:6;:4;:6::i;:::-;19479:291;;:::o;5209:262::-;5271:1;5266;:6;5262:203;;5293:41;;;;;13303:2:33;13285:21;;;13342:2;13322:18;;;13315:30;13381:34;13376:2;13361:18;;13354:62;-1:-1:-1;;;13447:2:33;13432:18;;13425:32;13489:3;13474:19;;13101:398;5293:41:0;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;3262:157::-;3322:9;3317:96;;3352:30;;;;;14412:2:33;14394:21;;;14451:2;14431:18;;;14424:30;14490:25;14485:2;14470:18;;14463:53;14548:2;14533:18;;14210:347;3352:30:0;;;;;;;;3396:6;:4;:6::i;19129:345::-;19256:8;;19244;;19226:4;;19244:20;;19240:228;;19285:6;19280:137;19301:1;:8;19297:1;:12;19280:137;;;19346:1;19348;19346:4;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;19338:12:0;;:1;19340;19338:4;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;19338:4:0;:12;19334:69;;19379:5;19374:10;;19334:69;19311:3;;;;:::i;:::-;;;;19280:137;;;;19240:228;;;-1:-1:-1;19452:5:0;19240:228;19129:345;;;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;15036:51:33;;;-1:-1:-1;;;15103:18:33;;;15096:34;;;;2712:4:0;15146:18:33;;;15139:34;2489:11:0;;1671:64;2586:43;;15009:18:33;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:658:33:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:33;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:33;;14:658;-1:-1:-1;;;;;;14:658:33:o;677:1567::-;879:4;908:2;948;937:9;933:18;978:2;967:9;960:21;1001:6;1036;1030:13;1067:6;1059;1052:22;1093:2;1083:12;;1126:2;1115:9;1111:18;1104:25;;1188:2;1178:6;1175:1;1171:14;1160:9;1156:30;1152:39;1226:2;1218:6;1214:15;1247:1;1268;1278:937;1294:6;1289:3;1286:15;1278:937;;;1363:22;;;-1:-1:-1;;1359:36:33;1347:49;;1419:13;;1506:9;;-1:-1:-1;;;;;1502:35:33;1487:51;;1577:11;;1571:18;1609:15;;;1602:27;;;1690:19;;1459:15;;;1722:24;;;1812:21;;;;1857:1;;1780:2;1768:15;;;1871:236;1887:8;1882:3;1879:17;1871:236;;;1968:15;;-1:-1:-1;;;;;;1964:42:33;1950:57;;2076:17;;;;1915:1;1906:11;;;;;2033:14;;;;1871:236;;;-1:-1:-1;2193:12:33;;;;2130:5;-1:-1:-1;;;2158:15:33;;;;1320:1;1311:11;1278:937;;;-1:-1:-1;2232:6:33;;677:1567;-1:-1:-1;;;;;;;;;677:1567:33:o;2249:250::-;2334:1;2344:113;2358:6;2355:1;2352:13;2344:113;;;2434:11;;;2428:18;2415:11;;;2408:39;2380:2;2373:10;2344:113;;;-1:-1:-1;;2491:1:33;2473:16;;2466:27;2249:250::o;2504:271::-;2546:3;2584:5;2578:12;2611:6;2606:3;2599:19;2627:76;2696:6;2689:4;2684:3;2680:14;2673:4;2666:5;2662:16;2627:76;:::i;:::-;2757:2;2736:15;-1:-1:-1;;2732:29:33;2723:39;;;;2764:4;2719:50;;2504:271;-1:-1:-1;;2504:271:33:o;2780:803::-;2942:4;2971:2;3011;3000:9;2996:18;3041:2;3030:9;3023:21;3064:6;3099;3093:13;3130:6;3122;3115:22;3168:2;3157:9;3153:18;3146:25;;3230:2;3220:6;3217:1;3213:14;3202:9;3198:30;3194:39;3180:53;;3268:2;3260:6;3256:15;3289:1;3299:255;3313:6;3310:1;3307:13;3299:255;;;3406:2;3402:7;3390:9;3382:6;3378:22;3374:36;3369:3;3362:49;3434:40;3467:6;3458;3452:13;3434:40;:::i;:::-;3424:50;-1:-1:-1;3532:12:33;;;;3497:15;;;;3335:1;3328:9;3299:255;;;-1:-1:-1;3571:6:33;;2780:803;-1:-1:-1;;;;;;;2780:803:33:o;3780:127::-;3841:10;3836:3;3832:20;3829:1;3822:31;3872:4;3869:1;3862:15;3896:4;3893:1;3886:15;3912:237;3993:1;3986:5;3983:12;3973:143;;4038:10;4033:3;4029:20;4026:1;4019:31;4073:4;4070:1;4063:15;4101:4;4098:1;4091:15;3973:143;4125:18;;3912:237::o;4154:387::-;4379:44;4413:9;4405:6;4379:44;:::i;:::-;4459:2;4454;4439:18;;4432:30;;;4498:1;4478:18;;;4471:29;4532:2;4517:18;;4154:387;-1:-1:-1;4154:387:33:o;4546:127::-;4607:10;4602:3;4598:20;4595:1;4588:31;4638:4;4635:1;4628:15;4662:4;4659:1;4652:15;4678:250;4745:2;4739:9;4787:6;4775:19;;4824:18;4809:34;;4845:22;;;4806:62;4803:88;;;4871:18;;:::i;:::-;4907:2;4900:22;4678:250;:::o;4933:154::-;5019:13;;5061:1;5051:12;;5041:40;;5077:1;5074;5067:12;5092:699;5146:5;5199:3;5192:4;5184:6;5180:17;5176:27;5166:55;;5217:1;5214;5207:12;5166:55;5246:6;5240:13;5272:18;5309:2;5305;5302:10;5299:36;;;5315:18;;:::i;:::-;5390:2;5384:9;5358:2;5444:13;;-1:-1:-1;;5440:22:33;;;5464:2;5436:31;5432:40;5420:53;;;5488:18;;;5508:22;;;5485:46;5482:72;;;5534:18;;:::i;:::-;5574:10;5570:2;5563:22;5609:2;5601:6;5594:18;5655:3;5648:4;5643:2;5635:6;5631:15;5627:26;5624:35;5621:55;;;5672:1;5669;5662:12;5621:55;5685:76;5758:2;5751:4;5743:6;5739:17;5732:4;5724:6;5720:17;5685:76;:::i;:::-;5779:6;5092:699;-1:-1:-1;;;;;;5092:699:33:o;5796:177::-;5875:13;;-1:-1:-1;;;;;5917:31:33;;5907:42;;5897:70;;5963:1;5960;5953:12;5978:1361;6075:6;6128:2;6116:9;6107:7;6103:23;6099:32;6096:52;;;6144:1;6141;6134:12;6096:52;6177:9;6171:16;6206:18;6247:2;6239:6;6236:14;6233:34;;;6263:1;6260;6253:12;6233:34;6286:22;;;;6342:6;6324:16;;;6320:29;6317:49;;;6362:1;6359;6352:12;6317:49;6388:17;;:::i;:::-;6428:40;6465:2;6428:40;:::i;:::-;6421:5;6414:55;6508:2;6504;6500:11;6494:18;6537:2;6527:8;6524:16;6521:36;;;6553:1;6550;6543:12;6521:36;6589:56;6637:7;6626:8;6622:2;6618:17;6589:56;:::i;:::-;6584:2;6577:5;6573:14;6566:80;;6678:42;6716:2;6712;6708:11;6678:42;:::i;:::-;6673:2;6666:5;6662:14;6655:66;6760:2;6756;6752:11;6746:18;6789:2;6779:8;6776:16;6773:36;;;6805:1;6802;6795:12;6773:36;6841:56;6889:7;6878:8;6874:2;6870:17;6841:56;:::i;:::-;6836:2;6829:5;6825:14;6818:80;;6937:3;6933:2;6929:12;6923:19;6967:2;6957:8;6954:16;6951:36;;;6983:1;6980;6973:12;6951:36;7020:56;7068:7;7057:8;7053:2;7049:17;7020:56;:::i;:::-;7014:3;7007:5;7003:15;6996:81;;7124:3;7120:2;7116:12;7110:19;7104:3;7097:5;7093:15;7086:44;7177:3;7173:2;7169:12;7163:19;7157:3;7150:5;7146:15;7139:44;7230:3;7226:2;7222:12;7216:19;7210:3;7203:5;7199:15;7192:44;7255:3;7245:13;;7304:2;7300;7296:11;7290:18;7285:2;7278:5;7274:14;7267:42;7328:5;7318:15;;;;;5978:1361;;;;:::o;8463:375::-;8688:44;8722:9;8714:6;8688:44;:::i;:::-;8768:2;8763;8752:9;8748:18;8741:30;8669:4;8788:44;8828:2;8817:9;8813:18;8382:1;8370:14;;-1:-1:-1;;;8409:4:33;8400:14;;8393:31;8449:2;8440:12;;8310:148;8788:44;8780:52;8463:375;-1:-1:-1;;;8463:375:33:o;8843:380::-;8922:1;8918:12;;;;8965;;;8986:61;;9040:4;9032:6;9028:17;9018:27;;8986:61;9093:2;9085:6;9082:14;9062:18;9059:38;9056:161;;9139:10;9134:3;9130:20;9127:1;9120:31;9174:4;9171:1;9164:15;9202:4;9199:1;9192:15;9056:161;;8843:380;;;:::o;9228:343::-;9458:6;9447:9;9440:25;9501:2;9496;9485:9;9481:18;9474:30;9421:4;9521:44;9561:2;9550:9;9546:18;8382:1;8370:14;;-1:-1:-1;;;8409:4:33;8400:14;;8393:31;8449:2;8440:12;;8310:148;9576:127;9637:10;9632:3;9628:20;9625:1;9618:31;9668:4;9665:1;9658:15;9692:4;9689:1;9682:15;9708:125;9773:9;;;9794:10;;;9791:36;;;9807:18;;:::i;10117:384::-;-1:-1:-1;;;;;;10302:33:33;;10290:46;;10359:13;;10272:3;;10381:74;10359:13;10444:1;10435:11;;10428:4;10416:17;;10381:74;:::i;:::-;10475:16;;;;10493:1;10471:24;;10117:384;-1:-1:-1;;;10117:384:33:o;10506:287::-;10635:3;10673:6;10667:13;10689:66;10748:6;10743:3;10736:4;10728:6;10724:17;10689:66;:::i;:::-;10771:16;;;;;10506:287;-1:-1:-1;;10506:287:33:o;10798:277::-;10865:6;10918:2;10906:9;10897:7;10893:23;10889:32;10886:52;;;10934:1;10931;10924:12;10886:52;10966:9;10960:16;11019:5;11012:13;11005:21;10998:5;10995:32;10985:60;;11041:1;11038;11031:12;12051:438;12299:2;12288:9;12281:21;12262:4;12325:49;12370:2;12359:9;12355:18;11964:2;11952:15;;-1:-1:-1;;;11992:4:33;11983:14;;11976:36;12037:2;12028:12;;11887:159;12325:49;12422:9;12414:6;12410:22;12405:2;12394:9;12390:18;12383:50;12450:33;12476:6;12468;12450:33;:::i;:::-;12442:41;12051:438;-1:-1:-1;;;;12051:438:33:o;12658:::-;12906:2;12895:9;12888:21;12869:4;12932:49;12977:2;12966:9;12962:18;12571:2;12559:15;;-1:-1:-1;;;12599:4:33;12590:14;;12583:36;12644:2;12635:12;;12494:159;13504:348;13734:2;13723:9;13716:21;13697:4;13754:49;13799:2;13788:9;13784:18;11964:2;11952:15;;-1:-1:-1;;;11992:4:33;11983:14;;11976:36;12037:2;12028:12;;11887:159;13754:49;13746:57;;13839:6;13834:2;13823:9;13819:18;13812:34;13504:348;;;;:::o;13857:::-;14087:2;14076:9;14069:21;14050:4;14107:49;14152:2;14141:9;14137:18;12571:2;12559:15;;-1:-1:-1;;;12599:4:33;12590:14;;12583:36;12644:2;12635:12;;12494:159;14562:127;14623:10;14618:3;14614:20;14611:1;14604:31;14654:4;14651:1;14644:15;14678:4;14675:1;14668:15;14694:135;14733:3;14754:17;;;14751:43;;14774:18;;:::i;:::-;-1:-1:-1;14821:1:33;14810:13;;14694:135::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testFail_CloseTradeInvalidPseudonym()": "cc9d916b",
    "testFail_CloseTradeInvalidTimestamp()": "890d8b80",
    "testFail_OpenTradeEmptyPseudonym()": "07e87bf8",
    "test_CloseTrade()": "86a8c00a",
    "test_OpenTrade()": "771e081e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFail_CloseTradeInvalidPseudonym\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFail_CloseTradeInvalidTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFail_OpenTradeEmptyPseudonym\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_CloseTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_OpenTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Christian Reyes\",\"details\":\"This contract is used for testing the PseudonymousProofOftradeNFT contract, and calls from a Mock ChainLink Oricle.\",\"kind\":\"dev\",\"methods\":{\"setUp()\":{\"details\":\"Sets up the initial environment for each test. Initializes mock Chainlink oracles and the main contract.\"},\"testFail_CloseTradeInvalidPseudonym()\":{\"details\":\"Tests the behavior when trying to close a trade with an invalid pseudonym. This test is expected to revert.\"},\"testFail_CloseTradeInvalidTimestamp()\":{\"details\":\"Tests the behavior when trying to close a trade with an invalid timestamp. This test is expected to revert.\"},\"testFail_OpenTradeEmptyPseudonym()\":{\"details\":\"Tests the behavior when trying to open a trade with an empty pseudonym. This test is expected to revert.\"},\"test_CloseTrade()\":{\"details\":\"Tests the behavior of closing a trade. Asserts that the closed price in the new metadata is above 0.\"},\"test_OpenTrade()\":{\"details\":\"Tests the behavior of opening a trade.\"}},\"title\":\"PseudonymousProofOftradeNFTTest\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract tests the functionalities of the PseudonymousProofOftradeNFT contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/PseudonymousProofOftradeNFT.t.sol\":\"PseudonymousProofOftradeNFTTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d\",\"dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a\",\"dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c\",\"dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26\",\"dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb\",\"dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c\",\"dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/MockChainlinkOracle.sol\":{\"keccak256\":\"0xb37748e235f77b8738c97946c1121c9f4e6c99284f0038cbcdb26850bf98703c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c4a00d5c5a231b9a39f971f2ce456ed52bba64b96e24a04766b2ea40ea48d16\",\"dweb:/ipfs/QmTi1qYnobeRfQuCyF5sWqtYUWZJibJqGinz25c1DQH5rX\"]},\"src/PseudonymousProofOftradeNFT.sol\":{\"keccak256\":\"0xc6200f1a49528d706fba4504d00f6eeaf2ad9928674dc1ec1a94d081b05085ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdc6b2509e1ff42fe9d36e9d15259f38bdef337a233182ad109313f371f3dc24\",\"dweb:/ipfs/QmfPcmSZydjzCR4w32RfqVg1LfJEeD9iHzirxfZkwYsQ3L\"]},\"test/PseudonymousProofOftradeNFT.t.sol\":{\"keccak256\":\"0x5a9a6ffbed25215e870f42771327587a7173aced9599b2190456c7f48664651b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4cc6347892aa86c5cf7e795245a4d9aa0e4898c09faf19b955d65c2de71a0ef\",\"dweb:/ipfs/QmRWDZVW1xWYx8ooFLDGufedXunC4Do7sqY4xKxYpmQ2uQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFail_CloseTradeInvalidPseudonym"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFail_CloseTradeInvalidTimestamp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFail_OpenTradeEmptyPseudonym"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_CloseTrade"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_OpenTrade"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "setUp()": {
            "details": "Sets up the initial environment for each test. Initializes mock Chainlink oracles and the main contract."
          },
          "testFail_CloseTradeInvalidPseudonym()": {
            "details": "Tests the behavior when trying to close a trade with an invalid pseudonym. This test is expected to revert."
          },
          "testFail_CloseTradeInvalidTimestamp()": {
            "details": "Tests the behavior when trying to close a trade with an invalid timestamp. This test is expected to revert."
          },
          "testFail_OpenTradeEmptyPseudonym()": {
            "details": "Tests the behavior when trying to open a trade with an empty pseudonym. This test is expected to revert."
          },
          "test_CloseTrade()": {
            "details": "Tests the behavior of closing a trade. Asserts that the closed price in the new metadata is above 0."
          },
          "test_OpenTrade()": {
            "details": "Tests the behavior of opening a trade."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/PseudonymousProofOftradeNFT.t.sol": "PseudonymousProofOftradeNFTTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6",
        "urls": [
          "bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d",
          "dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5",
        "urls": [
          "bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a",
          "dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1",
        "urls": [
          "bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c",
          "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d",
        "urls": [
          "bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26",
          "dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24",
        "urls": [
          "bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb",
          "dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5",
        "urls": [
          "bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c",
          "dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e",
        "urls": [
          "bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601",
          "dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582",
        "urls": [
          "bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf",
          "dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/MockChainlinkOracle.sol": {
        "keccak256": "0xb37748e235f77b8738c97946c1121c9f4e6c99284f0038cbcdb26850bf98703c",
        "urls": [
          "bzz-raw://1c4a00d5c5a231b9a39f971f2ce456ed52bba64b96e24a04766b2ea40ea48d16",
          "dweb:/ipfs/QmTi1qYnobeRfQuCyF5sWqtYUWZJibJqGinz25c1DQH5rX"
        ],
        "license": "MIT"
      },
      "src/PseudonymousProofOftradeNFT.sol": {
        "keccak256": "0xc6200f1a49528d706fba4504d00f6eeaf2ad9928674dc1ec1a94d081b05085ce",
        "urls": [
          "bzz-raw://cdc6b2509e1ff42fe9d36e9d15259f38bdef337a233182ad109313f371f3dc24",
          "dweb:/ipfs/QmfPcmSZydjzCR4w32RfqVg1LfJEeD9iHzirxfZkwYsQ3L"
        ],
        "license": "MIT"
      },
      "test/PseudonymousProofOftradeNFT.t.sol": {
        "keccak256": "0x5a9a6ffbed25215e870f42771327587a7173aced9599b2190456c7f48664651b",
        "urls": [
          "bzz-raw://d4cc6347892aa86c5cf7e795245a4d9aa0e4898c09faf19b955d65c2de71a0ef",
          "dweb:/ipfs/QmRWDZVW1xWYx8ooFLDGufedXunC4Do7sqY4xKxYpmQ2uQ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/PseudonymousProofOftradeNFT.t.sol",
    "id": 45801,
    "exportedSymbols": {
      "Address": [
        44742
      ],
      "AggregatorV3Interface": [
        42898
      ],
      "Context": [
        44764
      ],
      "DSTest": [
        2291
      ],
      "ERC1155": [
        44234
      ],
      "ERC165": [
        44788
      ],
      "IERC1155": [
        44356
      ],
      "IERC1155MetadataURI": [
        44412
      ],
      "IERC1155Receiver": [
        44397
      ],
      "IERC165": [
        44800
      ],
      "MockChainlinkOracle": [
        44897
      ],
      "Ownable": [
        43011
      ],
      "PseudonymousProofOftradeNFT": [
        45497
      ],
      "PseudonymousProofOftradeNFTTest": [
        45800
      ],
      "StdAssertions": [
        3784
      ],
      "StdChains": [
        4477
      ],
      "StdCheats": [
        7295
      ],
      "StdInvariant": [
        7585
      ],
      "StdStorage": [
        8335
      ],
      "StdStyle": [
        10999
      ],
      "StdUtils": [
        11847
      ],
      "Test": [
        11898
      ],
      "TestBase": [
        2357
      ],
      "Vm": [
        13425
      ],
      "console": [
        21489
      ],
      "console2": [
        29614
      ],
      "safeconsole": [
        42852
      ],
      "stdError": [
        7361
      ],
      "stdJson": [
        8161
      ],
      "stdMath": [
        8303
      ],
      "stdStorage": [
        9788
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4569:32",
    "nodes": [
      {
        "id": 45581,
        "nodeType": "PragmaDirective",
        "src": "32:23:32",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 45582,
        "nodeType": "ImportDirective",
        "src": "57:28:32",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45801,
        "sourceUnit": 11899,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45583,
        "nodeType": "ImportDirective",
        "src": "86:48:32",
        "nodes": [],
        "absolutePath": "src/PseudonymousProofOftradeNFT.sol",
        "file": "../src/PseudonymousProofOftradeNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45801,
        "sourceUnit": 45498,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45584,
        "nodeType": "ImportDirective",
        "src": "135:40:32",
        "nodes": [],
        "absolutePath": "src/MockChainlinkOracle.sol",
        "file": "../src/MockChainlinkOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45801,
        "sourceUnit": 44898,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45800,
        "nodeType": "ContractDefinition",
        "src": "474:2813:32",
        "nodes": [
          {
            "id": 45590,
            "nodeType": "VariableDeclaration",
            "src": "529:36:32",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tradeNFT",
            "nameLocation": "557:8:32",
            "scope": 45800,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
              "typeString": "contract PseudonymousProofOftradeNFT"
            },
            "typeName": {
              "id": 45589,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45588,
                "name": "PseudonymousProofOftradeNFT",
                "nameLocations": [
                  "529:27:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45497,
                "src": "529:27:32"
              },
              "referencedDeclaration": 45497,
              "src": "529:27:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                "typeString": "contract PseudonymousProofOftradeNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45593,
            "nodeType": "VariableDeclaration",
            "src": "571:33:32",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mockBTCOracle",
            "nameLocation": "591:13:32",
            "scope": 45800,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
              "typeString": "contract MockChainlinkOracle"
            },
            "typeName": {
              "id": 45592,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45591,
                "name": "MockChainlinkOracle",
                "nameLocations": [
                  "571:19:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44897,
                "src": "571:19:32"
              },
              "referencedDeclaration": 44897,
              "src": "571:19:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                "typeString": "contract MockChainlinkOracle"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45596,
            "nodeType": "VariableDeclaration",
            "src": "610:33:32",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mockETHOracle",
            "nameLocation": "630:13:32",
            "scope": 45800,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
              "typeString": "contract MockChainlinkOracle"
            },
            "typeName": {
              "id": 45595,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45594,
                "name": "MockChainlinkOracle",
                "nameLocations": [
                  "610:19:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44897,
                "src": "610:19:32"
              },
              "referencedDeclaration": 44897,
              "src": "610:19:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                "typeString": "contract MockChainlinkOracle"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45599,
            "nodeType": "VariableDeclaration",
            "src": "649:34:32",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mockLINKOracle",
            "nameLocation": "669:14:32",
            "scope": 45800,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
              "typeString": "contract MockChainlinkOracle"
            },
            "typeName": {
              "id": 45598,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45597,
                "name": "MockChainlinkOracle",
                "nameLocations": [
                  "649:19:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44897,
                "src": "649:19:32"
              },
              "referencedDeclaration": 44897,
              "src": "649:19:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                "typeString": "contract MockChainlinkOracle"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45647,
            "nodeType": "FunctionDefinition",
            "src": "830:461:32",
            "nodes": [],
            "body": {
              "id": 45646,
              "nodeType": "Block",
              "src": "854:437:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45603,
                      "name": "mockBTCOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45593,
                      "src": "864:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                        "typeString": "contract MockChainlinkOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "313030303030",
                          "id": 45607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "904:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          }
                        ],
                        "id": 45606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "880:23:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_int256_$returns$_t_contract$_MockChainlinkOracle_$44897_$",
                          "typeString": "function (int256) returns (contract MockChainlinkOracle)"
                        },
                        "typeName": {
                          "id": 45605,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45604,
                            "name": "MockChainlinkOracle",
                            "nameLocations": [
                              "884:19:32"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44897,
                            "src": "884:19:32"
                          },
                          "referencedDeclaration": 44897,
                          "src": "884:19:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                            "typeString": "contract MockChainlinkOracle"
                          }
                        }
                      },
                      "id": 45608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "880:31:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                        "typeString": "contract MockChainlinkOracle"
                      }
                    },
                    "src": "864:47:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                      "typeString": "contract MockChainlinkOracle"
                    }
                  },
                  "id": 45610,
                  "nodeType": "ExpressionStatement",
                  "src": "864:47:32"
                },
                {
                  "expression": {
                    "id": 45617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45611,
                      "name": "mockETHOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45596,
                      "src": "957:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                        "typeString": "contract MockChainlinkOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "33303030",
                          "id": 45615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "997:4:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3000_by_1",
                            "typeString": "int_const 3000"
                          },
                          "value": "3000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3000_by_1",
                            "typeString": "int_const 3000"
                          }
                        ],
                        "id": 45614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "973:23:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_int256_$returns$_t_contract$_MockChainlinkOracle_$44897_$",
                          "typeString": "function (int256) returns (contract MockChainlinkOracle)"
                        },
                        "typeName": {
                          "id": 45613,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45612,
                            "name": "MockChainlinkOracle",
                            "nameLocations": [
                              "977:19:32"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44897,
                            "src": "977:19:32"
                          },
                          "referencedDeclaration": 44897,
                          "src": "977:19:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                            "typeString": "contract MockChainlinkOracle"
                          }
                        }
                      },
                      "id": 45616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "973:29:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                        "typeString": "contract MockChainlinkOracle"
                      }
                    },
                    "src": "957:45:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                      "typeString": "contract MockChainlinkOracle"
                    }
                  },
                  "id": 45618,
                  "nodeType": "ExpressionStatement",
                  "src": "957:45:32"
                },
                {
                  "expression": {
                    "id": 45625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45619,
                      "name": "mockLINKOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45599,
                      "src": "1046:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                        "typeString": "contract MockChainlinkOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "313030",
                          "id": 45623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1087:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "id": 45622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1063:23:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_int256_$returns$_t_contract$_MockChainlinkOracle_$44897_$",
                          "typeString": "function (int256) returns (contract MockChainlinkOracle)"
                        },
                        "typeName": {
                          "id": 45621,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45620,
                            "name": "MockChainlinkOracle",
                            "nameLocations": [
                              "1067:19:32"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44897,
                            "src": "1067:19:32"
                          },
                          "referencedDeclaration": 44897,
                          "src": "1067:19:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                            "typeString": "contract MockChainlinkOracle"
                          }
                        }
                      },
                      "id": 45624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1063:28:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                        "typeString": "contract MockChainlinkOracle"
                      }
                    },
                    "src": "1046:45:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                      "typeString": "contract MockChainlinkOracle"
                    }
                  },
                  "id": 45626,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:45:32"
                },
                {
                  "expression": {
                    "id": 45644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45627,
                      "name": "tradeNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45590,
                      "src": "1135:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                        "typeString": "contract PseudonymousProofOftradeNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45633,
                              "name": "mockBTCOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45593,
                              "src": "1186:13:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                                "typeString": "contract MockChainlinkOracle"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                                "typeString": "contract MockChainlinkOracle"
                              }
                            ],
                            "id": 45632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1178:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45631,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1178:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1178:22:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 45637,
                              "name": "mockETHOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45596,
                              "src": "1210:13:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                                "typeString": "contract MockChainlinkOracle"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                                "typeString": "contract MockChainlinkOracle"
                              }
                            ],
                            "id": 45636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1202:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45635,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1202:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1202:22:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 45641,
                              "name": "mockLINKOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45599,
                              "src": "1234:14:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                                "typeString": "contract MockChainlinkOracle"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockChainlinkOracle_$44897",
                                "typeString": "contract MockChainlinkOracle"
                              }
                            ],
                            "id": 45640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1226:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45639,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1226:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1226:23:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1146:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_PseudonymousProofOftradeNFT_$45497_$",
                          "typeString": "function (address,address,address) returns (contract PseudonymousProofOftradeNFT)"
                        },
                        "typeName": {
                          "id": 45629,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45628,
                            "name": "PseudonymousProofOftradeNFT",
                            "nameLocations": [
                              "1150:27:32"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 45497,
                            "src": "1150:27:32"
                          },
                          "referencedDeclaration": 45497,
                          "src": "1150:27:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                            "typeString": "contract PseudonymousProofOftradeNFT"
                          }
                        }
                      },
                      "id": 45643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1146:104:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                        "typeString": "contract PseudonymousProofOftradeNFT"
                      }
                    },
                    "src": "1135:115:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                      "typeString": "contract PseudonymousProofOftradeNFT"
                    }
                  },
                  "id": 45645,
                  "nodeType": "ExpressionStatement",
                  "src": "1135:115:32"
                }
              ]
            },
            "documentation": {
              "id": 45600,
              "nodeType": "StructuredDocumentation",
              "src": "690:135:32",
              "text": " @dev Sets up the initial environment for each test.\n Initializes mock Chainlink oracles and the main contract."
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "839:5:32",
            "parameters": {
              "id": 45601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:2:32"
            },
            "returnParameters": {
              "id": 45602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:0:32"
            },
            "scope": 45800,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45698,
            "nodeType": "FunctionDefinition",
            "src": "1364:391:32",
            "nodes": [],
            "body": {
              "id": 45697,
              "nodeType": "Block",
              "src": "1397:358:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45655
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45655,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "1451:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45697,
                      "src": "1407:52:32",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                        "typeString": "struct PseudonymousProofOftradeNFT.Metadata"
                      },
                      "typeName": {
                        "id": 45654,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45653,
                          "name": "PseudonymousProofOftradeNFT.Metadata",
                          "nameLocations": [
                            "1407:27:32",
                            "1435:8:32"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44944,
                          "src": "1407:36:32"
                        },
                        "referencedDeclaration": 44944,
                        "src": "1407:36:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$44944_storage_ptr",
                          "typeString": "struct PseudonymousProofOftradeNFT.Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45663,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 45658,
                            "name": "PseudonymousProofOftradeNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45497,
                            "src": "1481:27:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PseudonymousProofOftradeNFT_$45497_$",
                              "typeString": "type(contract PseudonymousProofOftradeNFT)"
                            }
                          },
                          "id": 45659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1509:9:32",
                          "memberName": "TokenType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44923,
                          "src": "1481:37:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_TokenType_$44923_$",
                            "typeString": "type(enum PseudonymousProofOftradeNFT.TokenType)"
                          }
                        },
                        "id": 45660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1519:3:32",
                        "memberName": "BTC",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44920,
                        "src": "1481:41:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TokenType_$44923",
                          "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 45661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1524:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_TokenType_$44923",
                          "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 45656,
                        "name": "tradeNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45590,
                        "src": "1462:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                          "typeString": "contract PseudonymousProofOftradeNFT"
                        }
                      },
                      "id": 45657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1471:9:32",
                      "memberName": "openTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45179,
                      "src": "1462:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_TokenType_$44923_$_t_string_memory_ptr_$returns$_t_struct$_Metadata_$44944_memory_ptr_$",
                        "typeString": "function (enum PseudonymousProofOftradeNFT.TokenType,string memory) external returns (struct PseudonymousProofOftradeNFT.Metadata memory)"
                      }
                    },
                    "id": 45662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1462:70:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                      "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1407:125:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 45667,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45655,
                              "src": "1558:8:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                                "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                              }
                            },
                            "id": 45668,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1567:9:32",
                            "memberName": "pseudonym",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44929,
                            "src": "1558:18:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 45666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1552:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 45665,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1552:5:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1552:25:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "416c696365",
                            "id": 45672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1585:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                              "typeString": "literal_string \"Alice\""
                            },
                            "value": "Alice"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                              "typeString": "literal_string \"Alice\""
                            }
                          ],
                          "id": 45671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1579:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 45670,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1579:5:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1579:14:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 45664,
                      "name": "assertEq0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2206,
                        2233
                      ],
                      "referencedDeclaration": 2206,
                      "src": "1542:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 45674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1542:52:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45675,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:52:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 45679,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45655,
                              "src": "1618:8:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                                "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                              }
                            },
                            "id": 45680,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1627:9:32",
                            "memberName": "tokenType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44927,
                            "src": "1618:18:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$44923",
                              "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$44923",
                              "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                            }
                          ],
                          "id": 45678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1613:4:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 45677,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1613:4:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1613:24:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 45684,
                                "name": "PseudonymousProofOftradeNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45497,
                                "src": "1644:27:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_PseudonymousProofOftradeNFT_$45497_$",
                                  "typeString": "type(contract PseudonymousProofOftradeNFT)"
                                }
                              },
                              "id": 45685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1672:9:32",
                              "memberName": "TokenType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44923,
                              "src": "1644:37:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TokenType_$44923_$",
                                "typeString": "type(enum PseudonymousProofOftradeNFT.TokenType)"
                              }
                            },
                            "id": 45686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1682:3:32",
                            "memberName": "BTC",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44920,
                            "src": "1644:41:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$44923",
                              "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$44923",
                              "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                            }
                          ],
                          "id": 45683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1639:4:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 45682,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1639:4:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1639:47:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45676,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1604:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1604:83:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45689,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:83:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45691,
                          "name": "metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45655,
                          "src": "1706:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                            "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                          }
                        },
                        "id": 45692,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1715:15:32",
                        "memberName": "openedTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44939,
                        "src": "1706:24:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 45693,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1732:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 45694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1738:9:32",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1732:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45690,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1697:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1697:51:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45696,
                  "nodeType": "ExpressionStatement",
                  "src": "1697:51:32"
                }
              ]
            },
            "documentation": {
              "id": 45648,
              "nodeType": "StructuredDocumentation",
              "src": "1297:62:32",
              "text": " @dev Tests the behavior of opening a trade."
            },
            "functionSelector": "771e081e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_OpenTrade",
            "nameLocation": "1373:14:32",
            "parameters": {
              "id": 45649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1387:2:32"
            },
            "returnParameters": {
              "id": 45650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:0:32"
            },
            "scope": 45800,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45739,
            "nodeType": "FunctionDefinition",
            "src": "1897:417:32",
            "nodes": [],
            "body": {
              "id": 45738,
              "nodeType": "Block",
              "src": "1931:383:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45706,
                      "mutability": "mutable",
                      "name": "openedMetadata",
                      "nameLocation": "1985:14:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45738,
                      "src": "1941:58:32",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                        "typeString": "struct PseudonymousProofOftradeNFT.Metadata"
                      },
                      "typeName": {
                        "id": 45705,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45704,
                          "name": "PseudonymousProofOftradeNFT.Metadata",
                          "nameLocations": [
                            "1941:27:32",
                            "1969:8:32"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44944,
                          "src": "1941:36:32"
                        },
                        "referencedDeclaration": 44944,
                        "src": "1941:36:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$44944_storage_ptr",
                          "typeString": "struct PseudonymousProofOftradeNFT.Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45714,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 45709,
                            "name": "PseudonymousProofOftradeNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45497,
                            "src": "2021:27:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PseudonymousProofOftradeNFT_$45497_$",
                              "typeString": "type(contract PseudonymousProofOftradeNFT)"
                            }
                          },
                          "id": 45710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2049:9:32",
                          "memberName": "TokenType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44923,
                          "src": "2021:37:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_TokenType_$44923_$",
                            "typeString": "type(enum PseudonymousProofOftradeNFT.TokenType)"
                          }
                        },
                        "id": 45711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2059:3:32",
                        "memberName": "BTC",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44920,
                        "src": "2021:41:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TokenType_$44923",
                          "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 45712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2064:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_TokenType_$44923",
                          "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 45707,
                        "name": "tradeNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45590,
                        "src": "2002:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                          "typeString": "contract PseudonymousProofOftradeNFT"
                        }
                      },
                      "id": 45708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2011:9:32",
                      "memberName": "openTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45179,
                      "src": "2002:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_TokenType_$44923_$_t_string_memory_ptr_$returns$_t_struct$_Metadata_$44944_memory_ptr_$",
                        "typeString": "function (enum PseudonymousProofOftradeNFT.TokenType,string memory) external returns (struct PseudonymousProofOftradeNFT.Metadata memory)"
                      }
                    },
                    "id": 45713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2002:70:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                      "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1941:131:32"
                },
                {
                  "assignments": [
                    45716
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45716,
                      "mutability": "mutable",
                      "name": "openedTimestamp",
                      "nameLocation": "2090:15:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45738,
                      "src": "2082:23:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45715,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2082:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45719,
                  "initialValue": {
                    "expression": {
                      "id": 45717,
                      "name": "openedMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45706,
                      "src": "2108:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                        "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                      }
                    },
                    "id": 45718,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2123:15:32",
                    "memberName": "openedTimestamp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 44939,
                    "src": "2108:30:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2082:56:32"
                },
                {
                  "assignments": [
                    45724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45724,
                      "mutability": "mutable",
                      "name": "closedMetadata",
                      "nameLocation": "2192:14:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45738,
                      "src": "2148:58:32",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                        "typeString": "struct PseudonymousProofOftradeNFT.Metadata"
                      },
                      "typeName": {
                        "id": 45723,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45722,
                          "name": "PseudonymousProofOftradeNFT.Metadata",
                          "nameLocations": [
                            "2148:27:32",
                            "2176:8:32"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44944,
                          "src": "2148:36:32"
                        },
                        "referencedDeclaration": 44944,
                        "src": "2148:36:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$44944_storage_ptr",
                          "typeString": "struct PseudonymousProofOftradeNFT.Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45730,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45727,
                        "name": "openedTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45716,
                        "src": "2229:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 45728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2246:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 45725,
                        "name": "tradeNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45590,
                        "src": "2209:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                          "typeString": "contract PseudonymousProofOftradeNFT"
                        }
                      },
                      "id": 45726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2218:10:32",
                      "memberName": "closeTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45426,
                      "src": "2209:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$_t_struct$_Metadata_$44944_memory_ptr_$",
                        "typeString": "function (uint256,string memory) external returns (struct PseudonymousProofOftradeNFT.Metadata memory)"
                      }
                    },
                    "id": 45729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2209:45:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                      "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2148:106:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45732,
                            "name": "closedMetadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45724,
                            "src": "2276:14:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                              "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                            }
                          },
                          "id": 45733,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2291:11:32",
                          "memberName": "closedPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44943,
                          "src": "2276:26:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 45734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2305:1:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2276:30:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 45731,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "2265:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 45736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2265:42:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45737,
                  "nodeType": "ExpressionStatement",
                  "src": "2265:42:32"
                }
              ]
            },
            "documentation": {
              "id": 45699,
              "nodeType": "StructuredDocumentation",
              "src": "1761:131:32",
              "text": " @dev Tests the behavior of closing a trade.\n Asserts that the closed price in the new metadata is above 0."
            },
            "functionSelector": "86a8c00a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_CloseTrade",
            "nameLocation": "1906:15:32",
            "parameters": {
              "id": 45700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1921:2:32"
            },
            "returnParameters": {
              "id": 45701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1931:0:32"
            },
            "scope": 45800,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45753,
            "nodeType": "FunctionDefinition",
            "src": "2460:133:32",
            "nodes": [],
            "body": {
              "id": 45752,
              "nodeType": "Block",
              "src": "2511:82:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 45746,
                            "name": "PseudonymousProofOftradeNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45497,
                            "src": "2540:27:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PseudonymousProofOftradeNFT_$45497_$",
                              "typeString": "type(contract PseudonymousProofOftradeNFT)"
                            }
                          },
                          "id": 45747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2568:9:32",
                          "memberName": "TokenType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44923,
                          "src": "2540:37:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_TokenType_$44923_$",
                            "typeString": "type(enum PseudonymousProofOftradeNFT.TokenType)"
                          }
                        },
                        "id": 45748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2578:3:32",
                        "memberName": "BTC",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44920,
                        "src": "2540:41:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TokenType_$44923",
                          "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 45749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2583:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_TokenType_$44923",
                          "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 45743,
                        "name": "tradeNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45590,
                        "src": "2521:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                          "typeString": "contract PseudonymousProofOftradeNFT"
                        }
                      },
                      "id": 45745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2530:9:32",
                      "memberName": "openTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45179,
                      "src": "2521:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_TokenType_$44923_$_t_string_memory_ptr_$returns$_t_struct$_Metadata_$44944_memory_ptr_$",
                        "typeString": "function (enum PseudonymousProofOftradeNFT.TokenType,string memory) external returns (struct PseudonymousProofOftradeNFT.Metadata memory)"
                      }
                    },
                    "id": 45750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2521:65:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                      "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                    }
                  },
                  "id": 45751,
                  "nodeType": "ExpressionStatement",
                  "src": "2521:65:32"
                }
              ]
            },
            "documentation": {
              "id": 45740,
              "nodeType": "StructuredDocumentation",
              "src": "2320:135:32",
              "text": " @dev Tests the behavior when trying to open a trade with an empty pseudonym.\n This test is expected to revert."
            },
            "functionSelector": "07e87bf8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_OpenTradeEmptyPseudonym",
            "nameLocation": "2469:32:32",
            "parameters": {
              "id": 45741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2501:2:32"
            },
            "returnParameters": {
              "id": 45742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2511:0:32"
            },
            "scope": 45800,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45775,
            "nodeType": "FunctionDefinition",
            "src": "2742:194:32",
            "nodes": [],
            "body": {
              "id": 45774,
              "nodeType": "Block",
              "src": "2796:140:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 45760,
                            "name": "PseudonymousProofOftradeNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45497,
                            "src": "2825:27:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PseudonymousProofOftradeNFT_$45497_$",
                              "typeString": "type(contract PseudonymousProofOftradeNFT)"
                            }
                          },
                          "id": 45761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2853:9:32",
                          "memberName": "TokenType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44923,
                          "src": "2825:37:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_TokenType_$44923_$",
                            "typeString": "type(enum PseudonymousProofOftradeNFT.TokenType)"
                          }
                        },
                        "id": 45762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2863:3:32",
                        "memberName": "BTC",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44920,
                        "src": "2825:41:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TokenType_$44923",
                          "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 45763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2868:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_TokenType_$44923",
                          "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 45757,
                        "name": "tradeNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45590,
                        "src": "2806:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                          "typeString": "contract PseudonymousProofOftradeNFT"
                        }
                      },
                      "id": 45759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2815:9:32",
                      "memberName": "openTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45179,
                      "src": "2806:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_TokenType_$44923_$_t_string_memory_ptr_$returns$_t_struct$_Metadata_$44944_memory_ptr_$",
                        "typeString": "function (enum PseudonymousProofOftradeNFT.TokenType,string memory) external returns (struct PseudonymousProofOftradeNFT.Metadata memory)"
                      }
                    },
                    "id": 45764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2806:70:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                      "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                    }
                  },
                  "id": 45765,
                  "nodeType": "ExpressionStatement",
                  "src": "2806:70:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45769,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2906:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 45770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2912:9:32",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2906:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "426f62",
                        "id": 45771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2923:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        },
                        "value": "Bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        }
                      ],
                      "expression": {
                        "id": 45766,
                        "name": "tradeNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45590,
                        "src": "2886:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                          "typeString": "contract PseudonymousProofOftradeNFT"
                        }
                      },
                      "id": 45768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2895:10:32",
                      "memberName": "closeTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45426,
                      "src": "2886:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$_t_struct$_Metadata_$44944_memory_ptr_$",
                        "typeString": "function (uint256,string memory) external returns (struct PseudonymousProofOftradeNFT.Metadata memory)"
                      }
                    },
                    "id": 45772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2886:43:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                      "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                    }
                  },
                  "id": 45773,
                  "nodeType": "ExpressionStatement",
                  "src": "2886:43:32"
                }
              ]
            },
            "documentation": {
              "id": 45754,
              "nodeType": "StructuredDocumentation",
              "src": "2599:138:32",
              "text": " @dev Tests the behavior when trying to close a trade with an invalid pseudonym.\n This test is expected to revert."
            },
            "functionSelector": "cc9d916b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_CloseTradeInvalidPseudonym",
            "nameLocation": "2751:35:32",
            "parameters": {
              "id": 45755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2786:2:32"
            },
            "returnParameters": {
              "id": 45756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2796:0:32"
            },
            "scope": 45800,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45799,
            "nodeType": "FunctionDefinition",
            "src": "3085:200:32",
            "nodes": [],
            "body": {
              "id": 45798,
              "nodeType": "Block",
              "src": "3139:146:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 45782,
                            "name": "PseudonymousProofOftradeNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45497,
                            "src": "3168:27:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PseudonymousProofOftradeNFT_$45497_$",
                              "typeString": "type(contract PseudonymousProofOftradeNFT)"
                            }
                          },
                          "id": 45783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3196:9:32",
                          "memberName": "TokenType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44923,
                          "src": "3168:37:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_TokenType_$44923_$",
                            "typeString": "type(enum PseudonymousProofOftradeNFT.TokenType)"
                          }
                        },
                        "id": 45784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3206:3:32",
                        "memberName": "BTC",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44920,
                        "src": "3168:41:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TokenType_$44923",
                          "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 45785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3211:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_TokenType_$44923",
                          "typeString": "enum PseudonymousProofOftradeNFT.TokenType"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 45779,
                        "name": "tradeNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45590,
                        "src": "3149:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                          "typeString": "contract PseudonymousProofOftradeNFT"
                        }
                      },
                      "id": 45781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3158:9:32",
                      "memberName": "openTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45179,
                      "src": "3149:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_enum$_TokenType_$44923_$_t_string_memory_ptr_$returns$_t_struct$_Metadata_$44944_memory_ptr_$",
                        "typeString": "function (enum PseudonymousProofOftradeNFT.TokenType,string memory) external returns (struct PseudonymousProofOftradeNFT.Metadata memory)"
                      }
                    },
                    "id": 45786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3149:70:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                      "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                    }
                  },
                  "id": 45787,
                  "nodeType": "ExpressionStatement",
                  "src": "3149:70:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45791,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3249:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 45792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3255:9:32",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3249:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 45793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3267:1:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3249:19:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 45795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3270:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 45788,
                        "name": "tradeNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45590,
                        "src": "3229:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PseudonymousProofOftradeNFT_$45497",
                          "typeString": "contract PseudonymousProofOftradeNFT"
                        }
                      },
                      "id": 45790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3238:10:32",
                      "memberName": "closeTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45426,
                      "src": "3229:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$_t_struct$_Metadata_$44944_memory_ptr_$",
                        "typeString": "function (uint256,string memory) external returns (struct PseudonymousProofOftradeNFT.Metadata memory)"
                      }
                    },
                    "id": 45796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3229:49:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$44944_memory_ptr",
                      "typeString": "struct PseudonymousProofOftradeNFT.Metadata memory"
                    }
                  },
                  "id": 45797,
                  "nodeType": "ExpressionStatement",
                  "src": "3229:49:32"
                }
              ]
            },
            "documentation": {
              "id": 45776,
              "nodeType": "StructuredDocumentation",
              "src": "2942:138:32",
              "text": " @dev Tests the behavior when trying to close a trade with an invalid timestamp.\n This test is expected to revert."
            },
            "functionSelector": "890d8b80",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_CloseTradeInvalidTimestamp",
            "nameLocation": "3094:35:32",
            "parameters": {
              "id": 45777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3129:2:32"
            },
            "returnParameters": {
              "id": 45778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3139:0:32"
            },
            "scope": 45800,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45586,
              "name": "Test",
              "nameLocations": [
                "518:4:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11898,
              "src": "518:4:32"
            },
            "id": 45587,
            "nodeType": "InheritanceSpecifier",
            "src": "518:4:32"
          }
        ],
        "canonicalName": "PseudonymousProofOftradeNFTTest",
        "contractDependencies": [
          44897,
          45497
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 45585,
          "nodeType": "StructuredDocumentation",
          "src": "177:296:32",
          "text": " @title PseudonymousProofOftradeNFTTest\n @author Christian Reyes\n @notice This contract tests the functionalities of the PseudonymousProofOftradeNFT contract.\n @dev This contract is used for testing the PseudonymousProofOftradeNFT contract, and calls from a Mock ChainLink Oricle."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45800,
          11898,
          2357,
          2354,
          11847,
          7585,
          7295,
          6531,
          4477,
          3784,
          2291
        ],
        "name": "PseudonymousProofOftradeNFTTest",
        "nameLocation": "483:31:32",
        "scope": 45801,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 32
}