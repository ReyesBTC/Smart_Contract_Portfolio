{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "BTCPricefeed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ETHPricefeed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "LINKPricefeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum DynamicAssetPricedNFT.TokenType",
          "name": "_tkr",
          "type": "uint8"
        }
      ],
      "name": "getLatestPrice",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "image",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct DynamicAssetPricedNFT.Metadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum DynamicAssetPricedNFT.TokenType",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "hasMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum DynamicAssetPricedNFT.TokenType",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "tokenMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "image",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateMetadataHourly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620023693803806200236983398101604081905262000034916200011e565b6040805160208101909152600081526200004e816200009d565b506200005a33620000af565b600480546001600160a01b039485166001600160a01b031991821617909155600580549385169382169390931790925560068054919093169116179055620002d9565b6002620000ab82826200020d565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200011957600080fd5b919050565b6000806000606084860312156200013457600080fd5b6200013f8462000101565b92506200014f6020850162000101565b91506200015f6040850162000101565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200019357607f821691505b602082108103620001b457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020857600081815260208120601f850160051c81016020861015620001e35750805b601f850160051c820191505b818110156200020457828155600101620001ef565b5050505b505050565b81516001600160401b0381111562000229576200022962000168565b62000241816200023a84546200017e565b84620001ba565b602080601f831160018114620002795760008415620002605750858301515b600019600386901b1c1916600185901b17855562000204565b600085815260208120601f198616915b82811015620002aa5788860151825594840194600190910190840162000289565b5085821015620002c95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61208080620002e96000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80634e1273f411610097578063e985e9c511610066578063e985e9c514610210578063f242432a1461024c578063f2fde38b1461025f578063ff97f6601461027257600080fd5b80634e1273f4146101ba578063715018a6146101da5780638da5cb5b146101e2578063a22cb465146101fd57600080fd5b80630c35a900116100d35780630c35a900146101625780630e89341c146101645780632eb2c2d614610184578063300ffc731461019757600080fd5b8062fdd58e146100f957806301ffc9a71461011f5780630c20a01f14610142575b600080fd5b61010c610107366004611556565b6102a0565b6040519081526020015b60405180910390f35b61013261012d366004611596565b610339565b6040519015158152602001610116565b6101556101503660046115c2565b610389565b6040516101169190611623565b005b610177610172366004611692565b610765565b60405161011691906116ab565b61016261019236600461180a565b6107f9565b6101aa6101a53660046115c2565b610845565b60405161011694939291906118b4565b6101cd6101c83660046118ff565b610a05565b6040516101169190611a05565b610162610b2f565b6003546040516001600160a01b039091168152602001610116565b61016261020b366004611a18565b610b41565b61013261021e366004611a54565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61016261025a366004611a87565b610b50565b61016261026d366004611aec565b610b95565b610132610280366004611b07565b600860209081526000928352604080842090915290825290205460ff1681565b60006001600160a01b0383166103105760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061036a57506001600160e01b031982166303a24d0760e21b145b8061033357506301ffc9a760e01b6001600160e01b0319831614610333565b6103b46040518060800160405280606081526020016060815260200160608152602001600081525090565b336000908152600860205260408120908360028111156103d6576103d6611b31565b60028111156103e7576103e7611b31565b815260208101919091526040016000205460ff16156104595760405162461bcd60e51b815260206004820152602860248201527f596f75206861766520616c7265616479206d696e746564207468697320746f6b60448201526732b7103a3cb8329760c11b6064820152608401610307565b60006104866040518060800160405280606081526020016060815260200160608152602001600081525090565b600084600281111561049a5761049a611b31565b036104ae576104a7610c0e565b91506104f3565b60018460028111156104c2576104c2611b31565b036104cf576104a7610c86565b60028460028111156104e3576104e3611b31565b036104f3576104f0610cdc565b91505b816007600086600281111561050a5761050a611b31565b600281111561051b5761051b611b31565b81526020019081526020016000206003015411156105ca5760405180608001604052806040518060400160405280600a8152602001692132b0b9102a37b5b2b760b11b81525081526020016040518060600160405280602181526020016120086021913981526020016040518060400160405280601e81526020017f68747470733a2f2f6578616d706c652e636f6d2f626561725f696d6167650000815250815260200183815250905061065d565b60405180608001604052806040518060400160405280600a815260200169213ab636102a37b5b2b760b11b81525081526020016040518060600160405280602281526020016120296022913981526020016040518060400160405280601e81526020017f68747470733a2f2f6578616d706c652e636f6d2f62756c6c5f696d616765000081525081526020018381525090505b806007600086600281111561067457610674611b31565b600281111561068557610685611b31565b81526020810191909152604001600020815181906106a39082611bcc565b50602082015160018201906106b89082611bcc565b50604082015160028201906106cd9082611bcc565b50606091909101516003909101553360009081526008602052604081206001918660028111156106ff576106ff611b31565b600281111561071057610710611b31565b81526020810191909152604001600020805460ff191691151591909117905561075c3385600281111561074557610745611b31565b600160405180602001604052806000815250610d32565b9392505050565b565b60606002805461077490611b47565b80601f01602080910402602001604051908101604052809291908181526020018280546107a090611b47565b80156107ed5780601f106107c2576101008083540402835291602001916107ed565b820191906000526020600020905b8154815290600101906020018083116107d057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806108155750610815853361021e565b6108315760405162461bcd60e51b815260040161030790611c8c565b61083e8585858585610e46565b5050505050565b60076020526000908152604090208054819061086090611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461088c90611b47565b80156108d95780601f106108ae576101008083540402835291602001916108d9565b820191906000526020600020905b8154815290600101906020018083116108bc57829003601f168201915b5050505050908060010180546108ee90611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461091a90611b47565b80156109675780601f1061093c57610100808354040283529160200191610967565b820191906000526020600020905b81548152906001019060200180831161094a57829003601f168201915b50505050509080600201805461097c90611b47565b80601f01602080910402602001604051908101604052809291908181526020018280546109a890611b47565b80156109f55780601f106109ca576101008083540402835291602001916109f5565b820191906000526020600020905b8154815290600101906020018083116109d857829003601f168201915b5050505050908060030154905084565b60608151835114610a6a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610307565b6000835167ffffffffffffffff811115610a8657610a866116be565b604051908082528060200260200182016040528015610aaf578160200160208202803683370190505b50905060005b8451811015610b2757610afa858281518110610ad357610ad3611cda565b6020026020010151858381518110610aed57610aed611cda565b60200260200101516102a0565b828281518110610b0c57610b0c611cda565b6020908102919091010152610b2081611d06565b9050610ab5565b509392505050565b610b37611023565b610763600061107d565b610b4c3383836110cf565b5050565b6001600160a01b038516331480610b6c5750610b6c853361021e565b610b885760405162461bcd60e51b815260040161030790611c8c565b61083e85858585856111af565b610b9d611023565b6001600160a01b038116610c025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610307565b610c0b8161107d565b50565b6004805460408051633fabe5a360e21b8152905160009384936001600160a01b03169263feaf968c928183019260a0928290030181865afa158015610c57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7b9190611d39565b509195945050505050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610c57573d6000803e3d6000fd5b600080600660009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610c57573d6000803e3d6000fd5b6001600160a01b038416610d925760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610307565b336000610d9e856112d9565b90506000610dab856112d9565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610ddd908490611d89565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e3d83600089898989611324565b50505050505050565b8151835114610ea85760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610307565b6001600160a01b038416610ece5760405162461bcd60e51b815260040161030790611d9c565b3360005b8451811015610fb5576000858281518110610eef57610eef611cda565b602002602001015190506000858381518110610f0d57610f0d611cda565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610f5d5760405162461bcd60e51b815260040161030790611de1565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610f9a908490611d89565b9250508190555050505080610fae90611d06565b9050610ed2565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611005929190611e2b565b60405180910390a461101b81878787878761147f565b505050505050565b6003546001600160a01b031633146107635760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610307565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036111425760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610307565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166111d55760405162461bcd60e51b815260040161030790611d9c565b3360006111e1856112d9565b905060006111ee856112d9565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156112315760405162461bcd60e51b815260040161030790611de1565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061126e908490611d89565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46112ce848a8a8a8a8a611324565b505050505050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061131357611313611cda565b602090810291909101015292915050565b6001600160a01b0384163b1561101b5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113689089908990889088908890600401611e59565b6020604051808303816000875af19250505080156113a3575060408051601f3d908101601f191682019092526113a091810190611e9e565b60015b61144f576113af611ebb565b806308c379a0036113e857506113c3611ed7565b806113ce57506113ea565b8060405162461bcd60e51b815260040161030791906116ab565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610307565b6001600160e01b0319811663f23a6e6160e01b14610e3d5760405162461bcd60e51b815260040161030790611f61565b6001600160a01b0384163b1561101b5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906114c39089908990889088908890600401611fa9565b6020604051808303816000875af19250505080156114fe575060408051601f3d908101601f191682019092526114fb91810190611e9e565b60015b61150a576113af611ebb565b6001600160e01b0319811663bc197c8160e01b14610e3d5760405162461bcd60e51b815260040161030790611f61565b80356001600160a01b038116811461155157600080fd5b919050565b6000806040838503121561156957600080fd5b6115728361153a565b946020939093013593505050565b6001600160e01b031981168114610c0b57600080fd5b6000602082840312156115a857600080fd5b813561075c81611580565b80356003811061155157600080fd5b6000602082840312156115d457600080fd5b61075c826115b3565b6000815180845260005b81811015611603576020818501810151868301820152016115e7565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600082516080602084015261163f60a08401826115dd565b90506020840151601f198085840301604086015261165d83836115dd565b925060408601519150808584030160608601525061167b82826115dd565b915050606084015160808401528091505092915050565b6000602082840312156116a457600080fd5b5035919050565b60208152600061075c60208301846115dd565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156116fa576116fa6116be565b6040525050565b600067ffffffffffffffff82111561171b5761171b6116be565b5060051b60200190565b600082601f83011261173657600080fd5b8135602061174382611701565b60405161175082826116d4565b83815260059390931b850182019282810191508684111561177057600080fd5b8286015b8481101561178b5780358352918301918301611774565b509695505050505050565b600082601f8301126117a757600080fd5b813567ffffffffffffffff8111156117c1576117c16116be565b6040516117d8601f8301601f1916602001826116d4565b8181528460208386010111156117ed57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561182257600080fd5b61182b8661153a565b94506118396020870161153a565b9350604086013567ffffffffffffffff8082111561185657600080fd5b61186289838a01611725565b9450606088013591508082111561187857600080fd5b61188489838a01611725565b9350608088013591508082111561189a57600080fd5b506118a788828901611796565b9150509295509295909350565b6080815260006118c760808301876115dd565b82810360208401526118d981876115dd565b905082810360408401526118ed81866115dd565b91505082606083015295945050505050565b6000806040838503121561191257600080fd5b823567ffffffffffffffff8082111561192a57600080fd5b818501915085601f83011261193e57600080fd5b8135602061194b82611701565b60405161195882826116d4565b83815260059390931b850182019282810191508984111561197857600080fd5b948201945b8386101561199d5761198e8661153a565b8252948201949082019061197d565b965050860135925050808211156119b357600080fd5b506119c085828601611725565b9150509250929050565b600081518084526020808501945080840160005b838110156119fa578151875295820195908201906001016119de565b509495945050505050565b60208152600061075c60208301846119ca565b60008060408385031215611a2b57600080fd5b611a348361153a565b915060208301358015158114611a4957600080fd5b809150509250929050565b60008060408385031215611a6757600080fd5b611a708361153a565b9150611a7e6020840161153a565b90509250929050565b600080600080600060a08688031215611a9f57600080fd5b611aa88661153a565b9450611ab66020870161153a565b93506040860135925060608601359150608086013567ffffffffffffffff811115611ae057600080fd5b6118a788828901611796565b600060208284031215611afe57600080fd5b61075c8261153a565b60008060408385031215611b1a57600080fd5b611b238361153a565b9150611a7e602084016115b3565b634e487b7160e01b600052602160045260246000fd5b600181811c90821680611b5b57607f821691505b602082108103611b7b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115611bc757600081815260208120601f850160051c81016020861015611ba85750805b601f850160051c820191505b8181101561101b57828155600101611bb4565b505050565b815167ffffffffffffffff811115611be657611be66116be565b611bfa81611bf48454611b47565b84611b81565b602080601f831160018114611c2f5760008415611c175750858301515b600019600386901b1c1916600185901b17855561101b565b600085815260208120601f198616915b82811015611c5e57888601518255948401946001909101908401611c3f565b5085821015611c7c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611d1857611d18611cf0565b5060010190565b805169ffffffffffffffffffff8116811461155157600080fd5b600080600080600060a08688031215611d5157600080fd5b611d5a86611d1f565b9450602086015193506040860151925060608601519150611d7d60808701611d1f565b90509295509295909350565b8082018082111561033357610333611cf0565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000611e3e60408301856119ca565b8281036020840152611e5081856119ca565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611e93908301846115dd565b979650505050505050565b600060208284031215611eb057600080fd5b815161075c81611580565b600060033d1115611ed45760046000803e5060005160e01c5b90565b600060443d1015611ee55790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611f1557505050505090565b8285019150815181811115611f2d5750505050505090565b843d8701016020828501011115611f475750505050505090565b611f56602082860101876116d4565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611fd5908301866119ca565b8281036060840152611fe781866119ca565b90508281036080840152611ffb81856115dd565b9897505050505050505056fe5072696365206973206c6f776572207468616e206c61737420636865636b65642e507269636520697320686967686572207468616e206c61737420636865636b65642ea2646970667358221220b4dff0106063263913b931ca633776c0b3bc1caa72e50f30f17dfde07809cb7164736f6c63430008150033",
    "sourceMap": "621:4347:28:-:0;;;2041:283;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1107:62:20;;;;;;;;;-1:-1:-1;1107:62:20;;1149:13;1107:62;1149:7;:13::i;:::-;-1:-1:-1;936:32:19;719:10:25;936:18:19;:32::i;:::-;2142:13:28::1;:51:::0;;-1:-1:-1;;;;;2142:51:28;;::::1;-1:-1:-1::0;;;;;;2142:51:28;;::::1;;::::0;;;2203:13:::1;:51:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2264:14:::1;:53:::0;;;;;::::1;::::0;::::1;;::::0;;621:4347;;8149:86:20;8215:4;:13;8222:6;8215:4;:13;:::i;:::-;;8149:86;:::o;2426:187:19:-;2518:6;;;-1:-1:-1;;;;;2534:17:19;;;-1:-1:-1;;;;;;2534:17:19;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:177:33:-;93:13;;-1:-1:-1;;;;;135:31:33;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;579:127::-;640:10;635:3;631:20;628:1;621:31;671:4;668:1;661:15;695:4;692:1;685:15;711:380;790:1;786:12;;;;833;;;854:61;;908:4;900:6;896:17;886:27;;854:61;961:2;953:6;950:14;930:18;927:38;924:161;;1007:10;1002:3;998:20;995:1;988:31;1042:4;1039:1;1032:15;1070:4;1067:1;1060:15;924:161;;711:380;;;:::o;1222:545::-;1324:2;1319:3;1316:11;1313:448;;;1360:1;1385:5;1381:2;1374:17;1430:4;1426:2;1416:19;1500:2;1488:10;1484:19;1481:1;1477:27;1471:4;1467:38;1536:4;1524:10;1521:20;1518:47;;;-1:-1:-1;1559:4:33;1518:47;1614:2;1609:3;1605:12;1602:1;1598:20;1592:4;1588:31;1578:41;;1669:82;1687:2;1680:5;1677:13;1669:82;;;1732:17;;;1713:1;1702:13;1669:82;;;1673:3;;;1313:448;1222:545;;;:::o;1943:1352::-;2063:10;;-1:-1:-1;;;;;2085:30:33;;2082:56;;;2118:18;;:::i;:::-;2147:97;2237:6;2197:38;2229:4;2223:11;2197:38;:::i;:::-;2191:4;2147:97;:::i;:::-;2299:4;;2363:2;2352:14;;2380:1;2375:663;;;;3082:1;3099:6;3096:89;;;-1:-1:-1;3151:19:33;;;3145:26;3096:89;-1:-1:-1;;1900:1:33;1896:11;;;1892:24;1888:29;1878:40;1924:1;1920:11;;;1875:57;3198:81;;2345:944;;2375:663;1169:1;1162:14;;;1206:4;1193:18;;-1:-1:-1;;2411:20:33;;;2529:236;2543:7;2540:1;2537:14;2529:236;;;2632:19;;;2626:26;2611:42;;2724:27;;;;2692:1;2680:14;;;;2559:19;;2529:236;;;2533:3;2793:6;2784:7;2781:19;2778:201;;;2854:19;;;2848:26;-1:-1:-1;;2937:1:33;2933:14;;;2949:3;2929:24;2925:37;2921:42;2906:58;2891:74;;2778:201;-1:-1:-1;;;;;3025:1:33;3009:14;;;3005:22;2992:36;;-1:-1:-1;1943:1352:33:o;:::-;621:4347:28;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f45760003560e01c80634e1273f411610097578063e985e9c511610066578063e985e9c514610210578063f242432a1461024c578063f2fde38b1461025f578063ff97f6601461027257600080fd5b80634e1273f4146101ba578063715018a6146101da5780638da5cb5b146101e2578063a22cb465146101fd57600080fd5b80630c35a900116100d35780630c35a900146101625780630e89341c146101645780632eb2c2d614610184578063300ffc731461019757600080fd5b8062fdd58e146100f957806301ffc9a71461011f5780630c20a01f14610142575b600080fd5b61010c610107366004611556565b6102a0565b6040519081526020015b60405180910390f35b61013261012d366004611596565b610339565b6040519015158152602001610116565b6101556101503660046115c2565b610389565b6040516101169190611623565b005b610177610172366004611692565b610765565b60405161011691906116ab565b61016261019236600461180a565b6107f9565b6101aa6101a53660046115c2565b610845565b60405161011694939291906118b4565b6101cd6101c83660046118ff565b610a05565b6040516101169190611a05565b610162610b2f565b6003546040516001600160a01b039091168152602001610116565b61016261020b366004611a18565b610b41565b61013261021e366004611a54565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61016261025a366004611a87565b610b50565b61016261026d366004611aec565b610b95565b610132610280366004611b07565b600860209081526000928352604080842090915290825290205460ff1681565b60006001600160a01b0383166103105760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061036a57506001600160e01b031982166303a24d0760e21b145b8061033357506301ffc9a760e01b6001600160e01b0319831614610333565b6103b46040518060800160405280606081526020016060815260200160608152602001600081525090565b336000908152600860205260408120908360028111156103d6576103d6611b31565b60028111156103e7576103e7611b31565b815260208101919091526040016000205460ff16156104595760405162461bcd60e51b815260206004820152602860248201527f596f75206861766520616c7265616479206d696e746564207468697320746f6b60448201526732b7103a3cb8329760c11b6064820152608401610307565b60006104866040518060800160405280606081526020016060815260200160608152602001600081525090565b600084600281111561049a5761049a611b31565b036104ae576104a7610c0e565b91506104f3565b60018460028111156104c2576104c2611b31565b036104cf576104a7610c86565b60028460028111156104e3576104e3611b31565b036104f3576104f0610cdc565b91505b816007600086600281111561050a5761050a611b31565b600281111561051b5761051b611b31565b81526020019081526020016000206003015411156105ca5760405180608001604052806040518060400160405280600a8152602001692132b0b9102a37b5b2b760b11b81525081526020016040518060600160405280602181526020016120086021913981526020016040518060400160405280601e81526020017f68747470733a2f2f6578616d706c652e636f6d2f626561725f696d6167650000815250815260200183815250905061065d565b60405180608001604052806040518060400160405280600a815260200169213ab636102a37b5b2b760b11b81525081526020016040518060600160405280602281526020016120296022913981526020016040518060400160405280601e81526020017f68747470733a2f2f6578616d706c652e636f6d2f62756c6c5f696d616765000081525081526020018381525090505b806007600086600281111561067457610674611b31565b600281111561068557610685611b31565b81526020810191909152604001600020815181906106a39082611bcc565b50602082015160018201906106b89082611bcc565b50604082015160028201906106cd9082611bcc565b50606091909101516003909101553360009081526008602052604081206001918660028111156106ff576106ff611b31565b600281111561071057610710611b31565b81526020810191909152604001600020805460ff191691151591909117905561075c3385600281111561074557610745611b31565b600160405180602001604052806000815250610d32565b9392505050565b565b60606002805461077490611b47565b80601f01602080910402602001604051908101604052809291908181526020018280546107a090611b47565b80156107ed5780601f106107c2576101008083540402835291602001916107ed565b820191906000526020600020905b8154815290600101906020018083116107d057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806108155750610815853361021e565b6108315760405162461bcd60e51b815260040161030790611c8c565b61083e8585858585610e46565b5050505050565b60076020526000908152604090208054819061086090611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461088c90611b47565b80156108d95780601f106108ae576101008083540402835291602001916108d9565b820191906000526020600020905b8154815290600101906020018083116108bc57829003601f168201915b5050505050908060010180546108ee90611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461091a90611b47565b80156109675780601f1061093c57610100808354040283529160200191610967565b820191906000526020600020905b81548152906001019060200180831161094a57829003601f168201915b50505050509080600201805461097c90611b47565b80601f01602080910402602001604051908101604052809291908181526020018280546109a890611b47565b80156109f55780601f106109ca576101008083540402835291602001916109f5565b820191906000526020600020905b8154815290600101906020018083116109d857829003601f168201915b5050505050908060030154905084565b60608151835114610a6a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610307565b6000835167ffffffffffffffff811115610a8657610a866116be565b604051908082528060200260200182016040528015610aaf578160200160208202803683370190505b50905060005b8451811015610b2757610afa858281518110610ad357610ad3611cda565b6020026020010151858381518110610aed57610aed611cda565b60200260200101516102a0565b828281518110610b0c57610b0c611cda565b6020908102919091010152610b2081611d06565b9050610ab5565b509392505050565b610b37611023565b610763600061107d565b610b4c3383836110cf565b5050565b6001600160a01b038516331480610b6c5750610b6c853361021e565b610b885760405162461bcd60e51b815260040161030790611c8c565b61083e85858585856111af565b610b9d611023565b6001600160a01b038116610c025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610307565b610c0b8161107d565b50565b6004805460408051633fabe5a360e21b8152905160009384936001600160a01b03169263feaf968c928183019260a0928290030181865afa158015610c57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7b9190611d39565b509195945050505050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610c57573d6000803e3d6000fd5b600080600660009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610c57573d6000803e3d6000fd5b6001600160a01b038416610d925760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610307565b336000610d9e856112d9565b90506000610dab856112d9565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610ddd908490611d89565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e3d83600089898989611324565b50505050505050565b8151835114610ea85760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610307565b6001600160a01b038416610ece5760405162461bcd60e51b815260040161030790611d9c565b3360005b8451811015610fb5576000858281518110610eef57610eef611cda565b602002602001015190506000858381518110610f0d57610f0d611cda565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610f5d5760405162461bcd60e51b815260040161030790611de1565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610f9a908490611d89565b9250508190555050505080610fae90611d06565b9050610ed2565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611005929190611e2b565b60405180910390a461101b81878787878761147f565b505050505050565b6003546001600160a01b031633146107635760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610307565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036111425760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610307565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166111d55760405162461bcd60e51b815260040161030790611d9c565b3360006111e1856112d9565b905060006111ee856112d9565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156112315760405162461bcd60e51b815260040161030790611de1565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061126e908490611d89565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46112ce848a8a8a8a8a611324565b505050505050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061131357611313611cda565b602090810291909101015292915050565b6001600160a01b0384163b1561101b5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113689089908990889088908890600401611e59565b6020604051808303816000875af19250505080156113a3575060408051601f3d908101601f191682019092526113a091810190611e9e565b60015b61144f576113af611ebb565b806308c379a0036113e857506113c3611ed7565b806113ce57506113ea565b8060405162461bcd60e51b815260040161030791906116ab565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610307565b6001600160e01b0319811663f23a6e6160e01b14610e3d5760405162461bcd60e51b815260040161030790611f61565b6001600160a01b0384163b1561101b5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906114c39089908990889088908890600401611fa9565b6020604051808303816000875af19250505080156114fe575060408051601f3d908101601f191682019092526114fb91810190611e9e565b60015b61150a576113af611ebb565b6001600160e01b0319811663bc197c8160e01b14610e3d5760405162461bcd60e51b815260040161030790611f61565b80356001600160a01b038116811461155157600080fd5b919050565b6000806040838503121561156957600080fd5b6115728361153a565b946020939093013593505050565b6001600160e01b031981168114610c0b57600080fd5b6000602082840312156115a857600080fd5b813561075c81611580565b80356003811061155157600080fd5b6000602082840312156115d457600080fd5b61075c826115b3565b6000815180845260005b81811015611603576020818501810151868301820152016115e7565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600082516080602084015261163f60a08401826115dd565b90506020840151601f198085840301604086015261165d83836115dd565b925060408601519150808584030160608601525061167b82826115dd565b915050606084015160808401528091505092915050565b6000602082840312156116a457600080fd5b5035919050565b60208152600061075c60208301846115dd565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156116fa576116fa6116be565b6040525050565b600067ffffffffffffffff82111561171b5761171b6116be565b5060051b60200190565b600082601f83011261173657600080fd5b8135602061174382611701565b60405161175082826116d4565b83815260059390931b850182019282810191508684111561177057600080fd5b8286015b8481101561178b5780358352918301918301611774565b509695505050505050565b600082601f8301126117a757600080fd5b813567ffffffffffffffff8111156117c1576117c16116be565b6040516117d8601f8301601f1916602001826116d4565b8181528460208386010111156117ed57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561182257600080fd5b61182b8661153a565b94506118396020870161153a565b9350604086013567ffffffffffffffff8082111561185657600080fd5b61186289838a01611725565b9450606088013591508082111561187857600080fd5b61188489838a01611725565b9350608088013591508082111561189a57600080fd5b506118a788828901611796565b9150509295509295909350565b6080815260006118c760808301876115dd565b82810360208401526118d981876115dd565b905082810360408401526118ed81866115dd565b91505082606083015295945050505050565b6000806040838503121561191257600080fd5b823567ffffffffffffffff8082111561192a57600080fd5b818501915085601f83011261193e57600080fd5b8135602061194b82611701565b60405161195882826116d4565b83815260059390931b850182019282810191508984111561197857600080fd5b948201945b8386101561199d5761198e8661153a565b8252948201949082019061197d565b965050860135925050808211156119b357600080fd5b506119c085828601611725565b9150509250929050565b600081518084526020808501945080840160005b838110156119fa578151875295820195908201906001016119de565b509495945050505050565b60208152600061075c60208301846119ca565b60008060408385031215611a2b57600080fd5b611a348361153a565b915060208301358015158114611a4957600080fd5b809150509250929050565b60008060408385031215611a6757600080fd5b611a708361153a565b9150611a7e6020840161153a565b90509250929050565b600080600080600060a08688031215611a9f57600080fd5b611aa88661153a565b9450611ab66020870161153a565b93506040860135925060608601359150608086013567ffffffffffffffff811115611ae057600080fd5b6118a788828901611796565b600060208284031215611afe57600080fd5b61075c8261153a565b60008060408385031215611b1a57600080fd5b611b238361153a565b9150611a7e602084016115b3565b634e487b7160e01b600052602160045260246000fd5b600181811c90821680611b5b57607f821691505b602082108103611b7b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115611bc757600081815260208120601f850160051c81016020861015611ba85750805b601f850160051c820191505b8181101561101b57828155600101611bb4565b505050565b815167ffffffffffffffff811115611be657611be66116be565b611bfa81611bf48454611b47565b84611b81565b602080601f831160018114611c2f5760008415611c175750858301515b600019600386901b1c1916600185901b17855561101b565b600085815260208120601f198616915b82811015611c5e57888601518255948401946001909101908401611c3f565b5085821015611c7c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611d1857611d18611cf0565b5060010190565b805169ffffffffffffffffffff8116811461155157600080fd5b600080600080600060a08688031215611d5157600080fd5b611d5a86611d1f565b9450602086015193506040860151925060608601519150611d7d60808701611d1f565b90509295509295909350565b8082018082111561033357610333611cf0565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000611e3e60408301856119ca565b8281036020840152611e5081856119ca565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611e93908301846115dd565b979650505050505050565b600060208284031215611eb057600080fd5b815161075c81611580565b600060033d1115611ed45760046000803e5060005160e01c5b90565b600060443d1015611ee55790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611f1557505050505090565b8285019150815181811115611f2d5750505050505090565b843d8701016020828501011115611f475750505050505090565b611f56602082860101876116d4565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611fd5908301866119ca565b8281036060840152611fe781866119ca565b90508281036080840152611ffb81856115dd565b9897505050505050505056fe5072696365206973206c6f776572207468616e206c61737420636865636b65642e507269636520697320686967686572207468616e206c61737420636865636b65642ea2646970667358221220b4dff0106063263913b931ca633776c0b3bc1caa72e50f30f17dfde07809cb7164736f6c63430008150033",
    "sourceMap": "621:4347:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227:20;;;;;;:::i;:::-;;:::i;:::-;;;597:25:33;;;585:2;570:18;2185:227:20;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:33;;1177:22;1159:41;;1147:2;1132:18;1236:305:20;1019:187:33;2552:1311:28;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3979:137::-;;1940:103:20;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4042:426::-;;;;;;:::i;:::-;;:::i;1181:51:28:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2569:486:20:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1824:101:19:-;;;:::i;1201:85::-;1273:6;;1201:85;;-1:-1:-1;;;;;1273:6:19;;;8752:51:33;;8740:2;8725:18;1201:85:19;8606:203:33;3123:153:20;;;;;;:::i;:::-;;:::i;3343:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3465:27:20;;;3442:4;3465:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3343:166;3576:394;;;;;;:::i;:::-;;:::i;2074:198:19:-;;;;;;:::i;:::-;;:::i;1307:63:28:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227:20;2271:7;-1:-1:-1;;;;;2298:21:20;;2290:76;;;;-1:-1:-1;;;2290:76:20;;10722:2:33;2290:76:20;;;10704:21:33;10761:2;10741:18;;;10734:30;10800:34;10780:18;;;10773:62;-1:-1:-1;;;10851:18:33;;;10844:40;10901:19;;2290:76:20;;;;;;;;;-1:-1:-1;2383:9:20;:13;;;;;;;;;;;-1:-1:-1;;;;;2383:22:20;;;;;;;;;;2185:227;;;;;:::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:20;;-1:-1:-1;;;1373:41:20;;:109;;-1:-1:-1;;;;;;;1430:52:20;;-1:-1:-1;;;1430:52:20;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:26;;;1498:36:20;829:155:26;2552:1311:28;2608:15;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2608:15:28;2654:10;2644:21;;;;:9;:21;;;;;;2666:4;2644:27;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;2644:27:28;;;;2643:28;2635:81;;;;-1:-1:-1;;;2635:81:28;;11265:2:33;2635:81:28;;;11247:21:33;11304:2;11284:18;;;11277:30;11343:34;11323:18;;;11316:62;-1:-1:-1;;;11394:18:33;;;11387:38;11442:19;;2635:81:28;11063:404:33;2635:81:28;2727:13;2750:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2750:24:28;2864:13;2856:4;:21;;;;;;;;:::i;:::-;;2852:290;;2909:23;:21;:23::i;:::-;2893:40;;2852:290;;;2962:13;2954:4;:21;;;;;;;;:::i;:::-;;2950:192;;3007:23;:21;:23::i;2950:192::-;3060:14;3052:4;:22;;;;;;;;:::i;:::-;;3048:94;;3106:24;:22;:24::i;:::-;3090:41;;3048:94;3184:5;3156:13;:19;3170:4;3156:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;:33;3152:544;;;3216:213;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3216:213:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3409:5;3216:213;;;3205:224;;3152:544;;;3471:214;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3471:214:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3665:5;3471:214;;;3460:225;;3152:544;3728:8;3706:13;:19;3720:4;3706:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;3706:19:28;:30;;:19;;:30;;:19;:30;:::i;:::-;-1:-1:-1;3706:30:28;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3706:30:28;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3706:30:28;;;;;;;;;;;3756:10;3746:21;;;;:9;:21;;;;;3776:4;;3768;3746:27;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;3746:27:28;:34;;-1:-1:-1;;3746:34:28;;;;;;;;;;3791:39;3797:10;3817:4;3809:13;;;;;;;;:::i;:::-;3824:1;3791:39;;;;;;;;;;;;:5;:39::i;:::-;3848:8;2552:1311;-1:-1:-1;;;2552:1311:28:o;3979:137::-;:::o;1940:103:20:-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4042:426::-;-1:-1:-1;;;;;4267:20:20;;719:10:25;4267:20:20;;:60;;-1:-1:-1;4291:36:20;4308:4;719:10:25;3343:166:20;:::i;4291:36::-;4246:153;;;;-1:-1:-1;;;4246:153:20;;;;;;;:::i;:::-;4409:52;4432:4;4438:2;4442:3;4447:7;4456:4;4409:22;:52::i;:::-;4042:426;;;;;:::o;1181:51:28:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2569:486:20:-;2702:16;2757:3;:10;2738:8;:15;:29;2730:83;;;;-1:-1:-1;;;2730:83:20;;14678:2:33;2730:83:20;;;14660:21:33;14717:2;14697:18;;;14690:30;14756:34;14736:18;;;14729:62;-1:-1:-1;;;14807:18:33;;;14800:39;14856:19;;2730:83:20;14476:405:33;2730:83:20;2824:30;2871:8;:15;2857:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2857:30:20;;2824:63;;2903:9;2898:120;2922:8;:15;2918:1;:19;2898:120;;;2977:30;2987:8;2996:1;2987:11;;;;;;;;:::i;:::-;;;;;;;3000:3;3004:1;3000:6;;;;;;;;:::i;:::-;;;;;;;2977:9;:30::i;:::-;2958:13;2972:1;2958:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2939:3;;;:::i;:::-;;;2898:120;;;-1:-1:-1;3035:13:20;2569:486;-1:-1:-1;;;2569:486:20:o;1824:101:19:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;3123:153:20:-:0;3217:52;719:10:25;3250:8:20;3260;3217:18;:52::i;:::-;3123:153;;:::o;3576:394::-;-1:-1:-1;;;;;3776:20:20;;719:10:25;3776:20:20;;:60;;-1:-1:-1;3800:36:20;3817:4;719:10:25;3343:166:20;:::i;3800:36::-;3755:153;;;;-1:-1:-1;;;3755:153:20;;;;;;;:::i;:::-;3918:45;3936:4;3942:2;3946;3950:6;3958:4;3918:17;:45::i;2074:198:19:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:19;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:19;;15492:2:33;2154:73:19::1;::::0;::::1;15474:21:33::0;15531:2;15511:18;;;15504:30;15570:34;15550:18;;;15543:62;-1:-1:-1;;;15621:18:33;;;15614:36;15667:19;;2154:73:19::1;15290:402:33::0;2154:73:19::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;4245:153:28:-;4338:13;;;:31;;;-1:-1:-1;;;4338:31:28;;;;4301:3;;;;-1:-1:-1;;;;;4338:13:28;;:29;;:31;;;;;;;;;;;:13;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4316:53:28;;4245:153;-1:-1:-1;;;;;4245:153:28:o;4527:::-;4583:3;4601:9;4620:13;;;;;;;;;-1:-1:-1;;;;;4620:13:28;-1:-1:-1;;;;;4620:29:28;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4811:155;4868:3;4886:9;4905:14;;;;;;;;;-1:-1:-1;;;;;4905:14:28;-1:-1:-1;;;;;4905:30:28;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8608:671:20;-1:-1:-1;;;;;8717:16:20;;8709:62;;;;-1:-1:-1;;;8709:62:20;;16561:2:33;8709:62:20;;;16543:21:33;16600:2;16580:18;;;16573:30;16639:34;16619:18;;;16612:62;-1:-1:-1;;;16690:18:33;;;16683:31;16731:19;;8709:62:20;16359:397:33;8709:62:20;719:10:25;8782:16:20;8846:21;8864:2;8846:17;:21::i;:::-;8823:44;;8877:24;8904:25;8922:6;8904:17;:25::i;:::-;8877:52;;9017:9;:13;;;;;;;;;;;-1:-1:-1;;;;;9017:17:20;;;;;;;;;:27;;9038:6;;9017:9;:27;;9038:6;;9017:27;:::i;:::-;;;;-1:-1:-1;;9059:52:20;;;17065:25:33;;;17121:2;17106:18;;17099:34;;;-1:-1:-1;;;;;9059:52:20;;;;9092:1;;9059:52;;;;;;17038:18:33;9059:52:20;;;;;;;9198:74;9229:8;9247:1;9251:2;9255;9259:6;9267:4;9198:30;:74::i;:::-;8699:580;;;8608:671;;;;:::o;6211:1115::-;6431:7;:14;6417:3;:10;:28;6409:81;;;;-1:-1:-1;;;6409:81:20;;17346:2:33;6409:81:20;;;17328:21:33;17385:2;17365:18;;;17358:30;17424:34;17404:18;;;17397:62;-1:-1:-1;;;17475:18:33;;;17468:38;17523:19;;6409:81:20;17144:404:33;6409:81:20;-1:-1:-1;;;;;6508:16:20;;6500:66;;;;-1:-1:-1;;;6500:66:20;;;;;;;:::i;:::-;719:10:25;6577:16:20;6690:411;6714:3;:10;6710:1;:14;6690:411;;;6745:10;6758:3;6762:1;6758:6;;;;;;;;:::i;:::-;;;;;;;6745:19;;6778:14;6795:7;6803:1;6795:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6820:19;6842:13;;;;;;;;;;-1:-1:-1;;;;;6842:19:20;;;;;;;;;;;;6795:10;;-1:-1:-1;6883:21:20;;;;6875:76;;;;-1:-1:-1;;;6875:76:20;;;;;;;:::i;:::-;6993:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6993:19:20;;;;;;;;;;7015:20;;;6993:42;;7063:17;;;;;;;:27;;7015:20;;6993:9;7063:27;;7015:20;;7063:27;:::i;:::-;;;;;;;;6731:370;;;6726:3;;;;:::i;:::-;;;6690:411;;;;7146:2;-1:-1:-1;;;;;7116:47:20;7140:4;-1:-1:-1;;;;;7116:47:20;7130:8;-1:-1:-1;;;;;7116:47:20;;7150:3;7155:7;7116:47;;;;;;;:::i;:::-;;;;;;;;7244:75;7280:8;7290:4;7296:2;7300:3;7305:7;7314:4;7244:35;:75::i;:::-;6399:927;6211:1115;;;;;:::o;1359:130:19:-;1273:6;;-1:-1:-1;;;;;1273:6:19;719:10:25;1422:23:19;1414:68;;;;-1:-1:-1;;;1414:68:19;;19042:2:33;1414:68:19;;;19024:21:33;;;19061:18;;;19054:30;19120:34;19100:18;;;19093:62;19172:18;;1414:68:19;18840:356:33;2426:187:19;2518:6;;;-1:-1:-1;;;;;2534:17:19;;;-1:-1:-1;;;;;;2534:17:19;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;12790:293:20:-;12910:8;-1:-1:-1;;;;;12901:17:20;:5;-1:-1:-1;;;;;12901:17:20;;12893:71;;;;-1:-1:-1;;;12893:71:20;;19403:2:33;12893:71:20;;;19385:21:33;19442:2;19422:18;;;19415:30;19481:34;19461:18;;;19454:62;-1:-1:-1;;;19532:18:33;;;19525:39;19581:19;;12893:71:20;19201:405:33;12893:71:20;-1:-1:-1;;;;;12974:25:20;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12974:46:20;;;;;;;;;;13035:41;;1159::33;;;13035::20;;1132:18:33;13035:41:20;;;;;;;12790:293;;;:::o;4918:947::-;-1:-1:-1;;;;;5099:16:20;;5091:66;;;;-1:-1:-1;;;5091:66:20;;;;;;;:::i;:::-;719:10:25;5168:16:20;5232:21;5250:2;5232:17;:21::i;:::-;5209:44;;5263:24;5290:25;5308:6;5290:17;:25::i;:::-;5263:52;;5397:19;5419:13;;;;;;;;;;;-1:-1:-1;;;;;5419:19:20;;;;;;;;;;5456:21;;;;5448:76;;;;-1:-1:-1;;;5448:76:20;;;;;;;:::i;:::-;5558:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5558:19:20;;;;;;;;;;5580:20;;;5558:42;;5620:17;;;;;;;:27;;5580:20;;5558:9;5620:27;;5580:20;;5620:27;:::i;:::-;;;;-1:-1:-1;;5663:46:20;;;17065:25:33;;;17121:2;17106:18;;17099:34;;;-1:-1:-1;;;;;5663:46:20;;;;;;;;;;;;;;17038:18:33;5663:46:20;;;;;;;5790:68;5821:8;5831:4;5837:2;5841;5845:6;5853:4;5790:30;:68::i;:::-;5081:784;;;;4918:947;;;;;:::o;16914:193::-;17033:16;;;17047:1;17033:16;;;;;;;;;16980;;17008:22;;17033:16;;;;;;;;;;;;-1:-1:-1;17033:16:20;17008:41;;17070:7;17059:5;17065:1;17059:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17095:5;16914:193;-1:-1:-1;;16914:193:20:o;15385:725::-;-1:-1:-1;;;;;15592:13:20;;1702:19:24;:23;15588:516:20;;15627:72;;-1:-1:-1;;;15627:72:20;;-1:-1:-1;;;;;15627:38:20;;;;;:72;;15666:8;;15676:4;;15682:2;;15686:6;;15694:4;;15627:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15627:72:20;;;;;;;;-1:-1:-1;;15627:72:20;;;;;;;;;;;;:::i;:::-;;;15623:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;15970:6;15963:14;;-1:-1:-1;;;15963:14:20;;;;;;;;:::i;15623:471::-;;;16017:62;;-1:-1:-1;;;16017:62:20;;21493:2:33;16017:62:20;;;21475:21:33;21532:2;21512:18;;;21505:30;21571:34;21551:18;;;21544:62;-1:-1:-1;;;21622:18:33;;;21615:50;21682:19;;16017:62:20;21291:416:33;15623:471:20;-1:-1:-1;;;;;;15748:55:20;;-1:-1:-1;;;15748:55:20;15744:152;;15827:50;;-1:-1:-1;;;15827:50:20;;;;;;;:::i;16116:792::-;-1:-1:-1;;;;;16348:13:20;;1702:19:24;:23;16344:558:20;;16383:79;;-1:-1:-1;;;16383:79:20;;-1:-1:-1;;;;;16383:43:20;;;;;:79;;16427:8;;16437:4;;16443:3;;16448:7;;16457:4;;16383:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16383:79:20;;;;;;;;-1:-1:-1;;16383:79:20;;;;;;;;;;;;:::i;:::-;;;16379:513;;;;:::i;:::-;-1:-1:-1;;;;;;16541:60:20;;-1:-1:-1;;;16541:60:20;16537:157;;16625:50;;-1:-1:-1;;;16625:50:20;;;;;;;:::i;14:173:33:-;82:20;;-1:-1:-1;;;;;131:31:33;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:33:o;633:131::-;-1:-1:-1;;;;;;707:32:33;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:150::-;1286:20;;1335:1;1325:12;;1315:40;;1351:1;1348;1341:12;1366:208;1440:6;1493:2;1481:9;1472:7;1468:23;1464:32;1461:52;;;1509:1;1506;1499:12;1461:52;1532:36;1558:9;1532:36;:::i;1579:423::-;1621:3;1659:5;1653:12;1686:6;1681:3;1674:19;1711:1;1721:162;1735:6;1732:1;1729:13;1721:162;;;1797:4;1853:13;;;1849:22;;1843:29;1825:11;;;1821:20;;1814:59;1750:12;1721:162;;;1725:3;1928:1;1921:4;1912:6;1907:3;1903:16;1899:27;1892:38;1991:4;1984:2;1980:7;1975:2;1967:6;1963:15;1959:29;1954:3;1950:39;1946:50;1939:57;;;1579:423;;;;:::o;2007:830::-;2190:2;2179:9;2172:21;2153:4;2228:6;2222:13;2271:4;2266:2;2255:9;2251:18;2244:32;2299:52;2346:3;2335:9;2331:19;2317:12;2299:52;:::i;:::-;2285:66;;2400:2;2392:6;2388:15;2382:22;2427:2;2423:7;2494:2;2482:9;2474:6;2470:22;2466:31;2461:2;2450:9;2446:18;2439:59;2521:41;2555:6;2539:14;2521:41;:::i;:::-;2507:55;;2611:2;2603:6;2599:15;2593:22;2571:44;;2679:2;2667:9;2659:6;2655:22;2651:31;2646:2;2635:9;2631:18;2624:59;;2706:41;2740:6;2724:14;2706:41;:::i;:::-;2692:55;;;2803:2;2795:6;2791:15;2785:22;2778:4;2767:9;2763:20;2756:52;2825:6;2817:14;;;2007:830;;;;:::o;2842:180::-;2901:6;2954:2;2942:9;2933:7;2929:23;2925:32;2922:52;;;2970:1;2967;2960:12;2922:52;-1:-1:-1;2993:23:33;;2842:180;-1:-1:-1;2842:180:33:o;3027:220::-;3176:2;3165:9;3158:21;3139:4;3196:45;3237:2;3226:9;3222:18;3214:6;3196:45;:::i;3252:127::-;3313:10;3308:3;3304:20;3301:1;3294:31;3344:4;3341:1;3334:15;3368:4;3365:1;3358:15;3384:249;3494:2;3475:13;;-1:-1:-1;;3471:27:33;3459:40;;3529:18;3514:34;;3550:22;;;3511:62;3508:88;;;3576:18;;:::i;:::-;3612:2;3605:22;-1:-1:-1;;3384:249:33:o;3638:183::-;3698:4;3731:18;3723:6;3720:30;3717:56;;;3753:18;;:::i;:::-;-1:-1:-1;3798:1:33;3794:14;3810:4;3790:25;;3638:183::o;3826:724::-;3880:5;3933:3;3926:4;3918:6;3914:17;3910:27;3900:55;;3951:1;3948;3941:12;3900:55;3987:6;3974:20;4013:4;4036:43;4076:2;4036:43;:::i;:::-;4108:2;4102:9;4120:31;4148:2;4140:6;4120:31;:::i;:::-;4186:18;;;4278:1;4274:10;;;;4262:23;;4258:32;;;4220:15;;;;-1:-1:-1;4302:15:33;;;4299:35;;;4330:1;4327;4320:12;4299:35;4366:2;4358:6;4354:15;4378:142;4394:6;4389:3;4386:15;4378:142;;;4460:17;;4448:30;;4498:12;;;;4411;;4378:142;;;-1:-1:-1;4538:6:33;3826:724;-1:-1:-1;;;;;;3826:724:33:o;4555:555::-;4597:5;4650:3;4643:4;4635:6;4631:17;4627:27;4617:55;;4668:1;4665;4658:12;4617:55;4704:6;4691:20;4730:18;4726:2;4723:26;4720:52;;;4752:18;;:::i;:::-;4801:2;4795:9;4813:67;4868:2;4849:13;;-1:-1:-1;;4845:27:33;4874:4;4841:38;4795:9;4813:67;:::i;:::-;4904:2;4896:6;4889:18;4950:3;4943:4;4938:2;4930:6;4926:15;4922:26;4919:35;4916:55;;;4967:1;4964;4957:12;4916:55;5031:2;5024:4;5016:6;5012:17;5005:4;4997:6;4993:17;4980:54;5078:1;5054:15;;;5071:4;5050:26;5043:37;;;;5058:6;4555:555;-1:-1:-1;;;4555:555:33:o;5115:943::-;5269:6;5277;5285;5293;5301;5354:3;5342:9;5333:7;5329:23;5325:33;5322:53;;;5371:1;5368;5361:12;5322:53;5394:29;5413:9;5394:29;:::i;:::-;5384:39;;5442:38;5476:2;5465:9;5461:18;5442:38;:::i;:::-;5432:48;;5531:2;5520:9;5516:18;5503:32;5554:18;5595:2;5587:6;5584:14;5581:34;;;5611:1;5608;5601:12;5581:34;5634:61;5687:7;5678:6;5667:9;5663:22;5634:61;:::i;:::-;5624:71;;5748:2;5737:9;5733:18;5720:32;5704:48;;5777:2;5767:8;5764:16;5761:36;;;5793:1;5790;5783:12;5761:36;5816:63;5871:7;5860:8;5849:9;5845:24;5816:63;:::i;:::-;5806:73;;5932:3;5921:9;5917:19;5904:33;5888:49;;5962:2;5952:8;5949:16;5946:36;;;5978:1;5975;5968:12;5946:36;;6001:51;6044:7;6033:8;6022:9;6018:24;6001:51;:::i;:::-;5991:61;;;5115:943;;;;;;;;:::o;6063:619::-;6336:3;6325:9;6318:22;6299:4;6363:46;6404:3;6393:9;6389:19;6381:6;6363:46;:::i;:::-;6457:9;6449:6;6445:22;6440:2;6429:9;6425:18;6418:50;6491:33;6517:6;6509;6491:33;:::i;:::-;6477:47;;6572:9;6564:6;6560:22;6555:2;6544:9;6540:18;6533:50;6600:33;6626:6;6618;6600:33;:::i;:::-;6592:41;;;6669:6;6664:2;6653:9;6649:18;6642:34;6063:619;;;;;;;:::o;6687:1208::-;6805:6;6813;6866:2;6854:9;6845:7;6841:23;6837:32;6834:52;;;6882:1;6879;6872:12;6834:52;6922:9;6909:23;6951:18;6992:2;6984:6;6981:14;6978:34;;;7008:1;7005;6998:12;6978:34;7046:6;7035:9;7031:22;7021:32;;7091:7;7084:4;7080:2;7076:13;7072:27;7062:55;;7113:1;7110;7103:12;7062:55;7149:2;7136:16;7171:4;7194:43;7234:2;7194:43;:::i;:::-;7266:2;7260:9;7278:31;7306:2;7298:6;7278:31;:::i;:::-;7344:18;;;7432:1;7428:10;;;;7420:19;;7416:28;;;7378:15;;;;-1:-1:-1;7456:19:33;;;7453:39;;;7488:1;7485;7478:12;7453:39;7512:11;;;;7532:148;7548:6;7543:3;7540:15;7532:148;;;7614:23;7633:3;7614:23;:::i;:::-;7602:36;;7565:12;;;;7658;;;;7532:148;;;7699:6;-1:-1:-1;;7743:18:33;;7730:32;;-1:-1:-1;;7774:16:33;;;7771:36;;;7803:1;7800;7793:12;7771:36;;7826:63;7881:7;7870:8;7859:9;7855:24;7826:63;:::i;:::-;7816:73;;;6687:1208;;;;;:::o;7900:435::-;7953:3;7991:5;7985:12;8018:6;8013:3;8006:19;8044:4;8073:2;8068:3;8064:12;8057:19;;8110:2;8103:5;8099:14;8131:1;8141:169;8155:6;8152:1;8149:13;8141:169;;;8216:13;;8204:26;;8250:12;;;;8285:15;;;;8177:1;8170:9;8141:169;;;-1:-1:-1;8326:3:33;;7900:435;-1:-1:-1;;;;;7900:435:33:o;8340:261::-;8519:2;8508:9;8501:21;8482:4;8539:56;8591:2;8580:9;8576:18;8568:6;8539:56;:::i;8814:347::-;8879:6;8887;8940:2;8928:9;8919:7;8915:23;8911:32;8908:52;;;8956:1;8953;8946:12;8908:52;8979:29;8998:9;8979:29;:::i;:::-;8969:39;;9058:2;9047:9;9043:18;9030:32;9105:5;9098:13;9091:21;9084:5;9081:32;9071:60;;9127:1;9124;9117:12;9071:60;9150:5;9140:15;;;8814:347;;;;;:::o;9166:260::-;9234:6;9242;9295:2;9283:9;9274:7;9270:23;9266:32;9263:52;;;9311:1;9308;9301:12;9263:52;9334:29;9353:9;9334:29;:::i;:::-;9324:39;;9382:38;9416:2;9405:9;9401:18;9382:38;:::i;:::-;9372:48;;9166:260;;;;;:::o;9431:606::-;9535:6;9543;9551;9559;9567;9620:3;9608:9;9599:7;9595:23;9591:33;9588:53;;;9637:1;9634;9627:12;9588:53;9660:29;9679:9;9660:29;:::i;:::-;9650:39;;9708:38;9742:2;9731:9;9727:18;9708:38;:::i;:::-;9698:48;;9793:2;9782:9;9778:18;9765:32;9755:42;;9844:2;9833:9;9829:18;9816:32;9806:42;;9899:3;9888:9;9884:19;9871:33;9927:18;9919:6;9916:30;9913:50;;;9959:1;9956;9949:12;9913:50;9982:49;10023:7;10014:6;10003:9;9999:22;9982:49;:::i;10042:186::-;10101:6;10154:2;10142:9;10133:7;10129:23;10125:32;10122:52;;;10170:1;10167;10160:12;10122:52;10193:29;10212:9;10193:29;:::i;10233:282::-;10316:6;10324;10377:2;10365:9;10356:7;10352:23;10348:32;10345:52;;;10393:1;10390;10383:12;10345:52;10416:29;10435:9;10416:29;:::i;:::-;10406:39;;10464:45;10505:2;10494:9;10490:18;10464:45;:::i;10931:127::-;10992:10;10987:3;10983:20;10980:1;10973:31;11023:4;11020:1;11013:15;11047:4;11044:1;11037:15;11472:380;11551:1;11547:12;;;;11594;;;11615:61;;11669:4;11661:6;11657:17;11647:27;;11615:61;11722:2;11714:6;11711:14;11691:18;11688:38;11685:161;;11768:10;11763:3;11759:20;11756:1;11749:31;11803:4;11800:1;11793:15;11831:4;11828:1;11821:15;11685:161;;11472:380;;;:::o;11983:545::-;12085:2;12080:3;12077:11;12074:448;;;12121:1;12146:5;12142:2;12135:17;12191:4;12187:2;12177:19;12261:2;12249:10;12245:19;12242:1;12238:27;12232:4;12228:38;12297:4;12285:10;12282:20;12279:47;;;-1:-1:-1;12320:4:33;12279:47;12375:2;12370:3;12366:12;12363:1;12359:20;12353:4;12349:31;12339:41;;12430:82;12448:2;12441:5;12438:13;12430:82;;;12493:17;;;12474:1;12463:13;12430:82;;12074:448;11983:545;;;:::o;12704:1352::-;12830:3;12824:10;12857:18;12849:6;12846:30;12843:56;;;12879:18;;:::i;:::-;12908:97;12998:6;12958:38;12990:4;12984:11;12958:38;:::i;:::-;12952:4;12908:97;:::i;:::-;13060:4;;13124:2;13113:14;;13141:1;13136:663;;;;13843:1;13860:6;13857:89;;;-1:-1:-1;13912:19:33;;;13906:26;13857:89;-1:-1:-1;;12661:1:33;12657:11;;;12653:24;12649:29;12639:40;12685:1;12681:11;;;12636:57;13959:81;;13106:944;;13136:663;11930:1;11923:14;;;11967:4;11954:18;;-1:-1:-1;;13172:20:33;;;13290:236;13304:7;13301:1;13298:14;13290:236;;;13393:19;;;13387:26;13372:42;;13485:27;;;;13453:1;13441:14;;;;13320:19;;13290:236;;;13294:3;13554:6;13545:7;13542:19;13539:201;;;13615:19;;;13609:26;-1:-1:-1;;13698:1:33;13694:14;;;13710:3;13690:24;13686:37;13682:42;13667:58;13652:74;;13539:201;-1:-1:-1;;;;;13786:1:33;13770:14;;;13766:22;13753:36;;-1:-1:-1;12704:1352:33:o;14061:410::-;14263:2;14245:21;;;14302:2;14282:18;;;14275:30;14341:34;14336:2;14321:18;;14314:62;-1:-1:-1;;;14407:2:33;14392:18;;14385:44;14461:3;14446:19;;14061:410::o;14886:127::-;14947:10;14942:3;14938:20;14935:1;14928:31;14978:4;14975:1;14968:15;15002:4;14999:1;14992:15;15018:127;15079:10;15074:3;15070:20;15067:1;15060:31;15110:4;15107:1;15100:15;15134:4;15131:1;15124:15;15150:135;15189:3;15210:17;;;15207:43;;15230:18;;:::i;:::-;-1:-1:-1;15277:1:33;15266:13;;15150:135::o;15697:179::-;15775:13;;15828:22;15817:34;;15807:45;;15797:73;;15866:1;15863;15856:12;15881:473;15984:6;15992;16000;16008;16016;16069:3;16057:9;16048:7;16044:23;16040:33;16037:53;;;16086:1;16083;16076:12;16037:53;16109:39;16138:9;16109:39;:::i;:::-;16099:49;;16188:2;16177:9;16173:18;16167:25;16157:35;;16232:2;16221:9;16217:18;16211:25;16201:35;;16276:2;16265:9;16261:18;16255:25;16245:35;;16299:49;16343:3;16332:9;16328:19;16299:49;:::i;:::-;16289:59;;15881:473;;;;;;;;:::o;16761:125::-;16826:9;;;16847:10;;;16844:36;;;16860:18;;:::i;17553:401::-;17755:2;17737:21;;;17794:2;17774:18;;;17767:30;17833:34;17828:2;17813:18;;17806:62;-1:-1:-1;;;17899:2:33;17884:18;;17877:35;17944:3;17929:19;;17553:401::o;17959:406::-;18161:2;18143:21;;;18200:2;18180:18;;;18173:30;18239:34;18234:2;18219:18;;18212:62;-1:-1:-1;;;18305:2:33;18290:18;;18283:40;18355:3;18340:19;;17959:406::o;18370:465::-;18627:2;18616:9;18609:21;18590:4;18653:56;18705:2;18694:9;18690:18;18682:6;18653:56;:::i;:::-;18757:9;18749:6;18745:22;18740:2;18729:9;18725:18;18718:50;18785:44;18822:6;18814;18785:44;:::i;:::-;18777:52;18370:465;-1:-1:-1;;;;;18370:465:33:o;19611:561::-;-1:-1:-1;;;;;19908:15:33;;;19890:34;;19960:15;;19955:2;19940:18;;19933:43;20007:2;19992:18;;19985:34;;;20050:2;20035:18;;20028:34;;;19870:3;20093;20078:19;;20071:32;;;19833:4;;20120:46;;20146:19;;20138:6;20120:46;:::i;:::-;20112:54;19611:561;-1:-1:-1;;;;;;;19611:561:33:o;20177:249::-;20246:6;20299:2;20287:9;20278:7;20274:23;20270:32;20267:52;;;20315:1;20312;20305:12;20267:52;20347:9;20341:16;20366:30;20390:5;20366:30;:::i;20431:179::-;20466:3;20508:1;20490:16;20487:23;20484:120;;;20554:1;20551;20548;20533:23;-1:-1:-1;20591:1:33;20585:8;20580:3;20576:18;20484:120;20431:179;:::o;20615:671::-;20654:3;20696:4;20678:16;20675:26;20672:39;;;20615:671;:::o;20672:39::-;20738:2;20732:9;-1:-1:-1;;20803:16:33;20799:25;;20796:1;20732:9;20775:50;20854:4;20848:11;20878:16;20913:18;20984:2;20977:4;20969:6;20965:17;20962:25;20957:2;20949:6;20946:14;20943:45;20940:58;;;20991:5;;;;;20615:671;:::o;20940:58::-;21028:6;21022:4;21018:17;21007:28;;21064:3;21058:10;21091:2;21083:6;21080:14;21077:27;;;21097:5;;;;;;20615:671;:::o;21077:27::-;21181:2;21162:16;21156:4;21152:27;21148:36;21141:4;21132:6;21127:3;21123:16;21119:27;21116:69;21113:82;;;21188:5;;;;;;20615:671;:::o;21113:82::-;21204:57;21255:4;21246:6;21238;21234:19;21230:30;21224:4;21204:57;:::i;:::-;-1:-1:-1;21277:3:33;;20615:671;-1:-1:-1;;;;;20615:671:33:o;21712:404::-;21914:2;21896:21;;;21953:2;21933:18;;;21926:30;21992:34;21987:2;21972:18;;21965:62;-1:-1:-1;;;22058:2:33;22043:18;;22036:38;22106:3;22091:19;;21712:404::o;22121:827::-;-1:-1:-1;;;;;22518:15:33;;;22500:34;;22570:15;;22565:2;22550:18;;22543:43;22480:3;22617:2;22602:18;;22595:31;;;22443:4;;22649:57;;22686:19;;22678:6;22649:57;:::i;:::-;22754:9;22746:6;22742:22;22737:2;22726:9;22722:18;22715:50;22788:44;22825:6;22817;22788:44;:::i;:::-;22774:58;;22881:9;22873:6;22869:22;22863:3;22852:9;22848:19;22841:51;22909:33;22935:6;22927;22909:33;:::i;:::-;22901:41;22121:827;-1:-1:-1;;;;;;;;22121:827:33:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "getLatestPrice(uint8)": "0c20a01f",
    "hasMinted(address,uint8)": "ff97f660",
    "isApprovedForAll(address,address)": "e985e9c5",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenMetadata(uint8)": "300ffc73",
    "transferOwnership(address)": "f2fde38b",
    "updateMetadataHourly()": "0c35a900",
    "uri(uint256)": "0e89341c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"BTCPricefeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ETHPricefeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"LINKPricefeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DynamicAssetPricedNFT.TokenType\",\"name\":\"_tkr\",\"type\":\"uint8\"}],\"name\":\"getLatestPrice\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DynamicAssetPricedNFT.Metadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum DynamicAssetPricedNFT.TokenType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"hasMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DynamicAssetPricedNFT.TokenType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateMetadataHourly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Christian Reyes\",\"details\":\"This contract mints NFTs based on Chainlink price feeds for BTC, ETH, and LINK. Each token type (BTC, ETH, LINK) can only be minted once per address. The metadata for each token type changes based on the latest price feed.\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"Constructor to initialize Chainlink price feed addresses.  _BTCPricefeed = AggregatorV3Interface(0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c);  _ETHPricefeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);  _LINKPricefeed = AggregatorV3Interface(0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c);The constructor initializes the Chainlink price feed addresses // working on this.\",\"params\":{\"BTCPricefeed\":\"Chainlink price feed address for BTC/USD.\",\"ETHPricefeed\":\"Chainlink price feed address for ETH/USD.\",\"LINKPricefeed\":\"Chainlink price feed address for LINK/USD.\"}},\"getLatestPrice(uint8)\":{\"params\":{\"_tkr\":\"The type of token to check the price for (BTC, ETH, LINK).\"},\"returns\":{\"_0\":\"Metadata for the minted token.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"title\":\"Dynamic Asset Priced NFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getLatestPrice(uint8)\":{\"notice\":\"Get the latest price and mint a new token based on the price feed.\"},\"updateMetadataHourly()\":{\"notice\":\"Placeholder for a function that could be called every hour to update metadata.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DynamicAssetPricedNFT.sol\":\"DynamicAssetPricedNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/DynamicAssetPricedNFT.sol\":{\"keccak256\":\"0xe3d75e32749ab8cdd63af4d101ed1573797402fc9f1c230baa1a243df3f9f9a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86d974f5758b632853f1e4035471d4731bf04123d3dd54d677d31f4cdc3d828a\",\"dweb:/ipfs/QmUcedm8GynXygMY9ptaiRKZtASSxX2xUXZAU5FRoWTQKT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "BTCPricefeed",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "ETHPricefeed",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "LINKPricefeed",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum DynamicAssetPricedNFT.TokenType",
              "name": "_tkr",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getLatestPrice",
          "outputs": [
            {
              "internalType": "struct DynamicAssetPricedNFT.Metadata",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "image",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "enum DynamicAssetPricedNFT.TokenType",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasMinted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum DynamicAssetPricedNFT.TokenType",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenMetadata",
          "outputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "image",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMetadataHourly"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(address,uint256)": {
            "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
          },
          "balanceOfBatch(address[],uint256[])": {
            "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
          },
          "constructor": {
            "details": "Constructor to initialize Chainlink price feed addresses.  _BTCPricefeed = AggregatorV3Interface(0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c);  _ETHPricefeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);  _LINKPricefeed = AggregatorV3Interface(0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c);The constructor initializes the Chainlink price feed addresses // working on this.",
            "params": {
              "BTCPricefeed": "Chainlink price feed address for BTC/USD.",
              "ETHPricefeed": "Chainlink price feed address for ETH/USD.",
              "LINKPricefeed": "Chainlink price feed address for LINK/USD."
            }
          },
          "getLatestPrice(uint8)": {
            "params": {
              "_tkr": "The type of token to check the price for (BTC, ETH, LINK)."
            },
            "returns": {
              "_0": "Metadata for the minted token."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC1155-isApprovedForAll}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC1155-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "uri(uint256)": {
            "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getLatestPrice(uint8)": {
            "notice": "Get the latest price and mint a new token based on the price feed."
          },
          "updateMetadataHourly()": {
            "notice": "Placeholder for a function that could be called every hour to update metadata."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/DynamicAssetPricedNFT.sol": "DynamicAssetPricedNFT"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e",
        "urls": [
          "bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601",
          "dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582",
        "urls": [
          "bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf",
          "dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/DynamicAssetPricedNFT.sol": {
        "keccak256": "0xe3d75e32749ab8cdd63af4d101ed1573797402fc9f1c230baa1a243df3f9f9a7",
        "urls": [
          "bzz-raw://86d974f5758b632853f1e4035471d4731bf04123d3dd54d677d31f4cdc3d828a",
          "dweb:/ipfs/QmUcedm8GynXygMY9ptaiRKZtASSxX2xUXZAU5FRoWTQKT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/DynamicAssetPricedNFT.sol",
    "id": 45055,
    "exportedSymbols": {
      "Address": [
        44742
      ],
      "AggregatorV3Interface": [
        42898
      ],
      "Context": [
        44764
      ],
      "DynamicAssetPricedNFT": [
        45054
      ],
      "ERC1155": [
        44234
      ],
      "ERC165": [
        44788
      ],
      "IERC1155": [
        44356
      ],
      "IERC1155MetadataURI": [
        44412
      ],
      "IERC1155Receiver": [
        44397
      ],
      "IERC165": [
        44800
      ],
      "Ownable": [
        43011
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5371:28",
    "nodes": [
      {
        "id": 44802,
        "nodeType": "PragmaDirective",
        "src": "32:24:28",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 44803,
        "nodeType": "ImportDirective",
        "src": "123:76:28",
        "nodes": [],
        "absolutePath": "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45055,
        "sourceUnit": 42899,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44804,
        "nodeType": "ImportDirective",
        "src": "200:59:28",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45055,
        "sourceUnit": 44235,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44805,
        "nodeType": "ImportDirective",
        "src": "260:52:28",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45055,
        "sourceUnit": 43012,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45054,
        "nodeType": "ContractDefinition",
        "src": "621:4347:28",
        "nodes": [
          {
            "id": 44813,
            "nodeType": "VariableDeclaration",
            "src": "717:44:28",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_BTCPricefeed",
            "nameLocation": "748:13:28",
            "scope": 45054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 44812,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44811,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "717:21:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42898,
                "src": "717:21:28"
              },
              "referencedDeclaration": 42898,
              "src": "717:21:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44816,
            "nodeType": "VariableDeclaration",
            "src": "767:44:28",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_ETHPricefeed",
            "nameLocation": "798:13:28",
            "scope": 45054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 44815,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44814,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "767:21:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42898,
                "src": "767:21:28"
              },
              "referencedDeclaration": 42898,
              "src": "767:21:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44819,
            "nodeType": "VariableDeclaration",
            "src": "817:45:28",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_LINKPricefeed",
            "nameLocation": "848:14:28",
            "scope": 45054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 44818,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44817,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "817:21:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42898,
                "src": "817:21:28"
              },
              "referencedDeclaration": 42898,
              "src": "817:21:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44823,
            "nodeType": "EnumDefinition",
            "src": "920:33:28",
            "nodes": [],
            "canonicalName": "DynamicAssetPricedNFT.TokenType",
            "members": [
              {
                "id": 44820,
                "name": "BTC",
                "nameLocation": "937:3:28",
                "nodeType": "EnumValue",
                "src": "937:3:28"
              },
              {
                "id": 44821,
                "name": "ETH",
                "nameLocation": "942:3:28",
                "nodeType": "EnumValue",
                "src": "942:3:28"
              },
              {
                "id": 44822,
                "name": "LINK",
                "nameLocation": "947:4:28",
                "nodeType": "EnumValue",
                "src": "947:4:28"
              }
            ],
            "name": "TokenType",
            "nameLocation": "925:9:28"
          },
          {
            "id": 44832,
            "nodeType": "StructDefinition",
            "src": "1005:117:28",
            "nodes": [],
            "canonicalName": "DynamicAssetPricedNFT.Metadata",
            "members": [
              {
                "constant": false,
                "id": 44825,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "1038:4:28",
                "nodeType": "VariableDeclaration",
                "scope": 44832,
                "src": "1031:11:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 44824,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1031:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44827,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "1059:11:28",
                "nodeType": "VariableDeclaration",
                "scope": 44832,
                "src": "1052:18:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 44826,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1052:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44829,
                "mutability": "mutable",
                "name": "image",
                "nameLocation": "1087:5:28",
                "nodeType": "VariableDeclaration",
                "scope": 44832,
                "src": "1080:12:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 44828,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1080:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44831,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1110:5:28",
                "nodeType": "VariableDeclaration",
                "scope": 44832,
                "src": "1102:13:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 44830,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1102:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Metadata",
            "nameLocation": "1012:8:28",
            "scope": 45054,
            "visibility": "public"
          },
          {
            "id": 44838,
            "nodeType": "VariableDeclaration",
            "src": "1181:51:28",
            "nodes": [],
            "constant": false,
            "functionSelector": "300ffc73",
            "mutability": "mutable",
            "name": "tokenMetadata",
            "nameLocation": "1219:13:28",
            "scope": 45054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_TokenType_$44823_$_t_struct$_Metadata_$44832_storage_$",
              "typeString": "mapping(enum DynamicAssetPricedNFT.TokenType => struct DynamicAssetPricedNFT.Metadata)"
            },
            "typeName": {
              "id": 44837,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44834,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 44833,
                  "name": "TokenType",
                  "nameLocations": [
                    "1189:9:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44823,
                  "src": "1189:9:28"
                },
                "referencedDeclaration": 44823,
                "src": "1189:9:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_TokenType_$44823",
                  "typeString": "enum DynamicAssetPricedNFT.TokenType"
                }
              },
              "nodeType": "Mapping",
              "src": "1181:30:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_TokenType_$44823_$_t_struct$_Metadata_$44832_storage_$",
                "typeString": "mapping(enum DynamicAssetPricedNFT.TokenType => struct DynamicAssetPricedNFT.Metadata)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44836,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 44835,
                  "name": "Metadata",
                  "nameLocations": [
                    "1202:8:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44832,
                  "src": "1202:8:28"
                },
                "referencedDeclaration": 44832,
                "src": "1202:8:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Metadata_$44832_storage_ptr",
                  "typeString": "struct DynamicAssetPricedNFT.Metadata"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44845,
            "nodeType": "VariableDeclaration",
            "src": "1307:63:28",
            "nodes": [],
            "constant": false,
            "functionSelector": "ff97f660",
            "mutability": "mutable",
            "name": "hasMinted",
            "nameLocation": "1361:9:28",
            "scope": 45054,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_TokenType_$44823_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(enum DynamicAssetPricedNFT.TokenType => bool))"
            },
            "typeName": {
              "id": 44844,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44839,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1315:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1307:46:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_TokenType_$44823_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(enum DynamicAssetPricedNFT.TokenType => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44843,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 44841,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 44840,
                    "name": "TokenType",
                    "nameLocations": [
                      "1334:9:28"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 44823,
                    "src": "1334:9:28"
                  },
                  "referencedDeclaration": 44823,
                  "src": "1334:9:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_TokenType_$44823",
                    "typeString": "enum DynamicAssetPricedNFT.TokenType"
                  }
                },
                "nodeType": "Mapping",
                "src": "1326:26:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_TokenType_$44823_$_t_bool_$",
                  "typeString": "mapping(enum DynamicAssetPricedNFT.TokenType => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 44842,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1347:4:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44877,
            "nodeType": "FunctionDefinition",
            "src": "2041:283:28",
            "nodes": [],
            "body": {
              "id": 44876,
              "nodeType": "Block",
              "src": "2132:192:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44858,
                      "name": "_BTCPricefeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44813,
                      "src": "2142:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44860,
                          "name": "BTCPricefeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44848,
                          "src": "2180:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44859,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42898,
                        "src": "2158:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$42898_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 44861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2158:35:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "2142:51:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 44863,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:51:28"
                },
                {
                  "expression": {
                    "id": 44868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44864,
                      "name": "_ETHPricefeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44816,
                      "src": "2203:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44866,
                          "name": "ETHPricefeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44850,
                          "src": "2241:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44865,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42898,
                        "src": "2219:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$42898_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 44867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2219:35:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "2203:51:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 44869,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:51:28"
                },
                {
                  "expression": {
                    "id": 44874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44870,
                      "name": "_LINKPricefeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44819,
                      "src": "2264:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44872,
                          "name": "LINKPricefeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44852,
                          "src": "2303:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44871,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42898,
                        "src": "2281:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$42898_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 44873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2281:36:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "2264:53:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 44875,
                  "nodeType": "ExpressionStatement",
                  "src": "2264:53:28"
                }
              ]
            },
            "documentation": {
              "id": 44846,
              "nodeType": "StructuredDocumentation",
              "src": "1377:659:28",
              "text": " @dev Constructor to initialize Chainlink price feed addresses.\n  _BTCPricefeed = AggregatorV3Interface(0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c);\n  _ETHPricefeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);\n  _LINKPricefeed = AggregatorV3Interface(0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c);\n @param BTCPricefeed Chainlink price feed address for BTC/USD.\n @param ETHPricefeed Chainlink price feed address for ETH/USD.\n @param LINKPricefeed Chainlink price feed address for LINK/USD.\n @dev The constructor initializes the Chainlink price feed addresses // working on this."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "",
                    "id": 44855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2128:2:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 44856,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 44854,
                  "name": "ERC1155",
                  "nameLocations": [
                    "2120:7:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44234,
                  "src": "2120:7:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "2120:11:28"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44848,
                  "mutability": "mutable",
                  "name": "BTCPricefeed",
                  "nameLocation": "2061:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 44877,
                  "src": "2053:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44850,
                  "mutability": "mutable",
                  "name": "ETHPricefeed",
                  "nameLocation": "2083:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 44877,
                  "src": "2075:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2075:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44852,
                  "mutability": "mutable",
                  "name": "LINKPricefeed",
                  "nameLocation": "2105:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 44877,
                  "src": "2097:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2052:67:28"
            },
            "returnParameters": {
              "id": 44857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2132:0:28"
            },
            "scope": 45054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45003,
            "nodeType": "FunctionDefinition",
            "src": "2552:1311:28",
            "nodes": [],
            "body": {
              "id": 45002,
              "nodeType": "Block",
              "src": "2625:1238:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2643:28:28",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 44888,
                              "name": "hasMinted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44845,
                              "src": "2644:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_TokenType_$44823_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(enum DynamicAssetPricedNFT.TokenType => bool))"
                              }
                            },
                            "id": 44891,
                            "indexExpression": {
                              "expression": {
                                "id": 44889,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2654:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 44890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2658:6:28",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2654:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2644:21:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_TokenType_$44823_$_t_bool_$",
                              "typeString": "mapping(enum DynamicAssetPricedNFT.TokenType => bool)"
                            }
                          },
                          "id": 44893,
                          "indexExpression": {
                            "id": 44892,
                            "name": "_tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44881,
                            "src": "2666:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$44823",
                              "typeString": "enum DynamicAssetPricedNFT.TokenType"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2644:27:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206861766520616c7265616479206d696e746564207468697320746f6b656e20747970652e",
                        "id": 44895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2673:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_078def9f472f0a2e0ff92d7397f74676dd886ddbe2ae8042fc390bace38001b6",
                          "typeString": "literal_string \"You have already minted this token type.\""
                        },
                        "value": "You have already minted this token type."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_078def9f472f0a2e0ff92d7397f74676dd886ddbe2ae8042fc390bace38001b6",
                          "typeString": "literal_string \"You have already minted this token type.\""
                        }
                      ],
                      "id": 44887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2635:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2635:81:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44897,
                  "nodeType": "ExpressionStatement",
                  "src": "2635:81:28"
                },
                {
                  "assignments": [
                    44899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44899,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2735:5:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 45002,
                      "src": "2727:13:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44898,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2727:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44900,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2727:13:28"
                },
                {
                  "assignments": [
                    44903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44903,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "2766:8:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 45002,
                      "src": "2750:24:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$44832_memory_ptr",
                        "typeString": "struct DynamicAssetPricedNFT.Metadata"
                      },
                      "typeName": {
                        "id": 44902,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44901,
                          "name": "Metadata",
                          "nameLocations": [
                            "2750:8:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44832,
                          "src": "2750:8:28"
                        },
                        "referencedDeclaration": 44832,
                        "src": "2750:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$44832_storage_ptr",
                          "typeString": "struct DynamicAssetPricedNFT.Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44904,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2750:24:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_TokenType_$44823",
                      "typeString": "enum DynamicAssetPricedNFT.TokenType"
                    },
                    "id": 44908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44905,
                      "name": "_tkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44881,
                      "src": "2856:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TokenType_$44823",
                        "typeString": "enum DynamicAssetPricedNFT.TokenType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 44906,
                        "name": "TokenType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44823,
                        "src": "2864:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_TokenType_$44823_$",
                          "typeString": "type(enum DynamicAssetPricedNFT.TokenType)"
                        }
                      },
                      "id": 44907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2874:3:28",
                      "memberName": "BTC",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44820,
                      "src": "2864:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TokenType_$44823",
                        "typeString": "enum DynamicAssetPricedNFT.TokenType"
                      }
                    },
                    "src": "2856:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_TokenType_$44823",
                        "typeString": "enum DynamicAssetPricedNFT.TokenType"
                      },
                      "id": 44921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 44918,
                        "name": "_tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44881,
                        "src": "2954:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TokenType_$44823",
                          "typeString": "enum DynamicAssetPricedNFT.TokenType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 44919,
                          "name": "TokenType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44823,
                          "src": "2962:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_TokenType_$44823_$",
                            "typeString": "type(enum DynamicAssetPricedNFT.TokenType)"
                          }
                        },
                        "id": 44920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2972:3:28",
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44821,
                        "src": "2962:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TokenType_$44823",
                          "typeString": "enum DynamicAssetPricedNFT.TokenType"
                        }
                      },
                      "src": "2954:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_TokenType_$44823",
                          "typeString": "enum DynamicAssetPricedNFT.TokenType"
                        },
                        "id": 44934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44931,
                          "name": "_tkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44881,
                          "src": "3052:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TokenType_$44823",
                            "typeString": "enum DynamicAssetPricedNFT.TokenType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 44932,
                            "name": "TokenType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44823,
                            "src": "3060:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_TokenType_$44823_$",
                              "typeString": "type(enum DynamicAssetPricedNFT.TokenType)"
                            }
                          },
                          "id": 44933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3070:4:28",
                          "memberName": "LINK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44822,
                          "src": "3060:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TokenType_$44823",
                            "typeString": "enum DynamicAssetPricedNFT.TokenType"
                          }
                        },
                        "src": "3052:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 44944,
                      "nodeType": "IfStatement",
                      "src": "3048:94:28",
                      "trueBody": {
                        "id": 44943,
                        "nodeType": "Block",
                        "src": "3076:66:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 44941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 44935,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44899,
                                "src": "3090:5:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 44938,
                                      "name": "getLINKLatestPriceFeed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45053,
                                      "src": "3106:22:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                                        "typeString": "function () view returns (int256)"
                                      }
                                    },
                                    "id": 44939,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3106:24:28",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 44937,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3098:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 44936,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3098:7:28",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 44940,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3098:33:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3090:41:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 44942,
                            "nodeType": "ExpressionStatement",
                            "src": "3090:41:28"
                          }
                        ]
                      }
                    },
                    "id": 44945,
                    "nodeType": "IfStatement",
                    "src": "2950:192:28",
                    "trueBody": {
                      "id": 44930,
                      "nodeType": "Block",
                      "src": "2977:65:28",
                      "statements": [
                        {
                          "expression": {
                            "id": 44928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 44922,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44899,
                              "src": "2991:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 44925,
                                    "name": "getETHLatestPriceFeed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45038,
                                    "src": "3007:21:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                                      "typeString": "function () view returns (int256)"
                                    }
                                  },
                                  "id": 44926,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3007:23:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 44924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2999:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 44923,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2999:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 44927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2999:32:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2991:40:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 44929,
                          "nodeType": "ExpressionStatement",
                          "src": "2991:40:28"
                        }
                      ]
                    }
                  },
                  "id": 44946,
                  "nodeType": "IfStatement",
                  "src": "2852:290:28",
                  "trueBody": {
                    "id": 44917,
                    "nodeType": "Block",
                    "src": "2879:65:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 44915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 44909,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44899,
                            "src": "2893:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 44912,
                                  "name": "getBTCLatestPriceFeed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45023,
                                  "src": "2909:21:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                                    "typeString": "function () view returns (int256)"
                                  }
                                },
                                "id": 44913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2909:23:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 44911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2901:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 44910,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2901:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2901:32:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2893:40:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 44916,
                        "nodeType": "ExpressionStatement",
                        "src": "2893:40:28"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 44947,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44838,
                          "src": "3156:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_TokenType_$44823_$_t_struct$_Metadata_$44832_storage_$",
                            "typeString": "mapping(enum DynamicAssetPricedNFT.TokenType => struct DynamicAssetPricedNFT.Metadata storage ref)"
                          }
                        },
                        "id": 44949,
                        "indexExpression": {
                          "id": 44948,
                          "name": "_tkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44881,
                          "src": "3170:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TokenType_$44823",
                            "typeString": "enum DynamicAssetPricedNFT.TokenType"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3156:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$44832_storage",
                          "typeString": "struct DynamicAssetPricedNFT.Metadata storage ref"
                        }
                      },
                      "id": 44950,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3176:5:28",
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44831,
                      "src": "3156:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 44951,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44899,
                      "src": "3184:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3156:33:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 44972,
                    "nodeType": "Block",
                    "src": "3446:250:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 44970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 44963,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44903,
                            "src": "3460:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$44832_memory_ptr",
                              "typeString": "struct DynamicAssetPricedNFT.Metadata memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "42756c6c20546f6b656e",
                                "id": 44965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3504:12:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f69645f8077153da160b9551838d6529f26e5ddc35ac3368d90c5c10fdbbc21d",
                                  "typeString": "literal_string \"Bull Token\""
                                },
                                "value": "Bull Token"
                              },
                              {
                                "hexValue": "507269636520697320686967686572207468616e206c61737420636865636b65642e",
                                "id": 44966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3547:36:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ab86499293a1bf488e31a291272b4365fd0d4b32f8ba2f9740dfbf5fea176cb2",
                                  "typeString": "literal_string \"Price is higher than last checked.\""
                                },
                                "value": "Price is higher than last checked."
                              },
                              {
                                "hexValue": "68747470733a2f2f6578616d706c652e636f6d2f62756c6c5f696d616765",
                                "id": 44967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3608:32:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_fc1ee1e80daabb3e2a4bdab5b66e0353e0831fe6336b99fe5fb04bd64493cbdf",
                                  "typeString": "literal_string \"https://example.com/bull_image\""
                                },
                                "value": "https://example.com/bull_image"
                              },
                              {
                                "id": 44968,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44899,
                                "src": "3665:5:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f69645f8077153da160b9551838d6529f26e5ddc35ac3368d90c5c10fdbbc21d",
                                  "typeString": "literal_string \"Bull Token\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ab86499293a1bf488e31a291272b4365fd0d4b32f8ba2f9740dfbf5fea176cb2",
                                  "typeString": "literal_string \"Price is higher than last checked.\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fc1ee1e80daabb3e2a4bdab5b66e0353e0831fe6336b99fe5fb04bd64493cbdf",
                                  "typeString": "literal_string \"https://example.com/bull_image\""
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 44964,
                              "name": "Metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44832,
                              "src": "3471:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Metadata_$44832_storage_ptr_$",
                                "typeString": "type(struct DynamicAssetPricedNFT.Metadata storage pointer)"
                              }
                            },
                            "id": 44969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "3498:4:28",
                              "3534:11:28",
                              "3601:5:28",
                              "3658:5:28"
                            ],
                            "names": [
                              "name",
                              "description",
                              "image",
                              "price"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "3471:214:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$44832_memory_ptr",
                              "typeString": "struct DynamicAssetPricedNFT.Metadata memory"
                            }
                          },
                          "src": "3460:225:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$44832_memory_ptr",
                            "typeString": "struct DynamicAssetPricedNFT.Metadata memory"
                          }
                        },
                        "id": 44971,
                        "nodeType": "ExpressionStatement",
                        "src": "3460:225:28"
                      }
                    ]
                  },
                  "id": 44973,
                  "nodeType": "IfStatement",
                  "src": "3152:544:28",
                  "trueBody": {
                    "id": 44962,
                    "nodeType": "Block",
                    "src": "3191:249:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 44960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 44953,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44903,
                            "src": "3205:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$44832_memory_ptr",
                              "typeString": "struct DynamicAssetPricedNFT.Metadata memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "4265617220546f6b656e",
                                "id": 44955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3249:12:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9b0a8ab5dd48195f77653c9bc04bc885c8b9c874f1248acb50ec7a9eaa6b2fb3",
                                  "typeString": "literal_string \"Bear Token\""
                                },
                                "value": "Bear Token"
                              },
                              {
                                "hexValue": "5072696365206973206c6f776572207468616e206c61737420636865636b65642e",
                                "id": 44956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3292:35:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_45f00466334d3f694198dddefd114fa1bc24eb8b1bed04e0611c2dec13f27c9e",
                                  "typeString": "literal_string \"Price is lower than last checked.\""
                                },
                                "value": "Price is lower than last checked."
                              },
                              {
                                "hexValue": "68747470733a2f2f6578616d706c652e636f6d2f626561725f696d616765",
                                "id": 44957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3352:32:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_8b565c60612837ddd78526e9a06eee401f9504e1be660565f7c2d591f2a68d91",
                                  "typeString": "literal_string \"https://example.com/bear_image\""
                                },
                                "value": "https://example.com/bear_image"
                              },
                              {
                                "id": 44958,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44899,
                                "src": "3409:5:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_9b0a8ab5dd48195f77653c9bc04bc885c8b9c874f1248acb50ec7a9eaa6b2fb3",
                                  "typeString": "literal_string \"Bear Token\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_45f00466334d3f694198dddefd114fa1bc24eb8b1bed04e0611c2dec13f27c9e",
                                  "typeString": "literal_string \"Price is lower than last checked.\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8b565c60612837ddd78526e9a06eee401f9504e1be660565f7c2d591f2a68d91",
                                  "typeString": "literal_string \"https://example.com/bear_image\""
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 44954,
                              "name": "Metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44832,
                              "src": "3216:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Metadata_$44832_storage_ptr_$",
                                "typeString": "type(struct DynamicAssetPricedNFT.Metadata storage pointer)"
                              }
                            },
                            "id": 44959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "3243:4:28",
                              "3279:11:28",
                              "3345:5:28",
                              "3402:5:28"
                            ],
                            "names": [
                              "name",
                              "description",
                              "image",
                              "price"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "3216:213:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$44832_memory_ptr",
                              "typeString": "struct DynamicAssetPricedNFT.Metadata memory"
                            }
                          },
                          "src": "3205:224:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$44832_memory_ptr",
                            "typeString": "struct DynamicAssetPricedNFT.Metadata memory"
                          }
                        },
                        "id": 44961,
                        "nodeType": "ExpressionStatement",
                        "src": "3205:224:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 44978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44974,
                        "name": "tokenMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44838,
                        "src": "3706:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_TokenType_$44823_$_t_struct$_Metadata_$44832_storage_$",
                          "typeString": "mapping(enum DynamicAssetPricedNFT.TokenType => struct DynamicAssetPricedNFT.Metadata storage ref)"
                        }
                      },
                      "id": 44976,
                      "indexExpression": {
                        "id": 44975,
                        "name": "_tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44881,
                        "src": "3720:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TokenType_$44823",
                          "typeString": "enum DynamicAssetPricedNFT.TokenType"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3706:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$44832_storage",
                        "typeString": "struct DynamicAssetPricedNFT.Metadata storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44977,
                      "name": "metadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44903,
                      "src": "3728:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$44832_memory_ptr",
                        "typeString": "struct DynamicAssetPricedNFT.Metadata memory"
                      }
                    },
                    "src": "3706:30:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$44832_storage",
                      "typeString": "struct DynamicAssetPricedNFT.Metadata storage ref"
                    }
                  },
                  "id": 44979,
                  "nodeType": "ExpressionStatement",
                  "src": "3706:30:28"
                },
                {
                  "expression": {
                    "id": 44987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 44980,
                          "name": "hasMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44845,
                          "src": "3746:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_TokenType_$44823_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(enum DynamicAssetPricedNFT.TokenType => bool))"
                          }
                        },
                        "id": 44984,
                        "indexExpression": {
                          "expression": {
                            "id": 44981,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3756:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3760:6:28",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3756:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3746:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_TokenType_$44823_$_t_bool_$",
                          "typeString": "mapping(enum DynamicAssetPricedNFT.TokenType => bool)"
                        }
                      },
                      "id": 44985,
                      "indexExpression": {
                        "id": 44983,
                        "name": "_tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44881,
                        "src": "3768:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TokenType_$44823",
                          "typeString": "enum DynamicAssetPricedNFT.TokenType"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3746:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 44986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3776:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3746:34:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44988,
                  "nodeType": "ExpressionStatement",
                  "src": "3746:34:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44990,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3797:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3801:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3797:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44994,
                            "name": "_tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44881,
                            "src": "3817:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$44823",
                              "typeString": "enum DynamicAssetPricedNFT.TokenType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$44823",
                              "typeString": "enum DynamicAssetPricedNFT.TokenType"
                            }
                          ],
                          "id": 44993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3809:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 44992,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3809:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3809:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3824:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 44997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3827:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 44989,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43668,
                      "src": "3791:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 44998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3791:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44999,
                  "nodeType": "ExpressionStatement",
                  "src": "3791:39:28"
                },
                {
                  "expression": {
                    "id": 45000,
                    "name": "metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44903,
                    "src": "3848:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$44832_memory_ptr",
                      "typeString": "struct DynamicAssetPricedNFT.Metadata memory"
                    }
                  },
                  "functionReturnParameters": 44886,
                  "id": 45001,
                  "nodeType": "Return",
                  "src": "3841:15:28"
                }
              ]
            },
            "documentation": {
              "id": 44878,
              "nodeType": "StructuredDocumentation",
              "src": "2330:217:28",
              "text": " @notice Get the latest price and mint a new token based on the price feed.\n @param _tkr The type of token to check the price for (BTC, ETH, LINK).\n @return Metadata for the minted token."
            },
            "functionSelector": "0c20a01f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nameLocation": "2561:14:28",
            "parameters": {
              "id": 44882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44881,
                  "mutability": "mutable",
                  "name": "_tkr",
                  "nameLocation": "2586:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 45003,
                  "src": "2576:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_TokenType_$44823",
                    "typeString": "enum DynamicAssetPricedNFT.TokenType"
                  },
                  "typeName": {
                    "id": 44880,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44879,
                      "name": "TokenType",
                      "nameLocations": [
                        "2576:9:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44823,
                      "src": "2576:9:28"
                    },
                    "referencedDeclaration": 44823,
                    "src": "2576:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_TokenType_$44823",
                      "typeString": "enum DynamicAssetPricedNFT.TokenType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2575:16:28"
            },
            "returnParameters": {
              "id": 44886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44885,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45003,
                  "src": "2608:15:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$44832_memory_ptr",
                    "typeString": "struct DynamicAssetPricedNFT.Metadata"
                  },
                  "typeName": {
                    "id": 44884,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44883,
                      "name": "Metadata",
                      "nameLocations": [
                        "2608:8:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44832,
                      "src": "2608:8:28"
                    },
                    "referencedDeclaration": 44832,
                    "src": "2608:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$44832_storage_ptr",
                      "typeString": "struct DynamicAssetPricedNFT.Metadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2607:17:28"
            },
            "scope": 45054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45008,
            "nodeType": "FunctionDefinition",
            "src": "3979:137:28",
            "nodes": [],
            "body": {
              "id": 45007,
              "nodeType": "Block",
              "src": "4018:98:28",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 45004,
              "nodeType": "StructuredDocumentation",
              "src": "3869:105:28",
              "text": " @notice Placeholder for a function that could be called every hour to update metadata."
            },
            "functionSelector": "0c35a900",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateMetadataHourly",
            "nameLocation": "3988:20:28",
            "parameters": {
              "id": 45005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4008:2:28"
            },
            "returnParameters": {
              "id": 45006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4018:0:28"
            },
            "scope": 45054,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45023,
            "nodeType": "FunctionDefinition",
            "src": "4245:153:28",
            "nodes": [],
            "body": {
              "id": 45022,
              "nodeType": "Block",
              "src": "4306:92:28",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    45015,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 45015,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "4323:5:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 45022,
                      "src": "4319:9:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 45014,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4319:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 45019,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45016,
                        "name": "_BTCPricefeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44813,
                        "src": "4338:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 45017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4352:15:28",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42897,
                      "src": "4338:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 45018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4338:31:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4316:53:28"
                },
                {
                  "expression": {
                    "id": 45020,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45015,
                    "src": "4386:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 45013,
                  "id": 45021,
                  "nodeType": "Return",
                  "src": "4379:12:28"
                }
              ]
            },
            "documentation": {
              "id": 45009,
              "nodeType": "StructuredDocumentation",
              "src": "4122:118:28",
              "text": " @dev Internal function to get the latest BTC price from Chainlink.\n @return Latest BTC price."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBTCLatestPriceFeed",
            "nameLocation": "4254:21:28",
            "parameters": {
              "id": 45010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4275:2:28"
            },
            "returnParameters": {
              "id": 45013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45012,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45023,
                  "src": "4301:3:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 45011,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4301:3:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4300:5:28"
            },
            "scope": 45054,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45038,
            "nodeType": "FunctionDefinition",
            "src": "4527:153:28",
            "nodes": [],
            "body": {
              "id": 45037,
              "nodeType": "Block",
              "src": "4588:92:28",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    45030,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 45030,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "4605:5:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 45037,
                      "src": "4601:9:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 45029,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4601:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 45034,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45031,
                        "name": "_ETHPricefeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44816,
                        "src": "4620:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 45032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4634:15:28",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42897,
                      "src": "4620:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 45033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4620:31:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4598:53:28"
                },
                {
                  "expression": {
                    "id": 45035,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45030,
                    "src": "4668:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 45028,
                  "id": 45036,
                  "nodeType": "Return",
                  "src": "4661:12:28"
                }
              ]
            },
            "documentation": {
              "id": 45024,
              "nodeType": "StructuredDocumentation",
              "src": "4404:118:28",
              "text": " @dev Internal function to get the latest ETH price from Chainlink.\n @return Latest ETH price."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getETHLatestPriceFeed",
            "nameLocation": "4536:21:28",
            "parameters": {
              "id": 45025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4557:2:28"
            },
            "returnParameters": {
              "id": 45028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45027,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45038,
                  "src": "4583:3:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 45026,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4583:3:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4582:5:28"
            },
            "scope": 45054,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45053,
            "nodeType": "FunctionDefinition",
            "src": "4811:155:28",
            "nodes": [],
            "body": {
              "id": 45052,
              "nodeType": "Block",
              "src": "4873:93:28",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    45045,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 45045,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "4890:5:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 45052,
                      "src": "4886:9:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 45044,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4886:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 45049,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45046,
                        "name": "_LINKPricefeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44819,
                        "src": "4905:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$42898",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 45047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4920:15:28",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42897,
                      "src": "4905:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 45048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4905:32:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4883:54:28"
                },
                {
                  "expression": {
                    "id": 45050,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45045,
                    "src": "4954:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 45043,
                  "id": 45051,
                  "nodeType": "Return",
                  "src": "4947:12:28"
                }
              ]
            },
            "documentation": {
              "id": 45039,
              "nodeType": "StructuredDocumentation",
              "src": "4686:120:28",
              "text": " @dev Internal function to get the latest LINK price from Chainlink.\n @return Latest LINK price."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLINKLatestPriceFeed",
            "nameLocation": "4820:22:28",
            "parameters": {
              "id": 45040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4842:2:28"
            },
            "returnParameters": {
              "id": 45043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45042,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45053,
                  "src": "4868:3:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 45041,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4868:3:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4867:5:28"
            },
            "scope": 45054,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44807,
              "name": "ERC1155",
              "nameLocations": [
                "655:7:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44234,
              "src": "655:7:28"
            },
            "id": 44808,
            "nodeType": "InheritanceSpecifier",
            "src": "655:7:28"
          },
          {
            "baseName": {
              "id": 44809,
              "name": "Ownable",
              "nameLocations": [
                "664:7:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43011,
              "src": "664:7:28"
            },
            "id": 44810,
            "nodeType": "InheritanceSpecifier",
            "src": "664:7:28"
          }
        ],
        "canonicalName": "DynamicAssetPricedNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 44806,
          "nodeType": "StructuredDocumentation",
          "src": "314:306:28",
          "text": " @title Dynamic Asset Priced NFT\n @author Christian Reyes\n @dev This contract mints NFTs based on Chainlink price feeds for BTC, ETH, and LINK.\n Each token type (BTC, ETH, LINK) can only be minted once per address.\n The metadata for each token type changes based on the latest price feed."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45054,
          43011,
          44234,
          44412,
          44356,
          44788,
          44800,
          44764
        ],
        "name": "DynamicAssetPricedNFT",
        "nameLocation": "630:21:28",
        "scope": 45055,
        "usedErrors": [],
        "usedEvents": [
          42912,
          44253,
          44268,
          44277,
          44284
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 28
}