{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newUser",
          "type": "address"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getBalanceOfAddy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getOwnerOfToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "publicUsers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "safeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "triggerAirDrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b81525081600090816200005f91906200018c565b5060016200006e82826200018c565b5050506200008b620000856200009160201b60201c565b62000095565b62000258565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011257607f821691505b6020821081036200013357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018757600081815260208120601f850160051c81016020861015620001625750805b601f850160051c820191505b8181101562000183578281556001016200016e565b5050505b505050565b81516001600160401b03811115620001a857620001a8620000e7565b620001c081620001b98454620000fd565b8462000139565b602080601f831160018114620001f85760008415620001df5750858301515b600019600386901b1c1916600185901b17855562000183565b600085815260208120601f198616915b82811015620002295788860151825594840194600190910190840162000208565b5085821015620002485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61175a80620002686000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c35780639839d5d61161007c5780639839d5d6146102b1578063a22cb465146102c4578063b88d4fde146102d7578063c87b56dd146102ea578063e985e9c5146102fd578063f2fde38b1461033957600080fd5b806370a0823114610262578063715018a6146102755780637f1dd80b1461027d57806383b653ac146102905780638da5cb5b1461029857806395d89b41146102a957600080fd5b806323b872dd1161011557806323b872dd146101e257806340d097c3146101f5578063421b2d8b1461020857806342842e0e1461021b5780634abf825d1461022e5780636352211e1461024f57600080fd5b806301ffc9a71461015257806306fdde031461017a578063081812fc1461018f578063095ea7b3146101ba5780630b1948d9146101cf575b600080fd5b6101656101603660046112a9565b61034c565b60405190151581526020015b60405180910390f35b61018261039e565b6040516101719190611316565b6101a261019d366004611329565b610430565b6040516001600160a01b039091168152602001610171565b6101cd6101c836600461135e565b610457565b005b6101a26101dd366004611329565b610571565b6101cd6101f0366004611388565b61059b565b6101cd6102033660046113c4565b6105cc565b6101cd6102163660046113c4565b610625565b6101cd610229366004611388565b61067f565b61024161023c36600461135e565b61069a565b604051908152602001610171565b6101a261025d366004611329565b6106cb565b6102416102703660046113c4565b61072b565b6101cd6107b1565b6101a261028b366004611329565b6107c5565b6101cd6107d0565b6006546001600160a01b03166101a2565b6101826107e0565b6102416102bf3660046113c4565b6107ef565b6101cd6102d23660046113df565b6107fa565b6101cd6102e5366004611431565b610809565b6101826102f8366004611329565b610841565b61016561030b36600461150d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101cd6103473660046113c4565b6108b5565b60006001600160e01b031982166380ac58cd60e01b148061037d57506001600160e01b03198216635b5e139f60e01b145b8061039857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103ad90611540565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611540565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b8261092e565b506000908152600460205260409020546001600160a01b031690565b6000610462826106cb565b9050806001600160a01b0316836001600160a01b0316036104d45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104f057506104f0813361030b565b6105625760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104cb565b61056c838361098d565b505050565b6008818154811061058157600080fd5b6000918252602090912001546001600160a01b0316905081565b6105a533826109fb565b6105c15760405162461bcd60e51b81526004016104cb9061157a565b61056c838383610a7a565b6105d4610bde565b60006105df60075490565b90506105ef600780546001019055565b6105f98282610c38565b6001600160a01b0390911660009081526009602090815260408220805460018101825590835291200155565b61062d610bde565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0392909216919091179055565b61056c83838360405180602001604052806000815250610809565b600960205281600052604060002081815481106106b657600080fd5b90600052602060002001600091509150505481565b6000818152600260205260408120546001600160a01b0316806103985760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104cb565b60006001600160a01b0382166107955760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104cb565b506001600160a01b031660009081526003602052604090205490565b6107b9610bde565b6107c36000610c52565b565b6000610398826106cb565b6107d8610bde565b6107c3610ca4565b6060600180546103ad90611540565b60006103988261072b565b610805338383610d68565b5050565b61081333836109fb565b61082f5760405162461bcd60e51b81526004016104cb9061157a565b61083b84848484610e36565b50505050565b606061084c8261092e565b600061086360408051602081019091526000815290565b9050600081511161088357604051806020016040528060008152506108ae565b8061088d84610e69565b60405160200161089e9291906115c7565b6040516020818303038152906040525b9392505050565b6108bd610bde565b6001600160a01b0381166109225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cb565b61092b81610c52565b50565b6000818152600260205260409020546001600160a01b031661092b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104cb565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109c2826106cb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a07836106cb565b9050806001600160a01b0316846001600160a01b03161480610a4e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a725750836001600160a01b0316610a6784610430565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a8d826106cb565b6001600160a01b031614610ab35760405162461bcd60e51b81526004016104cb906115f6565b6001600160a01b038216610b155760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104cb565b826001600160a01b0316610b28826106cb565b6001600160a01b031614610b4e5760405162461bcd60e51b81526004016104cb906115f6565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146107c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cb565b610805828260405180602001604052806000815250610efc565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610cac610bde565b60005b60085481101561092b576000610cc460075490565b9050610cf760088381548110610cdc57610cdc61163b565b6000918252602090912001546001600160a01b031682610c38565b6009600060088481548110610d0e57610d0e61163b565b60009182526020808320909101546001600160a01b031683528281019390935260409091018120805460018101825590825291902001819055610d55600780546001019055565b5080610d6081611651565b915050610caf565b816001600160a01b0316836001600160a01b031603610dc95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104cb565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e41848484610a7a565b610e4d84848484610f2f565b61083b5760405162461bcd60e51b81526004016104cb90611678565b60606000610e7683611030565b600101905060008167ffffffffffffffff811115610e9657610e9661141b565b6040519080825280601f01601f191660200182016040528015610ec0576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610eca57509392505050565b610f068383611108565b610f136000848484610f2f565b61056c5760405162461bcd60e51b81526004016104cb90611678565b60006001600160a01b0384163b1561102557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f739033908990889088906004016116ca565b6020604051808303816000875af1925050508015610fae575060408051601f3d908101601f19168201909252610fab91810190611707565b60015b61100b573d808015610fdc576040519150601f19603f3d011682016040523d82523d6000602084013e610fe1565b606091505b5080516000036110035760405162461bcd60e51b81526004016104cb90611678565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a72565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061106f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061109b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106110b957662386f26fc10000830492506010015b6305f5e10083106110d1576305f5e100830492506008015b61271083106110e557612710830492506004015b606483106110f7576064830492506002015b600a83106103985760010192915050565b6001600160a01b03821661115e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104cb565b6000818152600260205260409020546001600160a01b0316156111c35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104cb565b6000818152600260205260409020546001600160a01b0316156112285760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104cb565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461092b57600080fd5b6000602082840312156112bb57600080fd5b81356108ae81611293565b60005b838110156112e15781810151838201526020016112c9565b50506000910152565b600081518084526113028160208601602086016112c6565b601f01601f19169290920160200192915050565b6020815260006108ae60208301846112ea565b60006020828403121561133b57600080fd5b5035919050565b80356001600160a01b038116811461135957600080fd5b919050565b6000806040838503121561137157600080fd5b61137a83611342565b946020939093013593505050565b60008060006060848603121561139d57600080fd5b6113a684611342565b92506113b460208501611342565b9150604084013590509250925092565b6000602082840312156113d657600080fd5b6108ae82611342565b600080604083850312156113f257600080fd5b6113fb83611342565b91506020830135801515811461141057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561144757600080fd5b61145085611342565b935061145e60208601611342565b925060408501359150606085013567ffffffffffffffff8082111561148257600080fd5b818701915087601f83011261149657600080fd5b8135818111156114a8576114a861141b565b604051601f8201601f19908116603f011681019083821181831017156114d0576114d061141b565b816040528281528a60208487010111156114e957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561152057600080fd5b61152983611342565b915061153760208401611342565b90509250929050565b600181811c9082168061155457607f821691505b60208210810361157457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516115d98184602088016112c6565b8351908301906115ed8183602088016112c6565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006001820161167157634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906116fd908301846112ea565b9695505050505050565b60006020828403121561171957600080fd5b81516108ae8161129356fea26469706673582212207c1211bb22ed5b900f8e4c4d59b018776726fe3327c210c83ff5efd41a02bf9864736f6c63430008150033",
    "sourceMap": "553:3201:41:-:0;;;1110:46;;;;;;;;;;1390:113:24;;;;;;;;;;;;;-1:-1:-1;;;1390:113:24;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:24;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:24;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:19;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;553:3201:41;;640:96:29;719:10;;640:96::o;2426:187:19:-;2518:6;;;-1:-1:-1;;;;;2534:17:19;;;-1:-1:-1;;;;;;2534:17:19;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:127:47:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:47;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:47;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:47;;;2580:26;2531:89;-1:-1:-1;;1335:1:47;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:47;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:47;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:47;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:47:o;:::-;553:3201:41;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c35780639839d5d61161007c5780639839d5d6146102b1578063a22cb465146102c4578063b88d4fde146102d7578063c87b56dd146102ea578063e985e9c5146102fd578063f2fde38b1461033957600080fd5b806370a0823114610262578063715018a6146102755780637f1dd80b1461027d57806383b653ac146102905780638da5cb5b1461029857806395d89b41146102a957600080fd5b806323b872dd1161011557806323b872dd146101e257806340d097c3146101f5578063421b2d8b1461020857806342842e0e1461021b5780634abf825d1461022e5780636352211e1461024f57600080fd5b806301ffc9a71461015257806306fdde031461017a578063081812fc1461018f578063095ea7b3146101ba5780630b1948d9146101cf575b600080fd5b6101656101603660046112a9565b61034c565b60405190151581526020015b60405180910390f35b61018261039e565b6040516101719190611316565b6101a261019d366004611329565b610430565b6040516001600160a01b039091168152602001610171565b6101cd6101c836600461135e565b610457565b005b6101a26101dd366004611329565b610571565b6101cd6101f0366004611388565b61059b565b6101cd6102033660046113c4565b6105cc565b6101cd6102163660046113c4565b610625565b6101cd610229366004611388565b61067f565b61024161023c36600461135e565b61069a565b604051908152602001610171565b6101a261025d366004611329565b6106cb565b6102416102703660046113c4565b61072b565b6101cd6107b1565b6101a261028b366004611329565b6107c5565b6101cd6107d0565b6006546001600160a01b03166101a2565b6101826107e0565b6102416102bf3660046113c4565b6107ef565b6101cd6102d23660046113df565b6107fa565b6101cd6102e5366004611431565b610809565b6101826102f8366004611329565b610841565b61016561030b36600461150d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101cd6103473660046113c4565b6108b5565b60006001600160e01b031982166380ac58cd60e01b148061037d57506001600160e01b03198216635b5e139f60e01b145b8061039857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103ad90611540565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611540565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b8261092e565b506000908152600460205260409020546001600160a01b031690565b6000610462826106cb565b9050806001600160a01b0316836001600160a01b0316036104d45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104f057506104f0813361030b565b6105625760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104cb565b61056c838361098d565b505050565b6008818154811061058157600080fd5b6000918252602090912001546001600160a01b0316905081565b6105a533826109fb565b6105c15760405162461bcd60e51b81526004016104cb9061157a565b61056c838383610a7a565b6105d4610bde565b60006105df60075490565b90506105ef600780546001019055565b6105f98282610c38565b6001600160a01b0390911660009081526009602090815260408220805460018101825590835291200155565b61062d610bde565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0392909216919091179055565b61056c83838360405180602001604052806000815250610809565b600960205281600052604060002081815481106106b657600080fd5b90600052602060002001600091509150505481565b6000818152600260205260408120546001600160a01b0316806103985760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104cb565b60006001600160a01b0382166107955760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104cb565b506001600160a01b031660009081526003602052604090205490565b6107b9610bde565b6107c36000610c52565b565b6000610398826106cb565b6107d8610bde565b6107c3610ca4565b6060600180546103ad90611540565b60006103988261072b565b610805338383610d68565b5050565b61081333836109fb565b61082f5760405162461bcd60e51b81526004016104cb9061157a565b61083b84848484610e36565b50505050565b606061084c8261092e565b600061086360408051602081019091526000815290565b9050600081511161088357604051806020016040528060008152506108ae565b8061088d84610e69565b60405160200161089e9291906115c7565b6040516020818303038152906040525b9392505050565b6108bd610bde565b6001600160a01b0381166109225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cb565b61092b81610c52565b50565b6000818152600260205260409020546001600160a01b031661092b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104cb565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109c2826106cb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a07836106cb565b9050806001600160a01b0316846001600160a01b03161480610a4e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a725750836001600160a01b0316610a6784610430565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a8d826106cb565b6001600160a01b031614610ab35760405162461bcd60e51b81526004016104cb906115f6565b6001600160a01b038216610b155760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104cb565b826001600160a01b0316610b28826106cb565b6001600160a01b031614610b4e5760405162461bcd60e51b81526004016104cb906115f6565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146107c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cb565b610805828260405180602001604052806000815250610efc565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610cac610bde565b60005b60085481101561092b576000610cc460075490565b9050610cf760088381548110610cdc57610cdc61163b565b6000918252602090912001546001600160a01b031682610c38565b6009600060088481548110610d0e57610d0e61163b565b60009182526020808320909101546001600160a01b031683528281019390935260409091018120805460018101825590825291902001819055610d55600780546001019055565b5080610d6081611651565b915050610caf565b816001600160a01b0316836001600160a01b031603610dc95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104cb565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e41848484610a7a565b610e4d84848484610f2f565b61083b5760405162461bcd60e51b81526004016104cb90611678565b60606000610e7683611030565b600101905060008167ffffffffffffffff811115610e9657610e9661141b565b6040519080825280601f01601f191660200182016040528015610ec0576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610eca57509392505050565b610f068383611108565b610f136000848484610f2f565b61056c5760405162461bcd60e51b81526004016104cb90611678565b60006001600160a01b0384163b1561102557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f739033908990889088906004016116ca565b6020604051808303816000875af1925050508015610fae575060408051601f3d908101601f19168201909252610fab91810190611707565b60015b61100b573d808015610fdc576040519150601f19603f3d011682016040523d82523d6000602084013e610fe1565b606091505b5080516000036110035760405162461bcd60e51b81526004016104cb90611678565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a72565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061106f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061109b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106110b957662386f26fc10000830492506010015b6305f5e10083106110d1576305f5e100830492506008015b61271083106110e557612710830492506004015b606483106110f7576064830492506002015b600a83106103985760010192915050565b6001600160a01b03821661115e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104cb565b6000818152600260205260409020546001600160a01b0316156111c35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104cb565b6000818152600260205260409020546001600160a01b0316156112285760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104cb565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461092b57600080fd5b6000602082840312156112bb57600080fd5b81356108ae81611293565b60005b838110156112e15781810151838201526020016112c9565b50506000910152565b600081518084526113028160208601602086016112c6565b601f01601f19169290920160200192915050565b6020815260006108ae60208301846112ea565b60006020828403121561133b57600080fd5b5035919050565b80356001600160a01b038116811461135957600080fd5b919050565b6000806040838503121561137157600080fd5b61137a83611342565b946020939093013593505050565b60008060006060848603121561139d57600080fd5b6113a684611342565b92506113b460208501611342565b9150604084013590509250925092565b6000602082840312156113d657600080fd5b6108ae82611342565b600080604083850312156113f257600080fd5b6113fb83611342565b91506020830135801515811461141057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561144757600080fd5b61145085611342565b935061145e60208601611342565b925060408501359150606085013567ffffffffffffffff8082111561148257600080fd5b818701915087601f83011261149657600080fd5b8135818111156114a8576114a861141b565b604051601f8201601f19908116603f011681019083821181831017156114d0576114d061141b565b816040528281528a60208487010111156114e957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561152057600080fd5b61152983611342565b915061153760208401611342565b90509250929050565b600181811c9082168061155457607f821691505b60208210810361157457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516115d98184602088016112c6565b8351908301906115ed8183602088016112c6565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006001820161167157634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906116fd908301846112ea565b9695505050505050565b60006020828403121561171957600080fd5b81516108ae8161129356fea26469706673582212207c1211bb22ed5b900f8e4c4d59b018776726fe3327c210c83ff5efd41a02bf9864736f6c63430008150033",
    "sourceMap": "553:3201:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:24;;;;;;:::i;:::-;;:::i;:::-;;;565:14:47;;558:22;540:41;;528:2;513:18;1570:300:24;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:47;;;1679:51;;1667:2;1652:18;3935:167:24;1533:203:47;3468:406:24;;;;;;:::i;:::-;;:::i;:::-;;870:28:41;;;;;;:::i;:::-;;:::i;4612:296:24:-;;;;;;:::i;:::-;;:::i;1339:407:41:-;;;;;;:::i;:::-;;:::i;3010:95::-;;;;;;:::i;:::-;;:::i;4974:149:24:-;;;;;;:::i;:::-;;:::i;1060:43:41:-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:47;;;2836:2;2821:18;1060:43:41;2702:177:47;2190:219:24;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;1824:101:19:-;;;:::i;3313:112:41:-;;;;;;:::i;:::-;;:::i;2720:69::-;;;:::i;1201:85:19:-;1273:6;;-1:-1:-1;;;;;1273:6:19;1201:85;;2633:102:24;;;:::i;3641:111:41:-;;;;;;:::i;:::-;;:::i;4169:153:24:-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:24;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;2074:198:19;;;;;;:::i;:::-;;:::i;1570:300:24:-;1672:4;-1:-1:-1;;;;;;1707:40:24;;-1:-1:-1;;;1707:40:24;;:104;;-1:-1:-1;;;;;;;1763:48:24;;-1:-1:-1;;;1763:48:24;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:32;;;1827:36:24;1688:175;1570:300;-1:-1:-1;;1570:300:24:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:24;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:24;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:24;:2;-1:-1:-1;;;;;3605:11:24;;3597:57;;;;-1:-1:-1;;;3597:57:24;;5363:2:47;3597:57:24;;;5345:21:47;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:47;;;5485:31;5533:19;;3597:57:24;;;;;;;;;719:10:29;-1:-1:-1;;;;;3686:21:24;;;;:62;;-1:-1:-1;3711:37:24;3728:5;719:10:29;4388:162:24;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:24;;5765:2:47;3665:170:24;;;5747:21:47;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:24;5563:425:47;3665:170:24;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;870:28:41:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;870:28:41;;-1:-1:-1;870:28:41;:::o;4612:296:24:-;4771:41;719:10:29;4804:7:24;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:24;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;1339:407:41:-;1094:13:19;:11;:13::i;:::-;1433:15:41::1;1451:25;:15;918:14:30::0;;827:112;1451:25:41::1;1433:43;;1531:27;:15;1032:19:30::0;;1050:1;1032:19;;;945:123;1531:27:41::1;1626:22;1636:2;1640:7;1626:9;:22::i;:::-;-1:-1:-1::0;;;;;1715:10:41;;::::1;;::::0;;;:6:::1;:10;::::0;;;;;;:24;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;1339:407::o;3010:95::-;1094:13:19;:11;:13::i;:::-;3072:11:41::1;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3072:26:41;;;;;::::1;::::0;;-1:-1:-1;;;;;;3072:26:41::1;-1:-1:-1::0;;;;;3072:26:41;;;::::1;::::0;;;::::1;::::0;;3010:95::o;4974:149:24:-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;1060:43:41:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2190:219:24:-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:24;;2324:56;;;;-1:-1:-1;;;2324:56:24;;6609:2:47;2324:56:24;;;6591:21:47;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:47;;;6660:54;6731:18;;2324:56:24;6407:348:47;1929:204:24;2001:7;-1:-1:-1;;;;;2028:19:24;;2020:73;;;;-1:-1:-1;;;2020:73:24;;6962:2:47;2020:73:24;;;6944:21:47;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:47;;;7084:39;7140:19;;2020:73:24;6760:405:47;2020:73:24;-1:-1:-1;;;;;;2110:16:24;;;;;:9;:16;;;;;;;1929:204::o;1824:101:19:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;3313:112:41:-;3376:7;3402:16;3410:7;3402;:16::i;2720:69::-;1094:13:19;:11;:13::i;:::-;2773:9:41::1;:7;:9::i;2633:102:24:-:0;2689:13;2721:7;2714:14;;;;;:::i;3641:111:41:-;3703:7;3729:16;3739:5;3729:9;:16::i;4169:153:24:-;4263:52;719:10:29;4296:8:24;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:29;5352:7:24;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:24;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:24;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:24:o;2074:198:19:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:19;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:19;;7873:2:47;2154:73:19::1;::::0;::::1;7855:21:47::0;7912:2;7892:18;;;7885:30;7951:34;7931:18;;;7924:62;-1:-1:-1;;;8002:18:47;;;7995:36;8048:19;;2154:73:19::1;7671:402:47::0;2154:73:19::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;13240:133:24:-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:24;13313:53;;;;-1:-1:-1;;;13313:53:24;;6609:2:47;13313:53:24;;;6591:21:47;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:47;;;6660:54;6731:18;;13313:53:24;6407:348:47;12572:171:24;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:24;-1:-1:-1;;;;;12646:29:24;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:24;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:24;:7;-1:-1:-1;;;;;7570:16:24;;:52;;;-1:-1:-1;;;;;;4508:25:24;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7590:32;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:24;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:24;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:24:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:24;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:24;;11346:81;;;;-1:-1:-1;;;11346:81:24;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:24;;11437:65;;;;-1:-1:-1;;;11437:65:24;;8686:2:47;11437:65:24;;;8668:21:47;8725:2;8705:18;;;8698:30;8764:34;8744:18;;;8737:62;-1:-1:-1;;;8815:18:47;;;8808:34;8859:19;;11437:65:24;8484:400:47;11437:65:24;11682:4;-1:-1:-1;;;;;11655:31:24;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:24;;11647:81;;;;-1:-1:-1;;;11647:81:24;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:24;;;;;;-1:-1:-1;;;;;12265:15:24;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:24;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;1359:130:19:-;1273:6;;-1:-1:-1;;;;;1273:6:19;719:10:29;1422:23:19;1414:68;;;;-1:-1:-1;;;1414:68:19;;9091:2:47;1414:68:19;;;9073:21:47;;;9110:18;;;9103:30;9169:34;9149:18;;;9142:62;9221:18;;1414:68:19;8889:356:47;7995:108:24;8070:26;8080:2;8084:7;8070:26;;;;;;;;;;;;:9;:26::i;2426:187:19:-;2518:6;;;-1:-1:-1;;;;;2534:17:19;;;-1:-1:-1;;;;;;2534:17:19;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;1916:595:41:-;1094:13:19;:11;:13::i;:::-;2034:6:41::1;2029:476;2050:11;:18:::0;2046:22;::::1;2029:476;;;2130:15;2148:25;:15;918:14:30::0;;827:112;2148:25:41::1;2130:43;;2259:34;2269:11;2281:1;2269:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;2269:14:41::1;2285:7:::0;2259:9:::1;:34::i;:::-;2368:6;:22;2375:11;2387:1;2375:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;2375:14:41::1;2368:22:::0;;;;::::1;::::0;;;;;;;;;;:36;;2375:14;2368:36;::::1;::::0;;;;;;;;::::1;::::0;;;2467:27:::1;:15;1032:19:30::0;;1050:1;1032:19;;;945:123;2467:27:41::1;-1:-1:-1::0;2070:3:41;::::1;::::0;::::1;:::i;:::-;;;;2029:476;;12879:277:24::0;12999:8;-1:-1:-1;;;;;12990:17:24;:5;-1:-1:-1;;;;;12990:17:24;;12982:55;;;;-1:-1:-1;;;12982:55:24;;9821:2:47;12982:55:24;;;9803:21:47;9860:2;9840:18;;;9833:30;9899:27;9879:18;;;9872:55;9944:18;;12982:55:24;9619:349:47;12982:55:24;-1:-1:-1;;;;;13047:25:24;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:24;;;;;;;;;;13108:41;;540::47;;;13108::24;;513:18:47;13108:41:24;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:24;;;;;;;:::i;447:696:31:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:31;-1:-1:-1;604:41:31;-1:-1:-1;765:28:31;;;781:2;765:28;820:280;-1:-1:-1;;851:5:31;-1:-1:-1;;;985:2:31;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:31;820:280;1064:21;-1:-1:-1;1120:6:31;447:696;-1:-1:-1;;;447:696:31:o;8324:279:24:-;8418:18;8424:2;8428:7;8418:5;:18::i;:::-;8467:53;8498:1;8502:2;8506:7;8515:4;8467:22;:53::i;:::-;8446:150;;;;-1:-1:-1;;;8446:150:24;;;;;;;:::i;13925:831::-;14074:4;-1:-1:-1;;;;;14094:13:24;;1702:19:28;:23;14090:660:24;;14129:71;;-1:-1:-1;;;14129:71:24;;-1:-1:-1;;;;;14129:36:24;;;;;:71;;719:10:29;;14180:4:24;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:24;;;;;;;;-1:-1:-1;;14129:71:24;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:24;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:24;-1:-1:-1;;;14250:51:24;;-1:-1:-1;14243:58:24;;14090:660;-1:-1:-1;14735:4:24;13925:831;;;;;;:::o;10139:916:34:-;10192:7;;-1:-1:-1;;;10267:17:34;;10263:103;;-1:-1:-1;;;10304:17:34;;;-1:-1:-1;10349:2:34;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:34;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:34;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:34;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:34;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:34;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:34:o;8925:920:24:-;-1:-1:-1;;;;;9004:16:24;;8996:61;;;;-1:-1:-1;;;8996:61:24;;11474:2:47;8996:61:24;;;11456:21:47;;;11493:18;;;11486:30;11552:34;11532:18;;;11525:62;11604:18;;8996:61:24;11272:356:47;8996:61:24;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:24;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:24;;11835:2:47;9067:58:24;;;11817:21:47;11874:2;11854:18;;;11847:30;11913;11893:18;;;11886:58;11961:18;;9067:58:24;11633:352:47;9067:58:24;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:24;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:24;;11835:2:47;9271:58:24;;;11817:21:47;11874:2;11854:18;;;11847:30;11913;11893:18;;;11886:58;11961:18;;9271:58:24;11633:352:47;9271:58:24;-1:-1:-1;;;;;9671:13:24;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:24;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;4169:153;;:::o;14:131:47:-;-1:-1:-1;;;;;;88:32:47;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:47;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:47;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:47:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:47;;1348:180;-1:-1:-1;1348:180:47:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:47;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:47:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:47;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:47;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:496::-;7349:3;7387:6;7381:13;7403:66;7462:6;7457:3;7450:4;7442:6;7438:17;7403:66;:::i;:::-;7532:13;;7491:16;;;;7554:70;7532:13;7491:16;7601:4;7589:17;;7554:70;:::i;:::-;7640:20;;7170:496;-1:-1:-1;;;;7170:496:47:o;8078:401::-;8280:2;8262:21;;;8319:2;8299:18;;;8292:30;8358:34;8353:2;8338:18;;8331:62;-1:-1:-1;;;8424:2:47;8409:18;;8402:35;8469:3;8454:19;;8078:401::o;9250:127::-;9311:10;9306:3;9302:20;9299:1;9292:31;9342:4;9339:1;9332:15;9366:4;9363:1;9356:15;9382:232;9421:3;9442:17;;;9439:140;;9501:10;9496:3;9492:20;9489:1;9482:31;9536:4;9533:1;9526:15;9564:4;9561:1;9554:15;9439:140;-1:-1:-1;9606:1:47;9595:13;;9382:232::o;9973:414::-;10175:2;10157:21;;;10214:2;10194:18;;;10187:30;10253:34;10248:2;10233:18;;10226:62;-1:-1:-1;;;10319:2:47;10304:18;;10297:48;10377:3;10362:19;;9973:414::o;10524:489::-;-1:-1:-1;;;;;10793:15:47;;;10775:34;;10845:15;;10840:2;10825:18;;10818:43;10892:2;10877:18;;10870:34;;;10940:3;10935:2;10920:18;;10913:31;;;10718:4;;10961:46;;10987:19;;10979:6;10961:46;:::i;:::-;10953:54;10524:489;-1:-1:-1;;;;;;10524:489:47:o;11018:249::-;11087:6;11140:2;11128:9;11119:7;11115:23;11111:32;11108:52;;;11156:1;11153;11146:12;11108:52;11188:9;11182:16;11207:30;11231:5;11207:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addUser(address)": "421b2d8b",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "getBalanceOfAddy(address)": "9839d5d6",
    "getOwnerOfToken(uint256)": "7f1dd80b",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "publicUsers(uint256)": "0b1948d9",
    "renounceOwnership()": "715018a6",
    "safeMint(address)": "40d097c3",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "tokens(address,uint256)": "4abf825d",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "triggerAirDrop()": "83b653ac"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newUser\",\"type\":\"address\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getBalanceOfAddy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getOwnerOfToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"publicUsers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"triggerAirDrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Christian Reyes \",\"details\":\"The contract inherits from OpenZeppelin's ERC721 and Ownable contracts.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"addUser(address)\":{\"details\":\"This function can only be called by the contract owner.\",\"params\":{\"_newUser\":\"The address to be added to the publicUsers array.\"}},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBalanceOfAddy(address)\":{\"params\":{\"_user\":\"The address whose token balance is to be returned.\"},\"returns\":{\"_0\":\"The token balance of the specified address.\"}},\"getOwnerOfToken(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token whose owner is to be returned.\"},\"returns\":{\"_0\":\"The address of the owner of the specified token.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeMint(address)\":{\"details\":\"Only the contract owner can mint new tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"triggerAirDrop()\":{\"details\":\"This function can only be called by the contract owner.\"}},\"stateVariables\":{\"tokens\":{\"details\":\"Key is the address of the token holder, and value is an array of token IDs.\"}},\"title\":\"MyToken ERC721 Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addUser(address)\":{\"notice\":\"Function to add a new address to the publicUsers array.\"},\"getBalanceOfAddy(address)\":{\"notice\":\"Function to get the balance of tokens for a specific address.\"},\"getOwnerOfToken(uint256)\":{\"notice\":\"Function to get the owner of a specific token.\"},\"publicUsers(uint256)\":{\"notice\":\"Array to store addresses eligible for airdrops.\"},\"safeMint(address)\":{\"notice\":\"Function to safely mint a new token.\"},\"tokens(address,uint256)\":{\"notice\":\"Mapping to store token IDs owned by each address.\"},\"triggerAirDrop()\":{\"notice\":\"Function to trigger the airDrop function. everyone that has been added to the publicUsers array will receive a token.\"}},\"notice\":\"This contract is an example of an ERC721 token with additional functionalities like airdropping tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ZAirDrop.sol\":\"MyToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/ZAirDrop.sol\":{\"keccak256\":\"0x01b705533ff9d8969a6d0a22eaad079da4cce17ff25855d92168e3a87cd0796a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://178243fa223e525849306d1af9363f7881496849f42bb0dd51fd5924d9c57425\",\"dweb:/ipfs/QmZaSwsWZFbBAoez1q6pAPWrfBMysmQRnZHLN7XD8QURyp\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newUser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addUser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalanceOfAddy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOwnerOfToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "publicUsers",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "triggerAirDrop"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addUser(address)": {
            "details": "This function can only be called by the contract owner.",
            "params": {
              "_newUser": "The address to be added to the publicUsers array."
            }
          },
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBalanceOfAddy(address)": {
            "params": {
              "_user": "The address whose token balance is to be returned."
            },
            "returns": {
              "_0": "The token balance of the specified address."
            }
          },
          "getOwnerOfToken(uint256)": {
            "params": {
              "tokenId": "The ID of the token whose owner is to be returned."
            },
            "returns": {
              "_0": "The address of the owner of the specified token."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "safeMint(address)": {
            "details": "Only the contract owner can mint new tokens.",
            "params": {
              "to": "The address that will receive the minted token."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "triggerAirDrop()": {
            "details": "This function can only be called by the contract owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addUser(address)": {
            "notice": "Function to add a new address to the publicUsers array."
          },
          "getBalanceOfAddy(address)": {
            "notice": "Function to get the balance of tokens for a specific address."
          },
          "getOwnerOfToken(uint256)": {
            "notice": "Function to get the owner of a specific token."
          },
          "publicUsers(uint256)": {
            "notice": "Array to store addresses eligible for airdrops."
          },
          "safeMint(address)": {
            "notice": "Function to safely mint a new token."
          },
          "tokens(address,uint256)": {
            "notice": "Mapping to store token IDs owned by each address."
          },
          "triggerAirDrop()": {
            "notice": "Function to trigger the airDrop function. everyone that has been added to the publicUsers array will receive a token."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ZAirDrop.sol": "MyToken"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/ZAirDrop.sol": {
        "keccak256": "0x01b705533ff9d8969a6d0a22eaad079da4cce17ff25855d92168e3a87cd0796a",
        "urls": [
          "bzz-raw://178243fa223e525849306d1af9363f7881496849f42bb0dd51fd5924d9c57425",
          "dweb:/ipfs/QmZaSwsWZFbBAoez1q6pAPWrfBMysmQRnZHLN7XD8QURyp"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ZAirDrop.sol",
    "id": 48259,
    "exportedSymbols": {
      "Address": [
        45830
      ],
      "Context": [
        45852
      ],
      "Counters": [
        45926
      ],
      "ERC165": [
        46179
      ],
      "ERC721": [
        45339
      ],
      "IERC165": [
        46191
      ],
      "IERC721": [
        45455
      ],
      "IERC721Metadata": [
        45500
      ],
      "IERC721Receiver": [
        45473
      ],
      "Math": [
        47057
      ],
      "MyToken": [
        48258
      ],
      "Ownable": [
        43011
      ],
      "SignedMath": [
        47162
      ],
      "Strings": [
        46155
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3723:41",
    "nodes": [
      {
        "id": 48093,
        "nodeType": "PragmaDirective",
        "src": "32:24:41",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 48094,
        "nodeType": "ImportDirective",
        "src": "126:57:41",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48259,
        "sourceUnit": 45340,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48095,
        "nodeType": "ImportDirective",
        "src": "184:52:41",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48259,
        "sourceUnit": 43012,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48096,
        "nodeType": "ImportDirective",
        "src": "237:52:41",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48259,
        "sourceUnit": 45927,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48258,
        "nodeType": "ContractDefinition",
        "src": "553:3201:41",
        "nodes": [
          {
            "id": 48105,
            "nodeType": "UsingForDirective",
            "src": "660:36:41",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 48102,
              "name": "Counters",
              "nameLocations": [
                "666:8:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45926,
              "src": "666:8:41"
            },
            "typeName": {
              "id": 48104,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48103,
                "name": "Counters.Counter",
                "nameLocations": [
                  "679:8:41",
                  "688:7:41"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45858,
                "src": "679:16:41"
              },
              "referencedDeclaration": 45858,
              "src": "679:16:41",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$45858_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 48109,
            "nodeType": "VariableDeclaration",
            "src": "759:40:41",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48106,
              "nodeType": "StructuredDocumentation",
              "src": "702:52:41",
              "text": "@notice Counter for generating unique token IDs."
            },
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "784:15:41",
            "scope": 48258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$45858_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 48108,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48107,
                "name": "Counters.Counter",
                "nameLocations": [
                  "759:8:41",
                  "768:7:41"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45858,
                "src": "759:16:41"
              },
              "referencedDeclaration": 45858,
              "src": "759:16:41",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$45858_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "id": 48113,
            "nodeType": "VariableDeclaration",
            "src": "870:28:41",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48110,
              "nodeType": "StructuredDocumentation",
              "src": "806:59:41",
              "text": "@notice Array to store addresses eligible for airdrops."
            },
            "functionSelector": "0b1948d9",
            "mutability": "mutable",
            "name": "publicUsers",
            "nameLocation": "887:11:41",
            "scope": 48258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 48111,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "870:7:41",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 48112,
              "nodeType": "ArrayTypeName",
              "src": "870:9:41",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48119,
            "nodeType": "VariableDeclaration",
            "src": "1060:43:41",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48114,
              "nodeType": "StructuredDocumentation",
              "src": "905:150:41",
              "text": "@notice Mapping to store token IDs owned by each address.\n @dev Key is the address of the token holder, and value is an array of token IDs."
            },
            "functionSelector": "4abf825d",
            "mutability": "mutable",
            "name": "tokens",
            "nameLocation": "1097:6:41",
            "scope": 48258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 48118,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 48115,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1068:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1060:29:41",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 48116,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1079:7:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 48117,
                "nodeType": "ArrayTypeName",
                "src": "1079:9:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 48127,
            "nodeType": "FunctionDefinition",
            "src": "1110:46:41",
            "nodes": [],
            "body": {
              "id": 48126,
              "nodeType": "Block",
              "src": "1149:7:41",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d79546f6b656e",
                    "id": 48122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1131:9:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                      "typeString": "literal_string \"MyToken\""
                    },
                    "value": "MyToken"
                  },
                  {
                    "hexValue": "4d544b",
                    "id": 48123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1142:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                      "typeString": "literal_string \"MTK\""
                    },
                    "value": "MTK"
                  }
                ],
                "id": 48124,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 48121,
                  "name": "ERC721",
                  "nameLocations": [
                    "1124:6:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45339,
                  "src": "1124:6:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "1124:24:41"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 48120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1121:2:41"
            },
            "returnParameters": {
              "id": 48125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1149:0:41"
            },
            "scope": 48258,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48159,
            "nodeType": "FunctionDefinition",
            "src": "1339:407:41",
            "nodes": [],
            "body": {
              "id": 48158,
              "nodeType": "Block",
              "src": "1386:360:41",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48136,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "1441:7:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 48158,
                      "src": "1433:15:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48135,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1433:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48140,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48137,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48109,
                        "src": "1451:15:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$45858_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 48138,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1467:7:41",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45870,
                      "src": "1451:23:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$45858_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$45858_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 48139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1451:25:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1433:43:41"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48141,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48109,
                        "src": "1531:15:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$45858_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 48143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1547:9:41",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45884,
                      "src": "1531:25:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$45858_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$45858_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 48144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:27:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48145,
                  "nodeType": "ExpressionStatement",
                  "src": "1531:27:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48147,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48130,
                        "src": "1636:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48148,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48136,
                        "src": "1640:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48146,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44907,
                        44936
                      ],
                      "referencedDeclaration": 44907,
                      "src": "1626:9:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 48149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1626:22:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48150,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:22:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48155,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48136,
                        "src": "1731:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 48151,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48119,
                          "src": "1715:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 48153,
                        "indexExpression": {
                          "id": 48152,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48130,
                          "src": "1722:2:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1715:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 48154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1726:4:41",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1715:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 48156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1715:24:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48157,
                  "nodeType": "ExpressionStatement",
                  "src": "1715:24:41"
                }
              ]
            },
            "documentation": {
              "id": 48128,
              "nodeType": "StructuredDocumentation",
              "src": "1162:172:41",
              "text": "@notice Function to safely mint a new token.\n @dev Only the contract owner can mint new tokens.\n @param to The address that will receive the minted token."
            },
            "functionSelector": "40d097c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48132,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1376:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42930,
                  "src": "1376:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "1376:9:41"
              }
            ],
            "name": "safeMint",
            "nameLocation": "1348:8:41",
            "parameters": {
              "id": 48131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48130,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1365:2:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 48159,
                  "src": "1357:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1357:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1356:12:41"
            },
            "returnParameters": {
              "id": 48134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:0:41"
            },
            "scope": 48258,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48206,
            "nodeType": "FunctionDefinition",
            "src": "1916:595:41",
            "nodes": [],
            "body": {
              "id": 48205,
              "nodeType": "Block",
              "src": "1953:558:41",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 48203,
                    "nodeType": "Block",
                    "src": "2075:430:41",
                    "statements": [
                      {
                        "assignments": [
                          48177
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 48177,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "2138:7:41",
                            "nodeType": "VariableDeclaration",
                            "scope": 48203,
                            "src": "2130:15:41",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 48176,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2130:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 48181,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 48178,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48109,
                              "src": "2148:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$45858_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 48179,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2164:7:41",
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45870,
                            "src": "2148:23:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$45858_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$45858_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 48180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2148:25:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2130:43:41"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 48183,
                                "name": "publicUsers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48113,
                                "src": "2269:11:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 48185,
                              "indexExpression": {
                                "id": 48184,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48166,
                                "src": "2281:1:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2269:14:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 48186,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48177,
                              "src": "2285:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 48182,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              44907,
                              44936
                            ],
                            "referencedDeclaration": 44907,
                            "src": "2259:9:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 48187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2259:34:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48188,
                        "nodeType": "ExpressionStatement",
                        "src": "2259:34:41"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48195,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48177,
                              "src": "2396:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 48189,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48119,
                                "src": "2368:6:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 48193,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 48190,
                                  "name": "publicUsers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48113,
                                  "src": "2375:11:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 48192,
                                "indexExpression": {
                                  "id": 48191,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48166,
                                  "src": "2387:1:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2375:14:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2368:22:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 48194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2391:4:41",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2368:27:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 48196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2368:36:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48197,
                        "nodeType": "ExpressionStatement",
                        "src": "2368:36:41"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 48198,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48109,
                              "src": "2467:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$45858_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 48200,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2483:9:41",
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45884,
                            "src": "2467:25:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$45858_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$45858_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 48201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2467:27:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48202,
                        "nodeType": "ExpressionStatement",
                        "src": "2467:27:41"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48169,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48166,
                      "src": "2046:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 48170,
                        "name": "publicUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48113,
                        "src": "2050:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 48171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2062:6:41",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2050:18:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2046:22:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48204,
                  "initializationExpression": {
                    "assignments": [
                      48166
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 48166,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2039:1:41",
                        "nodeType": "VariableDeclaration",
                        "scope": 48204,
                        "src": "2034:6:41",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 48165,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2034:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 48168,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 48167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2043:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2034:10:41"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 48174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2070:3:41",
                      "subExpression": {
                        "id": 48173,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48166,
                        "src": "2070:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48175,
                    "nodeType": "ExpressionStatement",
                    "src": "2070:3:41"
                  },
                  "nodeType": "ForStatement",
                  "src": "2029:476:41"
                }
              ]
            },
            "documentation": {
              "id": 48160,
              "nodeType": "StructuredDocumentation",
              "src": "1752:159:41",
              "text": "@notice Internal function to airdrop tokens to all addresses in the publicUsers array.\n @dev This function can only be called by the contract owner."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48162,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1943:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42930,
                  "src": "1943:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "1943:9:41"
              }
            ],
            "name": "airDrop",
            "nameLocation": "1925:7:41",
            "parameters": {
              "id": 48161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1932:2:41"
            },
            "returnParameters": {
              "id": 48164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1953:0:41"
            },
            "scope": 48258,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 48216,
            "nodeType": "FunctionDefinition",
            "src": "2720:69:41",
            "nodes": [],
            "body": {
              "id": 48215,
              "nodeType": "Block",
              "src": "2763:26:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48212,
                      "name": "airDrop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48206,
                      "src": "2773:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2773:9:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48214,
                  "nodeType": "ExpressionStatement",
                  "src": "2773:9:41"
                }
              ]
            },
            "documentation": {
              "id": 48207,
              "nodeType": "StructuredDocumentation",
              "src": "2517:198:41",
              "text": "@notice Function to trigger the airDrop function. everyone that has been added to the publicUsers array will receive a token.\n @dev This function can only be called by the contract owner."
            },
            "functionSelector": "83b653ac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48210,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48209,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2753:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42930,
                  "src": "2753:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "2753:9:41"
              }
            ],
            "name": "triggerAirDrop",
            "nameLocation": "2729:14:41",
            "parameters": {
              "id": 48208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2743:2:41"
            },
            "returnParameters": {
              "id": 48211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2763:0:41"
            },
            "scope": 48258,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48231,
            "nodeType": "FunctionDefinition",
            "src": "3010:95:41",
            "nodes": [],
            "body": {
              "id": 48230,
              "nodeType": "Block",
              "src": "3062:43:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48227,
                        "name": "_newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48219,
                        "src": "3089:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48224,
                        "name": "publicUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48113,
                        "src": "3072:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 48226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3084:4:41",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3072:16:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 48228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3072:26:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48229,
                  "nodeType": "ExpressionStatement",
                  "src": "3072:26:41"
                }
              ]
            },
            "documentation": {
              "id": 48217,
              "nodeType": "StructuredDocumentation",
              "src": "2795:210:41",
              "text": "@notice Function to add a new address to the publicUsers array.\n @dev This function can only be called by the contract owner.\n @param _newUser The address to be added to the publicUsers array."
            },
            "functionSelector": "421b2d8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48222,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48221,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3052:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42930,
                  "src": "3052:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "3052:9:41"
              }
            ],
            "name": "addUser",
            "nameLocation": "3019:7:41",
            "parameters": {
              "id": 48220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48219,
                  "mutability": "mutable",
                  "name": "_newUser",
                  "nameLocation": "3035:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 48231,
                  "src": "3027:16:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3027:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3026:18:41"
            },
            "returnParameters": {
              "id": 48223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3062:0:41"
            },
            "scope": 48258,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48244,
            "nodeType": "FunctionDefinition",
            "src": "3313:112:41",
            "nodes": [],
            "body": {
              "id": 48243,
              "nodeType": "Block",
              "src": "3385:40:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48240,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48234,
                        "src": "3410:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48239,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44558,
                      "src": "3402:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 48241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3402:16:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 48238,
                  "id": 48242,
                  "nodeType": "Return",
                  "src": "3395:23:41"
                }
              ]
            },
            "documentation": {
              "id": 48232,
              "nodeType": "StructuredDocumentation",
              "src": "3111:197:41",
              "text": "@notice Function to get the owner of a specific token.\n @param tokenId The ID of the token whose owner is to be returned.\n @return The address of the owner of the specified token."
            },
            "functionSelector": "7f1dd80b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnerOfToken",
            "nameLocation": "3322:15:41",
            "parameters": {
              "id": 48235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48234,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3346:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 48244,
                  "src": "3338:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3338:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3337:17:41"
            },
            "returnParameters": {
              "id": 48238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48237,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48244,
                  "src": "3376:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3375:9:41"
            },
            "scope": 48258,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48257,
            "nodeType": "FunctionDefinition",
            "src": "3641:111:41",
            "nodes": [],
            "body": {
              "id": 48256,
              "nodeType": "Block",
              "src": "3712:40:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48253,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48247,
                        "src": "3739:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48252,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44530,
                      "src": "3729:9:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 48254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3729:16:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 48251,
                  "id": 48255,
                  "nodeType": "Return",
                  "src": "3722:23:41"
                }
              ]
            },
            "documentation": {
              "id": 48245,
              "nodeType": "StructuredDocumentation",
              "src": "3431:205:41",
              "text": "@notice Function to get the balance of tokens for a specific address.\n @param _user The address whose token balance is to be returned.\n @return The token balance of the specified address."
            },
            "functionSelector": "9839d5d6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceOfAddy",
            "nameLocation": "3650:16:41",
            "parameters": {
              "id": 48248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48247,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "3675:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 48257,
                  "src": "3667:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3667:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3666:15:41"
            },
            "returnParameters": {
              "id": 48251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48250,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48257,
                  "src": "3703:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3703:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3702:9:41"
            },
            "scope": 48258,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48098,
              "name": "ERC721",
              "nameLocations": [
                "573:6:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45339,
              "src": "573:6:41"
            },
            "id": 48099,
            "nodeType": "InheritanceSpecifier",
            "src": "573:6:41"
          },
          {
            "baseName": {
              "id": 48100,
              "name": "Ownable",
              "nameLocations": [
                "581:7:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43011,
              "src": "581:7:41"
            },
            "id": 48101,
            "nodeType": "InheritanceSpecifier",
            "src": "581:7:41"
          }
        ],
        "canonicalName": "MyToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 48097,
          "nodeType": "StructuredDocumentation",
          "src": "291:261:41",
          "text": "@title MyToken ERC721 Contract\n @author Christian Reyes \n @notice This contract is an example of an ERC721 token with additional functionalities like airdropping tokens.\n @dev The contract inherits from OpenZeppelin's ERC721 and Ownable contracts."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48258,
          43011,
          45339,
          45500,
          45455,
          46179,
          46191,
          45852
        ],
        "name": "MyToken",
        "nameLocation": "562:7:41",
        "scope": 48259,
        "usedErrors": [],
        "usedEvents": [
          42912,
          45354,
          45363,
          45372
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 41
}